cscope 15 $HOME/lmbench-3.0-a9/src               0000917773
	@bench.h

4 #i‚de‡
_BENCH_H


5 
	#_BENCH_H


	)

7 #ifde‡
WIN32


8 
	~<wödows.h
>

9 
	tboﬁ_t
;

12 
	~<as£π.h
>

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<m©h.h
>

16 #i‚de‡
WIN32


17 
	~<uni°d.h
>

19 
	~<°dlib.h
>

20 
	~<f˙é.h
>

21 
	~<sig«l.h
>

22 
	~<î∫o.h
>

23 #i‚de‡
WIN32


24 
	~<°rögs.h
>

26 
	~<sys/ty≥s.h
>

27 #i‚de‡
WIN32


28 
	~<sys/mm™.h
>

30 
	~<sys/°©.h
>

31 #i‚de‡
WIN32


32 
	~<sys/waô.h
>

33 
	~<time.h
>

34 
	~<sys/time.h
>

35 
	~<sys/sockë.h
>

36 
	~<sys/un.h
>

37 
	~<sys/ªsour˚.h
>

38 
	#PORTMAP


	)

39 
	~<Ωc/Ωc.h
>

41 #ifde‡
HAVE_pm≠_˛¡_h


42 
	~<Ωc/pm≠_˛¡.h
>

44 
	~<Ωc/ty≥s.h
>

45 #ifde‡
HAVE_pm≠_˛¡_h


46 
	~<Ωc/pm≠_˛¡.h
>

49 
	~<°d¨g.h
>

50 #i‚de‡
HAVE_uöt


51 
	tuöt
;

54 #i‚de‡
S_IREAD


55 
	#S_IREAD
 
S_IRUSR


	)

57 #i‚de‡
S_IWRITE


58 
	#S_IWRITE
 
S_IWUSR


	)

60 #i‚de‡
S_IEXEC


61 
	#S_IEXEC
 
S_IXUSR


	)

64 #i‚de‡
HAVE_uöt64


65 #ifde‡
HAVE_uöt64_t


66 
uöt64_t
 
	tuöt64
;

68 
	tuöt64
;

72 #i‚de‡
HAVE_öt64


73 #ifde‡
HAVE_öt64_t


74 
öt64_t
 
	töt64
;

76 
	töt64
;

80 #i‚de‡
HAVE_sockÀn_t


81 
	tsockÀn_t
;

84 #i‚de‡
HAVE_off64_t


85 
öt64
 
	toff64_t
;

88 
	#NO_PORTMAPPER


	)

90 
	~"°©s.h
"

91 
	~"timög.h
"

92 
	~"lib_debug.h
"

93 
	~"lib_t˝.h
"

94 
	~"lib_udp.h
"

95 
	~"lib_unix.h
"

98 #ifdef 
DEBUG


99 
	#debug
(
x
Ë
Ârötf
 
	)
x

101 
	#debug
(
x
)

	)

103 #ifdef 
NO_PORTMAPPER


104 
	#TCP_SELECT
 -31233

	)

105 
	#TCP_XACT
 -31234

	)

106 
	#TCP_CONTROL
 -31235

	)

107 
	#TCP_DATA
 -31236

	)

108 
	#TCP_CONNECT
 -31237

	)

109 
	#UDP_XACT
 -31238

	)

110 
	#UDP_DATA
 -31239

	)

112 
	#TCP_SELECT
 (
u_l⁄g
)404038

	)

113 
	#TCP_XACT
 (
u_l⁄g
)404039

	)

114 
	#TCP_CONTROL
 (
u_l⁄g
)404040

	)

115 
	#TCP_DATA
 (
u_l⁄g
)404041

	)

116 
	#TCP_CONNECT
 (
u_l⁄g
)404042

	)

117 
	#UDP_XACT
 (
u_l⁄g
)404032

	)

118 
	#UDP_DATA
 (
u_l⁄g
)404033

	)

119 
	#VERS
 (
u_l⁄g
)1

	)

122 
	#UNIX_CONTROL
 "/tmp/lmbích.˘l"

	)

123 
	#UNIX_DATA
 "/tmp/lmbích.d©a"

	)

124 
	#UNIX_LAT
 "/tmp/lmbích.œt"

	)

129 
	#SOCKOPT_READ
 0x0001

	)

130 
	#SOCKOPT_WRITE
 0x0002

	)

131 
	#SOCKOPT_RDWR
 0x0003

	)

132 
	#SOCKOPT_PID
 0x0004

	)

133 
	#SOCKOPT_REUSE
 0x0008

	)

134 
	#SOCKOPT_NONE
 0

	)

136 #i‚de‡
SOCKBUF


137 
	#SOCKBUF
 (1024*1024)

	)

140 #i‚def 
XFERSIZE


141 
	#XFERSIZE
 (64*1024Ë

	)

144 #i‡
deföed
(
SYS5
Ë|| deföed(
WIN32
)

145 
	#bzîo
(
b
, 
Àn
Ë
	`mem£t
(b, 0,Üí)

	)

146 
	#bc›y
(
s
, 
d
, 
l
Ë
	`mem˝y
(d, s,Ü)

	)

147 
	#rödex
(
s
, 
c
Ë
	`°ºchr
(s, c)

	)

149 
	#gëtime
 
u£cs_•ít


	)

150 
	#°ªq
 !
°rcmp


	)

151 
	#ul⁄g
 

	)

153 #i‚de‡
HAVE_DRAND48


154 #ifde‡
HAVE_RAND


155 
	#§™d48
 
§™d


	)

156 
	#dønd48
(Ë(()
	`ønd
(Ë/ ()
RAND_MAX
)

	)

157 #ñi‡
deföed
(
HAVE_RANDOM
)

158 
	#§™d48
 
§™dom


	)

159 
	#dønd48
(Ë(()
	`øndom
(Ë/ ()
RAND_MAX
)

	)

163 #ifde‡
WIN32


164 
	~<¥o˚ss.h
>

165 
	#gëpid
 
_gëpid


	)

166 
gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
);

169 
	#SMALLEST_LINE
 32

	)

170 
	#TIME_OPEN2CLOSE


	)

172 
	#GO_AWAY
 
	`sig«l
(
SIGALRM
, 
exô
); 
	`Æ¨m
(60 * 60);

	)

173 
	#REAL_SHORT
 50000

	)

174 
	#SHORT
 1000000

	)

175 
	#MEDIUM
 2000000

	)

176 
	#LONGER
 7500000

	)

177 
	#ENOUGH
 
REAL_SHORT


	)

179 
	#TRIES
 11

	)

182 
uöt64
 
	mu
;

183 
uöt64
 
	mn
;

184 } 
	tvÆue_t
;

187 
	mN
;

188 
vÆue_t
 
	mv
[
TRIES
];

189 } 
	tªsu…_t
;

190 
sizeof_ªsu…
(
N
);

191 
ö£πöô
(
ªsu…_t
 *
r
);

192 
ö£πs‹t
(
uöt64
, uöt64, 
ªsu…_t
 *);

193 
ßve_medün
();

194 
ßve_möimum
();

195 
£t_ªsu…s
(
ªsu…_t
 *
r
);

196 
ªsu…_t
* 
gë_ªsu…s
();

199 
	#BENCHO
(
lo›_body
, 
ovîhód_body
, 
íough
) { \

200 
__i
, 
__N
; \

201 
__oh
; \

202 
ªsu…_t
 
__ovîhód
, 
__r
; \

203 
	`ö£πöô
(&
__ovîhód
); in£πöô(&
__r
); \

204 
__N
 = (
íough
 =0 || 
	`gë_íough
”noughË<100000Ë? 
TRIES
 : 1;\

205 i‡(
íough
 < 
LONGER
Ë{
lo›_body
;} \

206 
__i
 = 0; __ò< 
__N
; ++__i) { \

207 
	`BENCH1
(
ovîhód_body
, 
íough
); \

208 i‡(
	`gëtime
() > 0) \

209 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
__ovîhód
); \

210 
	`BENCH1
(
lo›_body
, 
íough
); \

211 i‡(
	`gëtime
() > 0) \

212 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
__r
); \

214 
__i
 = 0; __ò< 
__r
.
N
; ++__i) { \

215 
__oh
 = 
__ovîhód
.
v
[
__i
].
u
 / ()__ovîhód.v[__i].
n
; \

216 i‡(
__r
.
v
[
__i
].
u
 > (
uöt64
)(()__r.v[__i].
n
 * 
__oh
)) \

217 
__r
.
v
[
__i
].
u
 -(
uöt64
)(()__r.v[__i].
n
 * 
__oh
); \

219 
__r
.
v
[
__i
].
u
 = 0; \

221 *(
	`gë_ªsu…s
()Ë
__r
; \

222 }

	)

224 
	#BENCH
(
lo›_body
, 
íough
) { \

225 
__i
, 
__N
; \

226 
ªsu…_t
 
__r
; \

227 
	`ö£πöô
(&
__r
); \

228 
__N
 = (
íough
 =0 || 
	`gë_íough
”noughË<100000Ë? 
TRIES
 : 1;\

229 i‡(
íough
 < 
LONGER
Ë{
lo›_body
;} \

230 
__i
 = 0; __ò< 
__N
; ++__i) { \

231 
	`BENCH1
(
lo›_body
, 
íough
); \

232 i‡(
	`gëtime
() > 0) \

233 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
__r
); \

235 *(
	`gë_ªsu…s
()Ë
__r
; \

236 }

	)

238 
	#BENCH1
(
lo›_body
, 
íough
) { \

239 
__u£cs
; \

240 
	`BENCH_INNER
(
lo›_body
, 
íough
); \

241 
__u£cs
 = 
	`gëtime
(); \

242 
__u£cs
 -
	`t_ovîhód
(Ë+ 
	`gë_n
(Ë* 
	`l_ovîhód
(); \

243 
	`£âime
(
__u£cs
 >0. ? (
uöt64
)__usecs : 0); \

244 }

	)

246 
	#BENCH_INNER
(
lo›_body
, 
íough
) { \

247 
ôî_t
 
__ôî©i⁄s
 = 1; \

248 
__íough
 = 
	`gë_íough
(
íough
); \

249 
ôî_t
 
__n
; \

250 
__ªsu…
 = 0.; \

252 
__ªsu…
 < 0.95 * 
__íough
) { \

253 
	`°¨t
(0); \

254 
__n
 = 
__ôî©i⁄s
; __n > 0; __n--) { \

255 
lo›_body
; \

257 
__ªsu…
 = 
	`°›
(0,0); \

258 i‡(
__ªsu…
 < 0.99 * 
__íough
 \

259 || 
__ªsu…
 > 1.2 * 
__íough
) { \

260 i‡(
__ªsu…
 > 150.) { \

261 
tmp
 = 
__ôî©i⁄s
 / 
__ªsu…
; \

262 
tmp
 *1.1 * 
__íough
; \

263 
__ôî©i⁄s
 = (
ôî_t
)(
tmp
 + 1); \

265 i‡(
__ôî©i⁄s
 > (
ôî_t
)1<<27) { \

266 
__ªsu…
 = 0.; \

269 
__ôî©i⁄s
 <<= 3; \

273 
	`ßve_n
((
uöt64
)
__ôî©i⁄s
); 
	`£âime
((uöt64)
__ªsu…
); \

274 }

	)

277 
	#gë›t
 
mygë›t


	)

278 
	#›töd
 
my›töd


	)

279 
	#›èrg
 
my›èrg


	)

280 
	#›ãº
 
my›ãº


	)

281 
	#›t›t
 
my›t›t


	)

282 
›töd
;

283 
›ãº
;

284 
›t›t
;

285 *
›èrg
;

286 
gë›t
(
ac
, **
av
, *
›ts
);

287 
lmbích_ußge
(
¨gc
, *
¨gv
[], * 
ußge
);

288 
off64_t
 
£ekto
(
fd
, off64_à
off
, 
whí˚
);

290 
u_l⁄g
 
	tôî_t
;

291 (*
	tbíchmp_f
)(
	tôî_t
 
	tôî©i⁄s
, * 
	tcookõ
);

293 
	`bíchmp
(
bíchmp_f
 
öôülize
,

294 
bíchmp_f
 
bíchm¨k
,

295 
bíchmp_f
 
˛ónup
,

296 
íough
,

297 
∑øŒñ
,

298 
w¨mup
,

299 
ª≥tôi⁄s
,

300 * 
cookõ


307 * 
	`bíchmp_gë°©e
();

308 
ôî_t
 
	`bíchmp_öãrvÆ
(* 
_°©e
);

315 
	`bíchmp_chûdid
();

320 
	`sigchld_waô_h™dÀr
(
signo
);

325 
	`h™dÀ_scheduÀr
(
chûdno
, 
bích¥oc
, 
nbích¥ocs
);

326 
	`sched_pö
(
˝u
);

328 
	~"lib_mem.h
"

344 
	#XACT_PROG
 ((
u_l⁄g
)404040)

	)

345 
	#XACT_VERS
 ((
u_l⁄g
)1)

	)

346 
	#RPC_XACT
 ((
u_l⁄g
)1)

	)

347 
	#RPC_EXIT
 ((
u_l⁄g
)2)

	)

348 *
	`Ωc_xa˘_1
();

349 *
	`˛õ¡_Ωc_xa˘_1
();

	@busy.c

1 vﬁ©ûê
	gi
;

3 
	$maö
()

6 
	`ni˚
(10);

7 ;;Ë
	`gëµid
();

9 
	`exô
(
i
);

10 
	}
}

	@bw_file_rd.c

15 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
	#CHK
(
x
Ëi‡(()(xË=-1Ë{ 
	`≥º‹
(#x); 
	`exô
(1); }

	)

20 #i‚def 
MIN


21 
	#MIN
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

24 
	#TYPE
 

	)

25 
	#MINSZ
 ((
TYPE
Ë* 128)

	)

27 *
	gbuf
;

28 
size_t
 
	gx„rsize
;

29 
size_t
 
	gcou¡
;

31 
	s_°©e
 {

32 
	mfûíame
[256];

33 
	mfd
;

34 
	m˛⁄e
;

35 } 
	t°©e_t
;

37 
	$doô
(
fd
)

39 
size_t
 
size
, 
chunk
;

41 
size
 = 
cou¡
;

42 
chunk
 = 
x„rsize
;

43 
size
 > 0) {

44 i‡(
size
 < 
chunk
) chunk = size;

45 i‡(
	`ªad
(
fd
, 
buf
, 
	`MIN
(
size
, 
chunk
)) <= 0) {

48 
	`bªad
(
buf
, 
	`MIN
(
size
, 
x„rsize
));

49 
size
 -
chunk
;

51 
	}
}

54 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

56 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

58 i‡(
ôî©i⁄s
) ;

60 
°©e
->
fd
 = -1;

61 i‡(
°©e
->
˛⁄e
) {

62 
buf
[128];

63 * 
s
;

66 
	`•rötf
(
buf
, "%d", ()
	`gëpid
());

67 
s
 = (*)
	`mÆloc
(
	`°æí
(
°©e
->
fûíame
Ë+ såÀn(
buf
) + 1);

68 
	`•rötf
(
s
, "%s%d", 
°©e
->
fûíame
, ()
	`gëpid
());

69 i‡(
	`˝
(
°©e
->
fûíame
, 
s
, 
S_IREAD
|
S_IWRITE
) < 0) {

70 
	`≥º‹
("creatingÖrivateÅempfile");

71 
	`u∆ök
(
s
);

72 
	`exô
(1);

74 
	`°r˝y
(
°©e
->
fûíame
, 
s
);

76 
	}
}

79 
	$öô_›í
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

81 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

82 
ofd
;

84 i‡(
ôî©i⁄s
) ;

86 
	`öôülize
(0, 
cookõ
);

87 
	`CHK
(
ofd
 = 
	`›í
(
°©e
->
fûíame
, 
O_RDONLY
));

88 
°©e
->
fd
 = 
ofd
;

89 
	}
}

92 
	$time_wôh_›í
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

94 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

95 *
fûíame
 = 
°©e
->filename;

96 
fd
;

98 
ôî©i⁄s
-- > 0) {

99 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

100 
	`doô
(
fd
);

101 
	`˛o£
(
fd
);

103 
	}
}

106 
	$time_io_⁄ly
(
ôî_t
 
ôî©i⁄s
,* 
cookõ
)

108 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

109 
fd
 = 
°©e
->fd;

111 
ôî©i⁄s
-- > 0) {

112 
	`l£ek
(
fd
, 0, 
SEEK_SET
);

113 
	`doô
(
fd
);

115 
	}
}

118 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

120 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

122 i‡(
ôî©i⁄s
) ;

124 i‡(
°©e
->
fd
 >0Ë
	`˛o£
(state->fd);

125 i‡(
°©e
->
˛⁄e
Ë
	`u∆ök
(°©e->
fûíame
);

126 
	}
}

129 
	$maö
(
ac
, **
av
)

131 
fd
;

132 
°©e_t
 
°©e
;

133 
∑øŒñ
 = 1;

134 
w¨mup
 = 0;

135 
ª≥tôi⁄s
 = -1;

136 
c
;

137 
ußge
[1024];

139 
	`•rötf
(
ußge
,"[-C] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] <size> open2close|io_only <filename>"

140 "\nmö size=%d\n",(Ë(
XFERSIZE
>>10)) ;

142 
°©e
.
˛⁄e
 = 0;

144 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:C")Ë!
EOF
) {

145 
c
) {

147 
∑øŒñ
 = 
	`©oi
(
›èrg
);

148 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

151 
w¨mup
 = 
	`©oi
(
›èrg
);

154 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

157 
°©e
.
˛⁄e
 = 1;

160 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

165 i‡(
›töd
 + 3 !
ac
) {

166 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

169 
	`°r˝y
(
°©e
.
fûíame
,
av
[
›töd
+2]);

170 
cou¡
 = 
	`byãs
(
av
[
›töd
]);

171 i‡(
cou¡
 < 
MINSZ
) {

172 
	`exô
(1);

174 i‡(
cou¡
 < 
XFERSIZE
) {

175 
x„rsize
 = 
cou¡
;

177 
x„rsize
 = 
XFERSIZE
;

179 
buf
 = (*)
	`vÆloc
(
XFERSIZE
);

180 
	`bzîo
(
buf
, 
XFERSIZE
);

182 i‡(!
	`°rcmp
("›í2˛o£", 
av
[
›töd
+1])) {

183 
	`bíchmp
(
öôülize
, 
time_wôh_›í
, 
˛ónup
,

184 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

185 } i‡(!
	`°rcmp
("io_⁄ly", 
av
[
›töd
+1])) {

186 
	`bíchmp
(
öô_›í
, 
time_io_⁄ly
, 
˛ónup
,

187 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

188 } 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

189 
	`b™dwidth
(
cou¡
, 
	`gë_n
(Ë* 
∑øŒñ
, 0);

191 
	}
}

	@bw_mem.c

13 *
	gid
 = "$Id$";

15 
	~"bích.h
"

17 
	#TYPE
 

	)

32 
rd
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

33 
wr
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

34 
rdwr
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

35 
m˝
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

36 
fwr
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

37 
‰d
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

38 
f˝
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

39 
lo›_bzîo
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

40 
lo›_bc›y
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

41 
öô_ovîhód
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

42 
öô_lo›
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

43 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

45 
	s_°©e
 {

46 
	movîhód
;

47 
size_t
 
	mnbyãs
;

48 
	m√ed_buf2
;

49 
	mÆig√d
;

50 
TYPE
 *
	mbuf
;

51 
TYPE
 *
	mbuf2
;

52 
TYPE
 *
	mbuf2_‹ig
;

53 
TYPE
 *
	mœ°⁄e
;

54 
size_t
 
	mN
;

55 } 
	t°©e_t
;

57 
adju°ed_b™dwidth
(
uöt64
 
t
, uöt64 
b
, uöt64 
ôî
, 
ovrhd
);

60 
	$maö
(
ac
, **
av
)

62 
∑øŒñ
 = 1;

63 
w¨mup
 = 0;

64 
ª≥tôi⁄s
 = -1;

65 
size_t
 
nbyãs
;

66 
°©e_t
 
°©e
;

67 
c
;

68 *
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>] <size> what [conflict]\nwhat:Ñd wrÑdwr cp fwr frd fcp bzero bcopy\n<size> must beÜargerÅhan 512";

70 
°©e
.
ovîhód
 = 0;

72 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

73 
c
) {

75 
∑øŒñ
 = 
	`©oi
(
›èrg
);

76 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

79 
w¨mup
 = 
	`©oi
(
›èrg
);

82 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

85 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

91 
°©e
.
Æig√d
 = sèã.
√ed_buf2
 = 0;

92 i‡(
›töd
 + 3 =
ac
) {

93 
°©e
.
Æig√d
 = 1;

94 } i‡(
›töd
 + 2 !
ac
) {

95 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

98 
nbyãs
 = 
°©e
.nbyã†
	`byãs
(
av
[
›töd
]);

99 i‡(
°©e
.
nbyãs
 < 512) {

100 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

103 i‡(
	`°ªq
(
av
[
›töd
+1], "cp") ||

104 
	`°ªq
(
av
[
›töd
+1], "fcp") || streq(av[optind+1], "bcopy")) {

105 
°©e
.
√ed_buf2
 = 1;

108 i‡(
	`°ªq
(
av
[
›töd
+1], "rd")) {

109 
	`bíchmp
(
öô_lo›
, 
rd
, 
˛ónup
, 0, 
∑øŒñ
,

110 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

111 } i‡(
	`°ªq
(
av
[
›töd
+1], "wr")) {

112 
	`bíchmp
(
öô_lo›
, 
wr
, 
˛ónup
, 0, 
∑øŒñ
,

113 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

114 } i‡(
	`°ªq
(
av
[
›töd
+1], "rdwr")) {

115 
	`bíchmp
(
öô_lo›
, 
rdwr
, 
˛ónup
, 0, 
∑øŒñ
,

116 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

117 } i‡(
	`°ªq
(
av
[
›töd
+1], "cp")) {

118 
	`bíchmp
(
öô_lo›
, 
m˝
, 
˛ónup
, 0, 
∑øŒñ
,

119 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

120 } i‡(
	`°ªq
(
av
[
›töd
+1], "frd")) {

121 
	`bíchmp
(
öô_lo›
, 
‰d
, 
˛ónup
, 0, 
∑øŒñ
,

122 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

123 } i‡(
	`°ªq
(
av
[
›töd
+1], "fwr")) {

124 
	`bíchmp
(
öô_lo›
, 
fwr
, 
˛ónup
, 0, 
∑øŒñ
,

125 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

126 } i‡(
	`°ªq
(
av
[
›töd
+1], "fcp")) {

127 
	`bíchmp
(
öô_lo›
, 
f˝
, 
˛ónup
, 0, 
∑øŒñ
,

128 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

129 } i‡(
	`°ªq
(
av
[
›töd
+1], "bzero")) {

130 
	`bíchmp
(
öô_lo›
, 
lo›_bzîo
, 
˛ónup
, 0, 
∑øŒñ
,

131 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

132 } i‡(
	`°ªq
(
av
[
›töd
+1], "bcopy")) {

133 
	`bíchmp
(
öô_lo›
, 
lo›_bc›y
, 
˛ónup
, 0, 
∑øŒñ
,

134 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

136 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

138 
	`adju°ed_b™dwidth
(
	`gëtime
(), 
nbyãs
,

139 
	`gë_n
(Ë* 
∑øŒñ
, 
°©e
.
ovîhód
);

141 
	}
}

144 
	$öô_ovîhód
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

146 
	}
}

149 
	$öô_lo›
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

151 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

153 i‡(
ôî©i⁄s
) ;

155 
°©e
->
buf
 = (
TYPE
 *)
	`vÆloc
(°©e->
nbyãs
);

156 
°©e
->
buf2_‹ig
 = 
NULL
;

157 
°©e
->
œ°⁄e
 = (
TYPE
*)°©e->
buf
 - 1;

158 
°©e
->
œ°⁄e
 = (
TYPE
*)((*)°©e->
buf
 + sèã->
nbyãs
 - 512);

159 
°©e
->
N
 = sèã->
nbyãs
;

161 i‡(!
°©e
->
buf
) {

162 
	`≥º‹
("malloc");

163 
	`exô
(1);

165 
	`bzîo
((*)
°©e
->
buf
, sèã->
nbyãs
);

167 i‡(
°©e
->
√ed_buf2
 == 1) {

168 
°©e
->
buf2_‹ig
 = sèã->
buf2
 = (
TYPE
 *)
	`vÆloc
(°©e->
nbyãs
 + 2048);

169 i‡(!
°©e
->
buf2
) {

170 
	`≥º‹
("malloc");

171 
	`exô
(1);

176 i‡(
°©e
->
Æig√d
) {

177 *
tmp
 = (*)
°©e
->
buf2
;

179 
tmp
 += 2048 - 128;

180 
°©e
->
buf2
 = (
TYPE
 *)
tmp
;

183 
	}
}

186 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

188 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

190 i‡(
ôî©i⁄s
) ;

192 
	`‰ì
(
°©e
->
buf
);

193 i‡(
°©e
->
buf2_‹ig
Ë
	`‰ì
(state->buf2_orig);

194 
	}
}

197 
	$rd
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

199 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

200 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

201 
sum
 = 0;

203 
ôî©i⁄s
-- > 0) {

204 
TYPE
 *
p
 = 
°©e
->
buf
;

205 
p
 <
œ°⁄e
) {

206 
sum
 +=

207 
	#DOIT
(
i
Ë
p
[i]+

	)

208 
	`DOIT
(0) DOIT(4) DOIT(8) DOIT(12) DOIT(16) DOIT(20) DOIT(24)

209 
	`DOIT
(28) DOIT(32) DOIT(36) DOIT(40) DOIT(44) DOIT(48) DOIT(52)

210 
	`DOIT
(56) DOIT(60) DOIT(64) DOIT(68) DOIT(72) DOIT(76)

211 
	`DOIT
(80) DOIT(84) DOIT(88) DOIT(92) DOIT(96) DOIT(100)

212 
	`DOIT
(104) DOIT(108) DOIT(112) DOIT(116) DOIT(120)

213 
p
[124];

214 
p
 += 128;

217 
	`u£_öt
(
sum
);

218 
	}
}

219 #unde‡
DOIT


222 
	$wr
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

224 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

225 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

227 
ôî©i⁄s
-- > 0) {

228 
TYPE
 *
p
 = 
°©e
->
buf
;

229 
p
 <
œ°⁄e
) {

230 
	#DOIT
(
i
Ë
p
[i] = 1;

	)

231 
	`DOIT
(0) DOIT(4) DOIT(8) DOIT(12) DOIT(16) DOIT(20) DOIT(24)

232 
	`DOIT
(28) DOIT(32) DOIT(36) DOIT(40) DOIT(44) DOIT(48) DOIT(52)

233 
	`DOIT
(56) DOIT(60) DOIT(64) DOIT(68) DOIT(72) DOIT(76)

234 
	`DOIT
(80) DOIT(84) DOIT(88) DOIT(92) DOIT(96) DOIT(100)

235 
	`DOIT
(104) DOIT(108) DOIT(112) DOIT(116) DOIT(120) DOIT(124);

236 
p
 += 128;

239 
	}
}

240 #unde‡
DOIT


243 
	$rdwr
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

245 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

246 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

247 
sum
 = 0;

249 
ôî©i⁄s
-- > 0) {

250 
TYPE
 *
p
 = 
°©e
->
buf
;

251 
p
 <
œ°⁄e
) {

252 
	#DOIT
(
i
Ë
sum
 +
p
[i];Ö[i] = 1;

	)

253 
	`DOIT
(0) DOIT(4) DOIT(8) DOIT(12) DOIT(16) DOIT(20) DOIT(24)

254 
	`DOIT
(28) DOIT(32) DOIT(36) DOIT(40) DOIT(44) DOIT(48) DOIT(52)

255 
	`DOIT
(56) DOIT(60) DOIT(64) DOIT(68) DOIT(72) DOIT(76)

256 
	`DOIT
(80) DOIT(84) DOIT(88) DOIT(92) DOIT(96) DOIT(100)

257 
	`DOIT
(104) DOIT(108) DOIT(112) DOIT(116) DOIT(120) DOIT(124);

258 
p
 += 128;

261 
	`u£_öt
(
sum
);

262 
	}
}

263 #unde‡
DOIT


266 
	$m˝
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

268 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

269 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

270 
TYPE
* 
p_ßve
 = 
NULL
;

272 
ôî©i⁄s
-- > 0) {

273 
TYPE
 *
p
 = 
°©e
->
buf
;

274 
TYPE
 *
d°
 = 
°©e
->
buf2
;

275 
p
 <
œ°⁄e
) {

276 
	#DOIT
(
i
Ë
d°
[i] = 
p
[i];

	)

277 
	`DOIT
(0) DOIT(4) DOIT(8) DOIT(12) DOIT(16) DOIT(20) DOIT(24)

278 
	`DOIT
(28) DOIT(32) DOIT(36) DOIT(40) DOIT(44) DOIT(48) DOIT(52)

279 
	`DOIT
(56) DOIT(60) DOIT(64) DOIT(68) DOIT(72) DOIT(76)

280 
	`DOIT
(80) DOIT(84) DOIT(88) DOIT(92) DOIT(96) DOIT(100)

281 
	`DOIT
(104) DOIT(108) DOIT(112) DOIT(116) DOIT(120) DOIT(124);

282 
p
 += 128;

283 
d°
 += 128;

285 
p_ßve
 = 
p
;

287 
	`u£_poöãr
(
p_ßve
);

288 
	}
}

289 #unde‡
DOIT


292 
	$fwr
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

294 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

295 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

296 
TYPE
* 
p_ßve
 = 
NULL
;

298 
ôî©i⁄s
-- > 0) {

299 
TYPE
 *
p
 = 
°©e
->
buf
;

300 
p
 <
œ°⁄e
) {

301 
	#DOIT
(
i
Ë
p
[i]=

	)

302 
	`DOIT
(0) DOIT(1) DOIT(2) DOIT(3) DOIT(4) DOIT(5) DOIT(6)

303 
	`DOIT
(7) DOIT(8) DOIT(9) DOIT(10) DOIT(11) DOIT(12)

304 
	`DOIT
(13) DOIT(14) DOIT(15) DOIT(16) DOIT(17) DOIT(18)

305 
	`DOIT
(19) DOIT(20) DOIT(21) DOIT(22) DOIT(23) DOIT(24)

306 
	`DOIT
(25) DOIT(26) DOIT(27) DOIT(28) DOIT(29) DOIT(30)

307 
	`DOIT
(31) DOIT(32) DOIT(33) DOIT(34) DOIT(35) DOIT(36)

308 
	`DOIT
(37) DOIT(38) DOIT(39) DOIT(40) DOIT(41) DOIT(42)

309 
	`DOIT
(43) DOIT(44) DOIT(45) DOIT(46) DOIT(47) DOIT(48)

310 
	`DOIT
(49) DOIT(50) DOIT(51) DOIT(52) DOIT(53) DOIT(54)

311 
	`DOIT
(55) DOIT(56) DOIT(57) DOIT(58) DOIT(59) DOIT(60)

312 
	`DOIT
(61) DOIT(62) DOIT(63) DOIT(64) DOIT(65) DOIT(66)

313 
	`DOIT
(67) DOIT(68) DOIT(69) DOIT(70) DOIT(71) DOIT(72)

314 
	`DOIT
(73) DOIT(74) DOIT(75) DOIT(76) DOIT(77) DOIT(78)

315 
	`DOIT
(79) DOIT(80) DOIT(81) DOIT(82) DOIT(83) DOIT(84)

316 
	`DOIT
(85) DOIT(86) DOIT(87) DOIT(88) DOIT(89) DOIT(90)

317 
	`DOIT
(91) DOIT(92) DOIT(93) DOIT(94) DOIT(95) DOIT(96)

318 
	`DOIT
(97) DOIT(98) DOIT(99) DOIT(100) DOIT(101) DOIT(102)

319 
	`DOIT
(103) DOIT(104) DOIT(105) DOIT(106) DOIT(107)

320 
	`DOIT
(108) DOIT(109) DOIT(110) DOIT(111) DOIT(112)

321 
	`DOIT
(113) DOIT(114) DOIT(115) DOIT(116) DOIT(117)

322 
	`DOIT
(118) DOIT(119) DOIT(120) DOIT(121) DOIT(122)

323 
	`DOIT
(123) DOIT(124) DOIT(125) DOIT(126) DOIT(127) 1;

324 
p
 += 128;

326 
p_ßve
 = 
p
;

328 
	`u£_poöãr
(
p_ßve
);

329 
	}
}

330 #unde‡
DOIT


333 
	$‰d
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

335 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

336 
sum
 = 0;

337 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

339 
ôî©i⁄s
-- > 0) {

340 
TYPE
 *
p
 = 
°©e
->
buf
;

341 
p
 <
œ°⁄e
) {

342 
sum
 +=

343 
	#DOIT
(
i
Ë
p
[i]+

	)

344 
	`DOIT
(0) DOIT(1) DOIT(2) DOIT(3) DOIT(4) DOIT(5) DOIT(6)

345 
	`DOIT
(7) DOIT(8) DOIT(9) DOIT(10) DOIT(11) DOIT(12)

346 
	`DOIT
(13) DOIT(14) DOIT(15) DOIT(16) DOIT(17) DOIT(18)

347 
	`DOIT
(19) DOIT(20) DOIT(21) DOIT(22) DOIT(23) DOIT(24)

348 
	`DOIT
(25) DOIT(26) DOIT(27) DOIT(28) DOIT(29) DOIT(30)

349 
	`DOIT
(31) DOIT(32) DOIT(33) DOIT(34) DOIT(35) DOIT(36)

350 
	`DOIT
(37) DOIT(38) DOIT(39) DOIT(40) DOIT(41) DOIT(42)

351 
	`DOIT
(43) DOIT(44) DOIT(45) DOIT(46) DOIT(47) DOIT(48)

352 
	`DOIT
(49) DOIT(50) DOIT(51) DOIT(52) DOIT(53) DOIT(54)

353 
	`DOIT
(55) DOIT(56) DOIT(57) DOIT(58) DOIT(59) DOIT(60)

354 
	`DOIT
(61) DOIT(62) DOIT(63) DOIT(64) DOIT(65) DOIT(66)

355 
	`DOIT
(67) DOIT(68) DOIT(69) DOIT(70) DOIT(71) DOIT(72)

356 
	`DOIT
(73) DOIT(74) DOIT(75) DOIT(76) DOIT(77) DOIT(78)

357 
	`DOIT
(79) DOIT(80) DOIT(81) DOIT(82) DOIT(83) DOIT(84)

358 
	`DOIT
(85) DOIT(86) DOIT(87) DOIT(88) DOIT(89) DOIT(90)

359 
	`DOIT
(91) DOIT(92) DOIT(93) DOIT(94) DOIT(95) DOIT(96)

360 
	`DOIT
(97) DOIT(98) DOIT(99) DOIT(100) DOIT(101) DOIT(102)

361 
	`DOIT
(103) DOIT(104) DOIT(105) DOIT(106) DOIT(107)

362 
	`DOIT
(108) DOIT(109) DOIT(110) DOIT(111) DOIT(112)

363 
	`DOIT
(113) DOIT(114) DOIT(115) DOIT(116) DOIT(117)

364 
	`DOIT
(118) DOIT(119) DOIT(120) DOIT(121) DOIT(122)

365 
	`DOIT
(123ËDOIT(124ËDOIT(125ËDOIT(126Ë
p
[127];

366 
p
 += 128;

369 
	`u£_öt
(
sum
);

370 
	}
}

371 #unde‡
DOIT


374 
	$f˝
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

376 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

377 
TYPE
 *
œ°⁄e
 = 
°©e
->lastone;

379 
ôî©i⁄s
-- > 0) {

380 
TYPE
 *
p
 = 
°©e
->
buf
;

381 
TYPE
 *
d°
 = 
°©e
->
buf2
;

382 
p
 <
œ°⁄e
) {

383 
	#DOIT
(
i
Ë
d°
[i]=
p
[i];

	)

384 
	`DOIT
(0) DOIT(1) DOIT(2) DOIT(3) DOIT(4) DOIT(5) DOIT(6)

385 
	`DOIT
(7) DOIT(8) DOIT(9) DOIT(10) DOIT(11) DOIT(12)

386 
	`DOIT
(13) DOIT(14) DOIT(15) DOIT(16) DOIT(17) DOIT(18)

387 
	`DOIT
(19) DOIT(20) DOIT(21) DOIT(22) DOIT(23) DOIT(24)

388 
	`DOIT
(25) DOIT(26) DOIT(27) DOIT(28) DOIT(29) DOIT(30)

389 
	`DOIT
(31) DOIT(32) DOIT(33) DOIT(34) DOIT(35) DOIT(36)

390 
	`DOIT
(37) DOIT(38) DOIT(39) DOIT(40) DOIT(41) DOIT(42)

391 
	`DOIT
(43) DOIT(44) DOIT(45) DOIT(46) DOIT(47) DOIT(48)

392 
	`DOIT
(49) DOIT(50) DOIT(51) DOIT(52) DOIT(53) DOIT(54)

393 
	`DOIT
(55) DOIT(56) DOIT(57) DOIT(58) DOIT(59) DOIT(60)

394 
	`DOIT
(61) DOIT(62) DOIT(63) DOIT(64) DOIT(65) DOIT(66)

395 
	`DOIT
(67) DOIT(68) DOIT(69) DOIT(70) DOIT(71) DOIT(72)

396 
	`DOIT
(73) DOIT(74) DOIT(75) DOIT(76) DOIT(77) DOIT(78)

397 
	`DOIT
(79) DOIT(80) DOIT(81) DOIT(82) DOIT(83) DOIT(84)

398 
	`DOIT
(85) DOIT(86) DOIT(87) DOIT(88) DOIT(89) DOIT(90)

399 
	`DOIT
(91) DOIT(92) DOIT(93) DOIT(94) DOIT(95) DOIT(96)

400 
	`DOIT
(97) DOIT(98) DOIT(99) DOIT(100) DOIT(101) DOIT(102)

401 
	`DOIT
(103) DOIT(104) DOIT(105) DOIT(106) DOIT(107)

402 
	`DOIT
(108) DOIT(109) DOIT(110) DOIT(111) DOIT(112)

403 
	`DOIT
(113) DOIT(114) DOIT(115) DOIT(116) DOIT(117)

404 
	`DOIT
(118) DOIT(119) DOIT(120) DOIT(121) DOIT(122)

405 
	`DOIT
(123) DOIT(124) DOIT(125) DOIT(126) DOIT(127)

406 
p
 += 128;

407 
d°
 += 128;

410 
	}
}

413 
	$lo›_bzîo
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

415 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

416 
TYPE
 *
p
 = 
°©e
->
buf
;

417 
size_t
 
N
 = 
°©e
->N;

419 
ôî©i⁄s
-- > 0) {

420 
	`bzîo
(
p
, 
N
);

422 
	}
}

425 
	$lo›_bc›y
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

427 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

428 
TYPE
 *
p
 = 
°©e
->
buf
;

429 
TYPE
 *
d°
 = 
°©e
->
buf2
;

430 
size_t
 
N
 = 
°©e
->N;

432 
ôî©i⁄s
-- > 0) {

433 
	`bc›y
(
p
,
d°
,
N
);

435 
	}
}

441 
	$adju°ed_b™dwidth
(
uöt64
 
time
, uöt64 
byãs
, uöt64 
ôî
, 
ovîhd
)

443 
	#MB
 (1000. * 1000.)

	)

444 
FILE
 *
·imög
;

445 
£cs
 = (()
time
 / ()
ôî
 - 
ovîhd
) / 1000000.0;

446 
mb
;

448 
mb
 = 
byãs
 / 
MB
;

450 i‡(
£cs
 <= 0.)

453 i‡(!
·imög
Ë·imög = 
°dîr
;

454 i‡(
mb
 < 1.) {

455 (Ë
	`Ârötf
(
·imög
, "%.6‡", 
mb
);

457 (Ë
	`Ârötf
(
·imög
, "%.2‡", 
mb
);

459 i‡(
mb
 / 
£cs
 < 1.) {

460 (Ë
	`Ârötf
(
·imög
, "%.6f\n", 
mb
/
£cs
);

462 (Ë
	`Ârötf
(
·imög
, "%.2f\n", 
mb
/
£cs
);

464 
	}
}

	@bw_mmap_rd.c

17 *
	gid
 = "$Id$\n";

19 
	~"bích.h
"

20 #ifde‡
MAP_FILE


21 
	#MMAP_FLAGS
 
MAP_FILE
|
MAP_SHARED


	)

23 
	#MMAP_FLAGS
 
MAP_SHARED


	)

26 
	#TYPE
 

	)

27 
	#MINSZ
 ((
TYPE
Ë* 128)

	)

28 
	#CHK
(
x
Ëi‡(()(xË=-1Ë{ 
	`≥º‹
("x"); 
	`exô
(1); }

	)

30 
	s_°©e
 {

31 
size_t
 
	mnbyãs
;

32 
	mfûíame
[256];

33 
	mfd
;

34 
	m˛⁄e
;

35 *
	mbuf
;

36 } 
	t°©e_t
;

38 
time_no_›í
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

39 
time_wôh_›í
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

40 
öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

41 
öô_›í
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

42 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

45 
	$maö
(
ac
, **
av
)

47 
°©
 
sbuf
;

48 
∑øŒñ
 = 1;

49 
w¨mup
 = 0;

50 
ª≥tôi⁄s
 = -1;

51 
size_t
 
nbyãs
;

52 
°©e_t
 
°©e
;

53 
c
;

54 *
ußge
 = "[-C] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] <size> open2close|mmap_only <filename>";

56 
°©e
.
˛⁄e
 = 0;

58 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:C")Ë!
EOF
) {

59 
c
) {

61 
∑øŒñ
 = 
	`©oi
(
›èrg
);

62 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

65 
w¨mup
 = 
	`©oi
(
›èrg
);

68 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

71 
°©e
.
˛⁄e
 = 1;

74 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

80 i‡(
›töd
 + 3 !
ac
) {

81 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

84 
nbyãs
 = 
°©e
.nbyã†
	`byãs
(
av
[
›töd
]);

85 
	`°r˝y
(
°©e
.
fûíame
,
av
[
›töd
+2]);

86 
	`CHK
(
	`°©
(
°©e
.
fûíame
, &
sbuf
));

87 i‡((
	`S_ISREG
(
sbuf
.
°_mode
Ë&& 
nbyãs
 > sbuf.
°_size
)

88 || (
nbyãs
 < 
MINSZ
)) {

89 
	`Ârötf
(
°dîr
,"<size> out ofÑange!\n");

90 
	`exô
(1);

93 i‡(!
	`°rcmp
("›í2˛o£", 
av
[
›töd
+1])) {

94 
	`bíchmp
(
öôülize
, 
time_wôh_›í
, 
˛ónup
,

95 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

96 } i‡(!
	`°rcmp
("mm≠_⁄ly", 
av
[
›töd
+1])) {

97 
	`bíchmp
(
öô_›í
, 
time_no_›í
, 
˛ónup
,

98 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

100 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

102 
	`b™dwidth
(
nbyãs
, 
	`gë_n
(Ë* 
∑øŒñ
, 0);

104 
	}
}

107 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

109 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

111 i‡(
ôî©i⁄s
) ;

113 
°©e
->
fd
 = -1;

114 
°©e
->
buf
 = 
NULL
;

116 i‡(
°©e
->
˛⁄e
) {

117 
buf
[8192];

118 * 
s
;

121 
	`•rötf
(
buf
, "%d", ()
	`gëpid
());

122 
s
 = (*)
	`mÆloc
(
	`°æí
(
°©e
->
fûíame
Ë+ såÀn(
buf
) + 1);

123 
	`•rötf
(
s
, "%s%d", 
°©e
->
fûíame
, ()
	`gëpid
());

124 i‡(
	`˝
(
°©e
->
fûíame
, 
s
, 
S_IREAD
|
S_IWRITE
) < 0) {

125 
	`≥º‹
("creatingÖrivateÅempfile");

126 
	`u∆ök
(
s
);

127 
	`exô
(1);

129 
	`°r˝y
(
°©e
->
fûíame
, 
s
);

131 
	}
}

134 
	$öô_›í
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

136 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

138 i‡(
ôî©i⁄s
) ;

140 
	`öôülize
(0, 
cookõ
);

141 
	`CHK
(
°©e
->
fd
 = 
	`›í
(°©e->
fûíame
, 0));

142 
	`CHK
(
°©e
->
buf
 = 
	`mm≠
(0, sèã->
nbyãs
, 
PROT_READ
,

143 
MMAP_FLAGS
, 
°©e
->
fd
, 0));

144 
	}
}

147 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

149 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

151 i‡(
ôî©i⁄s
) ;

152 i‡(
°©e
->
buf
Ë
	`munm≠
(°©e->buf, sèã->
nbyãs
);

153 i‡(
°©e
->
fd
 >0Ë
	`˛o£
(state->fd);

154 i‡(
°©e
->
˛⁄e
Ë
	`u∆ök
(°©e->
fûíame
);

155 
	}
}

158 
	$time_no_›í
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

160 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

162 
ôî©i⁄s
-- > 0) {

163 
	`bªad
(
°©e
->
buf
, sèã->
nbyãs
);

165 
	}
}

168 
	$time_wôh_›í
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

170 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

171 *
fûíame
 = 
°©e
->filename;

172 
size_t
 
nbyãs
 = 
°©e
->nbytes;

173 
fd
;

174 *
p
;

176 
ôî©i⁄s
-- > 0) {

177 
	`CHK
(
fd
 = 
	`›í
(
fûíame
, 0));

178 
	`CHK
(
p
 = 
	`mm≠
(0, 
nbyãs
, 
PROT_READ
, 
MMAP_FLAGS
, 
fd
, 0));

179 
	`bªad
(
p
, 
nbyãs
);

180 
	`˛o£
(
fd
);

181 
	`munm≠
(
p
, 
nbyãs
);

183 
	}
}

	@bw_pipe.c

15 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
ªadî
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

20 
wrôî
(
wrôefd
, * 
buf
, 
size_t
 
x„r
);

22 
	gXFER
 = 10*1024*1024;

24 
	s_°©e
 {

25 
	mpid
;

26 
size_t
 
	mx„r
;

27 
size_t
 
	mbyãs
;

28 *
	mbuf
;

29 
	mªadfd
;

33 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

35 
pùes
[2];

36 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

38 i‡(
ôî©i⁄s
) ;

40 i‡(
	`pùe
(
pùes
) == -1) {

41 
	`≥º‹
("pipe");

42 
	`exô
(1);

44 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

45 
°©e
->
pid
 = 
	`f‹k
()) {

47 
	`˛o£
(
pùes
[0]);

48 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

49 
°©e
->
buf
 = 
	`vÆloc
(°©e->
x„r
);

50 i‡(
°©e
->
buf
 =
NULL
) {

51 
	`≥º‹
("child:Ço memory");

52 
	`exô
(2);

54 
	`touch
(
°©e
->
buf
, sèã->
x„r
);

55 
	`wrôî
(
pùes
[1], 
°©e
->
buf
, sèã->
x„r
);

60 
	`≥º‹
("fork");

61 
	`exô
(3);

67 
	`˛o£
(
pùes
[1]);

68 
°©e
->
ªadfd
 = 
pùes
[0];

69 
°©e
->
buf
 = 
	`vÆloc
(°©e->
x„r
 + 
	`gë∑gesize
());

70 i‡(
°©e
->
buf
 =
NULL
) {

71 
	`≥º‹
("parent:Ço memory");

72 
	`exô
(4);

74 
	`touch
(
°©e
->
buf
, sèã->
x„r
 + 
	`gë∑gesize
());

75 
°©e
->
buf
 += 128;

76 
	}
}

79 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

81 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

83 i‡(
ôî©i⁄s
) ;

85 
	`˛o£
(
°©e
->
ªadfd
);

86 i‡(
°©e
->
pid
 > 0) {

87 
	`kûl
(
°©e
->
pid
, 
SIGKILL
);

88 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

90 
°©e
->
pid
 = 0;

91 
	}
}

94 
	$ªadî
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

96 
size_t
 
d⁄e
;

97 
ssize_t
 
n
;

98 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

100 
ôî©i⁄s
-- > 0) {

101 
d⁄e
 = 0; d⁄ê< 
°©e
->
byãs
; d⁄ê+
n
) {

102 i‡((
n
 = 
	`ªad
(
°©e
->
ªadfd
, sèã->
buf
, sèã->
x„r
)) < 0) {

103 
	`≥º‹
("bw_pipe:Ñeader:Érror inÑead");

104 
	`exô
(1);

108 
	}
}

111 
	$wrôî
(
wrôefd
, * 
buf
, 
size_t
 
x„r
)

113 
size_t
 
d⁄e
;

114 
ssize_t
 
n
;

117 #ifde‡
TOUCH


118 
	`touch
(
buf
, 
x„r
);

120 
d⁄e
 = 0; d⁄ê< 
x„r
; d⁄ê+
n
) {

121 i‡((
n
 = 
	`wrôe
(
wrôefd
, 
buf
, 
x„r
 - 
d⁄e
)) < 0) {

122 
	`exô
(0);

126 
	}
}

129 
	$maö
(
ac
, *
av
[])

131 
_°©e
 
°©e
;

132 
∑øŒñ
 = 1;

133 
w¨mup
 = 0;

134 
ª≥tôi⁄s
 = -1;

135 
c
;

136 * 
ußge
 = "[-m <message size>] [-M <total bytes>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

138 
°©e
.
x„r
 = 
XFERSIZE
;

139 
°©e
.
byãs
 = 
XFER
;

141 –
c
 = 
	`gë›t
(
ac
, 
av
, "m:M:P:W:N:")Ë!
EOF
) {

142 
c
) {

144 
°©e
.
x„r
 = 
	`byãs
(
›èrg
);

147 
°©e
.
byãs
 = 
	`byãs
(
›èrg
);

150 
∑øŒñ
 = 
	`©oi
(
›èrg
);

151 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

154 
w¨mup
 = 
	`©oi
(
›èrg
);

157 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

160 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

164 i‡(
›töd
 < 
ac
) {

165 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

168 i‡(
°©e
.
byãs
 < sèã.
x„r
) {

169 
°©e
.
byãs
 = sèã.
x„r
;

170 } i‡(
°©e
.
byãs
 % sèã.
x„r
) {

171 
°©e
.
byãs
 +°©e.byã†- sèã.byã†% sèã.
x„r
;

173 
	`bíchmp
(
öôülize
, 
ªadî
, 
˛ónup
, 
MEDIUM
, 
∑øŒñ
,

174 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

176 i‡(
	`gëtime
() > 0) {

177 
	`Ârötf
(
°dîr
, "Pipe bandwidth: ");

178 
	`mb
(
	`gë_n
(Ë* 
∑øŒñ
 * 
°©e
.
byãs
);

181 
	}
}

	@bw_tcp.c

16 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
	s_°©e
 {

20 
	msock
;

21 
uöt64
 
	mmove
;

22 
size_t
 
	mmsize
;

23 *
	m£rvî
;

24 
	mfd
;

25 *
	mbuf
;

26 } 
	t°©e_t
;

28 
£rvî_maö
();

29 
˛õ¡_maö
(
∑øŒñ
, 
°©e_t
 *
°©e
);

30 
sour˚
(
d©a
);

32 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

33 
lo›_å™s„r
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

34 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

37 
	$maö
(
ac
, **
av
)

39 
∑øŒñ
 = 1;

40 
w¨mup
 = 
LONGER
;

41 
ª≥tôi⁄s
 = -1;

42 
shutdown
 = 0;

43 
°©e_t
 
°©e
;

44 *
ußge
 = "-s\n OR [-m <message size>] [-M <bytesÅo move>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] server\n OR -S serverhost\n";

45 
c
;

47 
°©e
.
msize
 = 0;

48 
°©e
.
move
 = 0;

51 –
c
 = 
	`gë›t
(
ac
, 
av
, "sS:m:M:P:W:N:")Ë!
EOF
) {

52 
c
) {

54 i‡(
	`f‹k
() == 0) {

55 
	`£rvî_maö
();

57 
	`exô
(0);

61 
c⁄n
;

62 
c⁄n
 = 
	`t˝_c⁄√˘
(
›èrg
, 
TCP_DATA
, 
SOCKOPT_NONE
);

63 
	`wrôe
(
c⁄n
, "0", 1);

64 
	`exô
(0);

67 
°©e
.
msize
 = 
	`byãs
(
›èrg
);

70 
°©e
.
move
 = 
	`byãs
(
›èrg
);

73 
∑øŒñ
 = 
	`©oi
(
›èrg
);

74 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

77 
w¨mup
 = 
	`©oi
(
›èrg
);

80 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

83 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

88 i‡(
›töd
 < 
ac
 - 2 || optind >=ác) {

89 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

92 
°©e
.
£rvî
 = 
av
[
›töd
++];

94 i‡(
°©e
.
msize
 =0 && sèã.
move
 == 0) {

95 
°©e
.
msize
 = sèã.
move
 = 
XFERSIZE
;

96 } i‡(
°©e
.
msize
 == 0) {

97 
°©e
.
msize
 = sèã.
move
;

98 } i‡(
°©e
.
move
 == 0) {

99 
°©e
.
move
 = sèã.
msize
;

103 i‡(
°©e
.
move
 % sèã.
msize
) {

104 
°©e
.
move
 +°©e.
msize
 - state.move % state.msize;

113 
	`bíchmp
(
öôülize
, 
lo›_å™s„r
, 
˛ónup
,

114 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

115 i‡(
	`gëtime
() > 0) {

116 
	`Ârötf
(
°dîr
, "%.6‡", 
°©e
.
msize
 / (1000. * 1000.));

117 
	`mb
(
°©e
.
move
 * 
	`gë_n
(Ë* 
∑øŒñ
);

120 
	}
}

123 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

125 
buf
[100];

126 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

128 i‡(
ôî©i⁄s
) ;

130 
°©e
->
buf
 = 
	`vÆloc
(°©e->
msize
);

131 i‡(!
°©e
->
buf
) {

132 
	`≥º‹
("valloc");

133 
	`exô
(1);

135 
	`touch
(
°©e
->
buf
, sèã->
msize
);

137 
°©e
->
sock
 = 
	`t˝_c⁄√˘
(°©e->
£rvî
, 
TCP_DATA
, 
SOCKOPT_READ
|
SOCKOPT_WRITE
|
SOCKOPT_REUSE
);

138 i‡(
°©e
->
sock
 < 0) {

139 
	`≥º‹
("socket connection");

140 
	`exô
(1);

142 
	`•rötf
(
buf
, "%lu", ()
°©e
->
msize
);

143 i‡(
	`wrôe
(
°©e
->
sock
, 
buf
, 
	`°æí
(buf) + 1) != strlen(buf) + 1) {

144 
	`≥º‹
("control write");

145 
	`exô
(1);

147 
	}
}

150 
	$lo›_å™s„r
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

152 
c
;

153 
uöt64
 
todo
;

154 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

156 
ôî©i⁄s
-- > 0) {

157 
todo
 = 
°©e
->
move
;Åodÿ> 0;Åodÿ-
c
) {

158 i‡((
c
 = 
	`ªad
(
°©e
->
sock
, sèã->
buf
, sèã->
msize
)) <= 0) {

159 
	`exô
(1);

161 i‡(
c
 > 
todo
) c =Åodo;

164 
	}
}

167 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

169 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

171 i‡(
ôî©i⁄s
) ;

174 ()
	`˛o£
(
°©e
->
sock
);

175 
	}
}

178 
	$£rvî_maö
()

180 
d©a
, 
√wd©a
;

182 
GO_AWAY
;

184 
d©a
 = 
	`t˝_£rvî
(
TCP_DATA
, 
SOCKOPT_WRITE
|
SOCKOPT_REUSE
);

185 i‡(
d©a
 < 0) {

186 
	`≥º‹
("server socket creation");

187 
	`exô
(1);

190 
	`sig«l
(
SIGCHLD
, 
sigchld_waô_h™dÀr
);

192 
√wd©a
 = 
	`t˝_ac˚±
(
d©a
, 
SOCKOPT_WRITE
);

193 
	`f‹k
()) {

195 
	`≥º‹
("fork");

198 
	`sour˚
(
√wd©a
);

199 
	`exô
(0);

201 
	`˛o£
(
√wd©a
);

205 
	}
}

213 
	$sour˚
(
d©a
)

215 
size_t
 
m
;

216 
nbyãs
;

217 *
buf
, 
s¸©ch
[100];

222 
	`bzîo
(
s¸©ch
, 100);

223 i‡(
	`ªad
(
d©a
, 
s¸©ch
, 100) <= 0) {

224 
	`≥º‹
("controlÇbytes");

225 
	`exô
(7);

227 
	`ssˇnf
(
s¸©ch
, "%lu", &
nbyãs
);

228 
m
 = 
nbyãs
;

233 i‡(
m
 == 0) {

234 
	`t˝_d⁄e
(
TCP_DATA
);

235 
	`kûl
(
	`gëµid
(), 
SIGTERM
);

236 
	`exô
(0);

239 
buf
 = 
	`vÆloc
(
m
);

240 i‡(!
buf
) {

241 
	`≥º‹
("valloc");

242 
	`exô
(1);

244 
	`bzîo
(
buf
, 
m
);

249 
	`wrôe
(
d©a
, 
buf
, 
m
) == m) {

250 #ifdef 
TOUCH


251 
	`touch
(
buf
, 
m
);

254 
	`‰ì
(
buf
);

255 
	}
}

	@bw_udp.c

16 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
	#MAX_MSIZE
 (10 * 1024 * 1024)

	)

21 
	s_°©e
 {

22 
	msock
;

23 
	m£q
;

24 
	mmove
;

25 
	mmsize
;

26 *
	m£rvî
;

27 
	mfd
;

28 *
	mbuf
;

29 } 
	t°©e_t
;

31 
£rvî_maö
();

32 
˛õ¡_maö
(
∑øŒñ
, 
°©e_t
 *
°©e
);

33 
öô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

34 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

36 
lo›_å™s„r
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

39 
	$maö
(
ac
, **
av
)

41 
∑øŒñ
 = 1;

42 
w¨mup
 = 0;

43 
ª≥tôi⁄s
 = -1;

44 
£rvî
 = 0;

45 
°©e_t
 
°©e
;

46 *
ußge
 = "-s\n OR [-m <message size>] [-W <warmup>] [-N <repetitions>] server [size]\n OR -S serverhost\n";

47 
c
;

48 
uöt64
 
u£cs
;

50 
°©e
.
msize
 = 0;

51 
°©e
.
move
 = 10*1024*1024;

54 –
c
 = 
	`gë›t
(
ac
, 
av
, "sS:m:W:N:")Ë!
EOF
) {

55 
c
) {

57 i‡(
	`f‹k
() == 0) {

58 
	`£rvî_maö
();

60 
	`exô
(0);

63 
£q
, 
n
;

64 
sock
 = 
	`udp_c⁄√˘
(
›èrg
,

65 
UDP_XACT
,

66 
SOCKOPT_NONE
);

67 
n
 = -1;Ç > -5; --n) {

68 
£q
 = 
	`ht⁄l
(
n
);

69 (Ë
	`£nd
(
sock
, &
£q
, (), 0);

71 
	`˛o£
(
sock
);

72 
	`exô
 (0);

75 
°©e
.
msize
 = 
	`©oi
(
›èrg
);

78 
w¨mup
 = 
	`©oi
(
›èrg
);

81 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

84 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

89 i‡(
›töd
 < 
ac
 - 2 || optind >=ác) {

90 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

93 
°©e
.
£rvî
 = 
av
[
›töd
++];

94 i‡(
›töd
 < 
ac
) {

95 
°©e
.
move
 = 
	`byãs
(
av
[
›töd
]);

97 i‡(
°©e
.
msize
 == 0) {

98 
°©e
.
msize
 = sèã.
move
;

101 i‡(
°©e
.
move
 % sèã.
msize
) {

102 
°©e
.
move
 +°©e.movê- sèã.movê% sèã.
msize
;

105 
°©e
.
buf
 = 
	`vÆloc
(°©e.
msize
);

106 i‡(!
°©e
.
buf
) {

107 
	`≥º‹
("valloc");

108 
	`exô
(1);

110 
	`touch
(
°©e
.
buf
, sèã.
msize
);

116 
	`bíchmp
(
öô
, 
lo›_å™s„r
, 
˛ónup
, 
LONGER
, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
 );

118 
out
: ()
	`Ârötf
(
°dîr
, "sockë UDP b™dwidth usög %s: ", 
°©e
.
£rvî
);

119 
	`mb
(
°©e
.
move
 * 
	`gë_n
(Ë* 
∑øŒñ
);

120 
	}
}

123 
	$öô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

125 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

127 i‡(
ôî©i⁄s
) ;

129 
°©e
->
sock
 = 
	`udp_c⁄√˘
(°©e->
£rvî
, 
UDP_XACT
, 
SOCKOPT_NONE
);

130 
°©e
->
£q
 = 0;

131 
°©e
->
buf
 = (*)
	`mÆloc
(°©e->
msize
);

132 
	}
}

135 
	$lo›_å™s„r
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

137 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

138 *
£rvî
 = 
°©e
->server;

139 
sock
 = 
°©e
->sock;

140 
c⁄åﬁ
[2], 
nbyãs
;

142 
nbyãs
 = 
°©e
->
move
;

143 
c⁄åﬁ
[0] = 
°©e
->
move
;

144 
c⁄åﬁ
[1] = 
°©e
->
msize
;

146 
ôî©i⁄s
-- > 0) {

147 i‡(
	`£nd
(
sock
, 
c⁄åﬁ
, 2 * (), 0) != 2 * ()) {

148 
	`≥º‹
("bw_udp client: send failed");

149 
	`exô
(5);

151 
nbyãs
 > 0) {

152 i‡(
	`ªcv
(
sock
, 
°©e
->
buf
, sèã->
msize
, 0) != state->msize) {

153 
	`≥º‹
("bw_udp client:Ñecv failed");

154 
	`exô
(5);

156 
nbyãs
 -
°©e
->
msize
;

159 
	}
}

162 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

164 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

166 i‡(
ôî©i⁄s
) ;

168 
	`˛o£
(
°©e
->
sock
);

169 
	`‰ì
(
°©e
->
buf
);

170 
	}
}

173 
	$£rvî_maö
()

175 *
buf
 = (*)
	`vÆloc
(
MAX_MSIZE
);

176 
sock
, 
«mñí
, 
£q
 = 0;

177 
nbyãs
, 
msize
;

178 
sockaddr_ö
 
ô
;

180 
GO_AWAY
;

182 
sock
 = 
	`udp_£rvî
(
UDP_XACT
, 
SOCKOPT_NONE
);

185 
«mñí
 = (
ô
);

186 i‡(
	`ªcv‰om
(
sock
, (*)
buf
, 2 * (), 0,

187 (
sockaddr
*)&
ô
, &
«mñí
) < 0) {

188 
	`Ârötf
(
°dîr
, "bw_udp server:Ñecvfrom: got wrong size\n");

189 
	`exô
(9);

191 
nbyãs
 = 
	`¡ohl
(*(*)
buf
);

192 
msize
 = 
	`¡ohl
(*((*)
buf
 + 1));

193 
nbyãs
 > 0) {

194 i‡(
	`£ndto
(
sock
, (*)
buf
, 
msize
, 0,

195 (
sockaddr
*)&
ô
, (it)) < 0) {

196 
	`≥º‹
("bw_udp sendto");

197 
	`exô
(9);

199 
nbyãs
 -
msize
;

202 
	}
}

	@bw_unix.c

15 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
ªadî
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

20 
wrôî
(
c⁄åﬁfd
, 
wrôefd
, * 
buf
, * 
cookõ
);

22 
size_t
 
	gXFER
 = 10*1024*1024;

24 
	s_°©e
 {

25 
	mpid
;

26 
size_t
 
	mx„r
;

27 
size_t
 
	mbyãs
;

28 *
	mbuf
;

29 
	mpùes
[2];

30 
	mc⁄åﬁ
[2];

31 
	möôîr
;

35 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

37 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

39 i‡(
ôî©i⁄s
) ;

41 
°©e
->
buf
 = 
	`vÆloc
(
XFERSIZE
);

42 
	`touch
(
°©e
->
buf
, 
XFERSIZE
);

43 
°©e
->
öôîr
 = 0;

44 i‡(
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
°©e
->
pùes
) == -1) {

45 
	`≥º‹
("socketpair");

46 
°©e
->
öôîr
 = 1;

49 i‡(
	`pùe
(
°©e
->
c⁄åﬁ
) == -1) {

50 
	`≥º‹
("pipe");

51 
°©e
->
öôîr
 = 2;

54 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

55 
°©e
->
pid
 = 
	`f‹k
()) {

57 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

58 
	`˛o£
(
°©e
->
c⁄åﬁ
[1]);

59 
	`˛o£
(
°©e
->
pùes
[0]);

60 
	`wrôî
(
°©e
->
c⁄åﬁ
[0], sèã->
pùes
[1], sèã->
buf
, state);

65 
	`≥º‹
("fork");

66 
°©e
->
öôîr
 = 3;

73 
	`˛o£
(
°©e
->
c⁄åﬁ
[0]);

74 
	`˛o£
(
°©e
->
pùes
[1]);

75 
	}
}

77 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

79 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

81 i‡(
ôî©i⁄s
) ;

83 
	`˛o£
(
°©e
->
c⁄åﬁ
[1]);

84 
	`˛o£
(
°©e
->
pùes
[0]);

85 i‡(
°©e
->
pid
 > 0) {

86 
	`kûl
(
°©e
->
pid
, 
SIGKILL
);

87 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

89 
°©e
->
pid
 = 0;

90 
	}
}

93 
	$ªadî
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

95 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

96 
size_t
 
d⁄e
, 
n
;

97 
size_t
 
todo
 = 
°©e
->
byãs
;

99 
ôî©i⁄s
-- > 0) {

100 
	`wrôe
(
°©e
->
c⁄åﬁ
[1], &
todo
, (todo));

101 
d⁄e
 = 0; d⁄ê< 
todo
; d⁄ê+
n
) {

102 i‡((
n
 = 
	`ªad
(
°©e
->
pùes
[0], sèã->
buf
, sèã->
x„r
)) <= 0) {

104 
	`exô
(1);

108 
	}
}

111 
	$wrôî
(
c⁄åﬁfd
, 
wrôefd
, * 
buf
, * 
cookõ
)

113 
size_t
 
todo
, 
d⁄e
;

114 
ssize_t
 
n
;

115 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

118 
	`ªad
(
c⁄åﬁfd
, &
todo
, (todo));

119 
d⁄e
 = 0; d⁄ê< 
todo
; d⁄ê+
n
) {

120 #ifde‡
TOUCH


121 
	`touch
(
buf
, 
XFERSIZE
);

123 i‡((
n
 = 
	`wrôe
(
wrôefd
, 
buf
, 
°©e
->
x„r
)) < 0) {

125 
	`exô
(1);

129 
	}
}

132 
	$maö
(
¨gc
, *
¨gv
[])

134 
_°©e
 
°©e
;

135 
∑øŒñ
 = 1;

136 
w¨mup
 = 0;

137 
ª≥tôi⁄s
 = -1;

138 
c
;

139 * 
ußge
 = "[-m <message size>] [-M <total bytes>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

141 
°©e
.
x„r
 = 
XFERSIZE
;

142 
°©e
.
byãs
 = 
XFER
;

144 –
c
 = 
	`gë›t
(
¨gc
,
¨gv
,"m:M:P:W:N:")Ë!
EOF
) {

145 
c
) {

147 
°©e
.
x„r
 = 
	`byãs
(
›èrg
);

150 
°©e
.
byãs
 = 
	`byãs
(
›èrg
);

153 
∑øŒñ
 = 
	`©oi
(
›èrg
);

154 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
¨gc
, 
¨gv
, 
ußge
);

157 
w¨mup
 = 
	`©oi
(
›èrg
);

160 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

163 
	`lmbích_ußge
(
¨gc
, 
¨gv
, 
ußge
);

167 i‡(
›töd
 =
¨gc
 - 1) {

168 
°©e
.
byãs
 = 
	`byãs
(
¨gv
[
›töd
]);

169 } i‡(
›töd
 < 
¨gc
 - 1) {

170 
	`lmbích_ußge
(
¨gc
, 
¨gv
, 
ußge
);

173 
°©e
.
pid
 = 0;

176 i‡(
°©e
.
byãs
 % sèã.
x„r
) {

177 
°©e
.
byãs
 +°©e.byã†- sèã.byã†% sèã.
x„r
;

180 
	`bíchmp
(
öôülize
, 
ªadî
, 
˛ónup
, 
MEDIUM
, 
∑øŒñ
,

181 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

183 i‡(
	`gëtime
() > 0) {

184 
	`Ârötf
(
°dîr
, "AF_UNIX sock stream bandwidth: ");

185 
	`mb
(
	`gë_n
(Ë* 
∑øŒñ
 * 
XFER
);

188 
	}
}

	@cache.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

18 
	sˇche_ªsu…s
 {

19 
size_t
 
	mÀn
;

20 
size_t
 
	mmaxÀn
;

21 
size_t
 
	mlöe
;

22 
	mœãncy
;

23 
	mv¨üti⁄
;

24 
	møtio
;

25 
	m¶›e
;

28 
föd_ˇche
(
°¨t
, 
n
, 
¥ev_œt
, 
ˇche_ªsu…s
* 
p
);

29 
cﬁÀ˘_d©a
(
size_t
 
°¨t
, size_à
löe
, size_à
maxÀn
,

30 
ª≥tôi⁄s
, 
ˇche_ªsu…s
** 
pd©a
);

31 
£¨ch
(
À·
, 
right
, 
ª≥tôi⁄s
,

32 
mem_°©e
* 
°©e
, 
ˇche_ªsu…s
* 
p
);

33 
cﬁÀ˘_ßm∂e
(
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
,

34 
ˇche_ªsu…s
* 
p
);

35 
mósuª
(
size_t
 
size
, 
ª≥tôi⁄s
,

36 * 
v¨üti⁄
, 
mem_°©e
* 
°©e
);

37 
ªmove_chunk
(
size_t
 
i
, size_à
chunk
, size_à
≈ages
, size_t* 
∑ges
,

38 
size_t
 
Àn
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
);

39 
ã°_chunk
(
size_t
 
i
, size_à
chunk
, size_à
≈ages
, size_t* 
∑ges
,

40 
size_t
 
Àn
, *
ba£löe
, 
chunk_ba£löe
,

41 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
);

42 
fixup_chunk
(
size_t
 
i
, size_à
chunk
, size_à
≈ages
, size_t* 
∑ges
,

43 
size_t
 
Àn
, *
ba£löe
, 
chunk_ba£löe
,

44 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
);

45 
check_mem‹y
(
size_t
 
size
, 
mem_°©e
* 
°©e
);

46 
∑ges‹t
(
size_t
 
n
, size_t* 
∑ges
, * 
œãncõs
);

48 #ifde‡
ABS


49 #unde‡
ABS


51 
	#ABS
(
a
Ë(◊Ë< 0 ? -◊Ë: (a))

	)

53 
	#SWAP
(
a
,
b
Ë{
size_t
 
_tmp
 = (a); (aË(b); (bË_tmp;}

	)

55 
	#THRESHOLD
 1.5

	)

57 
	#FIVE
(
m
Ëm m m m 
	)
m

58 
	#TEN
(
m
Ë
	`FIVE
(mËFIVE(m)

	)

59 
	#FIFTY
(
m
Ë
	`TEN
(mËTEN(mËTEN(mËTEN(mËTEN(m)

	)

60 
	#HUNDRED
(
m
Ë
	`FIFTY
(mËFIFTY(m)

	)

61 
	#DEREF
 
p
 = (**)*p;

	)

63 **
	gaddr_ßve
 = 
NULL
;

66 
	$mem_bíchm¨k
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

68 **
p
;

69 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

71 
p
 = 
addr_ßve
 ?áddr_ßvê: (**)
°©e
->p[0];

72 
ôî©i⁄s
-- > 0) {

73 
	`HUNDRED
(
DEREF
);

75 
addr_ßve
 = 
p
;

76 
	}
}

87 
	$maö
(
ac
, **
av
)

89 
c
;

90 
i
, 
j
, 
n
, 
°¨t
, 
Àvñ
, 
¥ev
, 
mö
;

91 
w¨mup
 = 0;

92 
ª≥tôi⁄s
 = (1000000 <
	`gë_íough
(0Ë? 1 : 
TRIES
);

93 
ssize_t
 
löe
 = 0;

94 
size_t
 
maxÀn
 = 32 * 1024 * 1024;

95 *
Àvñs
;

96 
∑r
, 
max∑r
, 
¥ev_œt
;

97 *
ußge
 = "[-c] [-L <line size>] [-MÜen[K|M]] [-W <warmup>] [-N <repetitions>]\n";

98 
ˇche_ªsu…s
* 
r
;

99 
mem_°©e
 
°©e
;

101 –
c
 = 
	`gë›t
(
ac
, 
av
, "L:M:W:N:")Ë!
EOF
) {

102 
c
) {

104 
löe
 = 
	`©oi
(
›èrg
);

105 i‡(
löe
 < (*))

106 
löe
 = (*);

109 
maxÀn
 = 
	`byãs
(
›èrg
);

112 
w¨mup
 = 
	`©oi
(
›èrg
);

115 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

118 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

123 
	`sched_pö
(0);

125 
°©e
.
width
 = 1;

126 
°©e
.
Àn
 = 
maxÀn
;

127 
°©e
.
maxÀn
 = maxlen;

128 
°©e
.
∑gesize
 = 
	`gë∑gesize
();

130 i‡(
löe
 == 0) {

131 
löe
 = 
	`löe_föd
(
maxÀn
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

132 i‡(
löe
 == 0)

133 
löe
 = 
	`gë∑gesize
() / 16;

134 
°©e
.
löe
 =Üine;

137 
n
 = 
	`cﬁÀ˘_d©a
((
size_t
)512, 
löe
, 
maxÀn
, 
ª≥tôi⁄s
, &
r
);

138 
r
[
n
-1].
löe
 =Üine;

139 
Àvñs
 = (*)
	`mÆloc
(
n
 * ());

140 i‡(!
Àvñs
) {

141 
	`≥º‹
("malloc");

142 
	`exô
(1);

144 
	`bzîo
(
Àvñs
, 
n
 * ());

146 
°¨t
 = 0, 
¥ev
 = 0, 
Àvñ
 = 0, 
¥ev_œt
 = -1.0;

147 (
i
 = 
	`föd_ˇche
(
°¨t
, 
n
, 
¥ev_œt
, 
r
)) >= 0;

148 ++
Àvñ
, 
°¨t
 = 
i
 + 1, 
¥ev
 = i)

154 i‡(
r
[
i
].
œãncy
 /Ñ[
n
-1].latency > 0.5) ;

160 
c
 = 
r
[
i
].
Àn
; c > 0x7; c >>= 1)

162 i‡(
c
 == 5 || c == 7) {

163 
i
++;

164 i‡(
i
 >
n
) ;

167 
Àvñs
[
Àvñ
] = 
i
;

168 
¥ev_œt
 = (
r
[
°¨t
].
œãncy
 > 0.0 ?Ñ[start].latency :Ñ[start - 1].latency);

171 
i
 = 0; i < 
Àvñ
; ++i) {

172 
¥ev
 = (
i
 > 0 ? 
Àvñs
[i-1]: -1);

175 
j
 = 
mö
 = 
¥ev
 + 1; j < 
Àvñs
[
i
]; ++j) {

176 i‡(
r
[
j
].
œãncy
 <= 0.) ;

177 i‡(
r
[
mö
].
œãncy
 <= 0.

178 || 
	`ABS
(
r
[
j
].
¶›e
Ë< ABS‘[
mö
].slope)) {

179 
mö
 = 
j
;

184 i‡(
i
 =
Àvñ
 - 1) {

185 
löe
 = 
r
[
n
-1].line;

187 
j
 = (
Àvñs
[
i
] +Üevels[i+1]) / 2;

188 
löe
 = -1;Üöê<0 && 
j
 < 
n
; ++j) {

189 
r
[
j
].
löe
 = 
	`löe_föd
‘[j].
Àn
, 
w¨mup
,

190 
ª≥tôi⁄s
, &
°©e
);

191 
löe
 = 
r
[
j
].line;

196 
max∑r
 = 
	`∑r_mem
(
r
[
Àvñs
[
i
]-1].
Àn
, 
w¨mup
,

197 
ª≥tôi⁄s
, &
°©e
);

199 
	`Ârötf
(
°dîr
,

201 ()(
i
+1), ()
r
[
Àvñs
[i]].
Àn
,

202 
r
[
mö
].
œãncy
, ()
löe
, 
max∑r
);

206 
j
 = 
n
 - 1;

207 
i
 = 
n
 - 1; i >= 0; i--) {

208 i‡(
r
[
i
].
œãncy
 < 0.) ;

209 i‡(
r
[
i
].
œãncy
 > 0.99 *Ñ[
n
-1].latency)

210 
j
 = 
i
;

212 
∑r
 = 
	`∑r_mem
(
r
[
j
].
Àn
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

214 
	`Ârötf
(
°dîr
, "MemoryÜatency: %.2fÇanoseconds %.2fÖarallelism\n",

215 
r
[
n
-1].
œãncy
, 
∑r
);

217 
	`exô
(0);

218 
	}
}

221 
	$föd_ˇche
(
°¨t
, 
n
, 
¥ev_œt
, 
ˇche_ªsu…s
* 
p
)

223 
i
, 
j
, 
¥ev
;

224 
max
 = -1.;

226 
¥ev
 = (
°¨t
 == 0 ? start : start - 1);Örev > 0;Örev--) {

227 i‡(
p
[
¥ev
].
øtio
 > 0.0) ;

230 
i
 = 
°¨t
, 
j
 = -1; i < 
n
; ++i) {

231 i‡(
p
[
i
].
œãncy
 < 0.)

233 i‡(
max
 < 
p
[
i
].
øtio
)

234 
max
 = 
p
[
i
].
øtio
;

235 i‡(
THRESHOLD
 < 
p
[
i
].
øtio
)

236 
j
 = 
i
;

237 i‡(
THRESHOLD
 < 
max
 && 
p
[
j
].
Àn
 * 2 <p[
i
].len)

238  
j
;

239 
¥ev
 = 
i
;

242 
	}
}

245 
	$cﬁÀ˘_d©a
(
size_t
 
°¨t
, size_à
löe
, size_à
maxÀn
,

246 
ª≥tôi⁄s
, 
ˇche_ªsu…s
** 
pd©a
)

248 
i
;

249 
ßm∂es
;

250 
idx
;

251 
size_t
 
Àn
 = 
°¨t
;

252 
size_t
 
ö¸
 = 
°¨t
 / 4;

253 
mem_°©e
 
°©e
;

254 
ˇche_ªsu…s
* 
p
;

257 
°©e
.
width
 = 1;

258 
°©e
.
Àn
 = 
maxÀn
;

259 
°©e
.
maxÀn
 = maxlen;

260 
°©e
.
löe
 =Üine;

261 
°©e
.
∑gesize
 = 
	`gë∑gesize
();

262 
°©e
.
addr
 = 
NULL
;

265 
Àn
 = 
°¨t
, 
ö¸
 = sèπ / 4, 
ßm∂es
 = 0;Üí <
maxÀn
; incr<<=1) {

266 
i
 = 0; i < 4 && 
Àn
 <
maxÀn
; ++i,Üí +
ö¸
)

267 
ßm∂es
++;

269 *
pd©a
 = (
ˇche_ªsu…s
*)

270 
	`mÆloc
(
ßm∂es
 * (
ˇche_ªsu…s
));

271 i‡(!*
pd©a
) {

272 
	`≥º‹
("malloc");

273 
	`exô
(2);

275 
p
 = *
pd©a
;

278 
Àn
 = 
°¨t
, 
ö¸
 = sèπ / 4, 
idx
 = 0;Üí <
maxÀn
; incr<<=1) {

279 
i
 = 0; i < 4 && 
Àn
 <
maxÀn
; ++i, ++
idx
,Üí +
ö¸
) {

280 
p
[
idx
].
Àn
 =Üen;

281 
p
[
idx
].
löe
 =Üine;

282 
p
[
idx
].
œãncy
 = -1.;

283 
p
[
idx
].
øtio
 = -1.;

284 
p
[
idx
].
¶›e
 = -1.;

289 
°©e
.
addr
 =
NULL
) {

290 
	`mem_öôülize
(0, &
°©e
);

291 i‡(
°©e
.
addr
 =
NULL
) {

292 
maxÀn
 /= 2;

293 
°©e
.
Àn
 = sèã.
maxÀn
 = maxlen;

294 
p
[
ßm∂es
-1].
Àn
 > 
maxÀn
)

295 
ßm∂es
--;

298 
i
 = 0; i < 
ßm∂es
; ++i)

299 
p
[
i
].
maxÀn
 = maxlen;

301 
i
 = 0; i < 
°©e
.
≈ages
; ++i)

302 
°©e
.
∑ges
[
i
] = i * sèã.
∑gesize
;

304 
p
[
ßm∂es
-1].
œãncy
 = 
	`mósuª
’[ßm∂es-1].
Àn
, 
ª≥tôi⁄s
,

305 &
p
[
ßm∂es
-1].
v¨üti⁄
, &
°©e
);

306 
p
[
ßm∂es
-1].
œãncy
 <= 0.0) {

307 
p
[
ßm∂es
-1].
œãncy
 = 
	`mósuª
’[ßm∂es-1].
Àn
,

308 
ª≥tôi⁄s
,

309 &
p
[
ßm∂es
-1].
v¨üti⁄
,

310 &
°©e
);

311 --
ßm∂es
;

313 
p
[0].
œãncy
 = 
	`mósuª
’[0].
Àn
, 
ª≥tôi⁄s
, &p[0].
v¨üti⁄
, &
°©e
);

314 
	`£¨ch
(0, 
ßm∂es
 - 1, 
ª≥tôi⁄s
, &
°©e
, 
p
);

331 
	`mem_˛ónup
(0, &
°©e
);

333  
ßm∂es
;

334 
	}
}

337 
	$£¨ch
(
À·
, 
right
, 
ª≥tôi⁄s
,

338 
mem_°©e
* 
°©e
, 
ˇche_ªsu…s
* 
p
)

340 
middÀ
 = 
À·
 + (
right
 -Üeft) / 2;

351 i‡(
p
[
À·
].
œãncy
 > 0.0) {

352 
p
[
À·
].
øtio
 =Ö[
right
].
œãncy
 /Ö[left].latency;

353 
p
[
À·
].
¶›e
 = (p[À·].
øtio
 - 1.Ë/ ()(
right
 -Üeft);

355 i‡(
p
[
À·
].
øtio
 < 0.98) {

356 
p
[
À·
].
œãncy
 =Ö[
right
].latency;

357 
p
[
À·
].
øtio
 = 1.;

358 
p
[
À·
].
¶›e
 = 0.;

362 i‡(
middÀ
 =
À·
 || middÀ =
right
)

365 i‡(
p
[
À·
].
øtio
 > 1.35 ||Ö[left].ratio < 0.97) {

366 
	`cﬁÀ˘_ßm∂e
(
ª≥tôi⁄s
, 
°©e
, &
p
[
middÀ
]);

367 
	`£¨ch
(
middÀ
, 
right
, 
ª≥tôi⁄s
, 
°©e
, 
p
);

368 
	`£¨ch
(
À·
, 
middÀ
, 
ª≥tôi⁄s
, 
°©e
, 
p
);

371 
	}
}

374 
	$cﬁÀ˘_ßm∂e
(
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
,

375 
ˇche_ªsu…s
* 
p
)

377 
i
, 
modifõd
, 
≈ages
;

378 
ba£löe
;

380 
≈ages
 = (
p
->
Àn
 + 
	`gë∑gesize
() - 1) / getpagesize();

381 
ba£löe
 = 
	`mósuª
(
p
->
Àn
, 
ª≥tôi⁄s
, &p->
v¨üti⁄
, 
°©e
);

383 i‡(
≈ages
 > 1) {

384 
i
 = 0, 
modifõd
 = 1; i < 8 && modified; ++i) {

385 
modifõd
 = 
	`ã°_chunk
(0, 
≈ages
,Çpages,

386 
°©e
->
∑ges
, 
p
->
Àn
,

387 &
ba£löe
, 0.0,

388 
ª≥tôi⁄s
, 
°©e
);

391 
p
->
œãncy
 = 
ba£löe
;

398  (
p
->
œãncy
 > 0);

399 
	}
}

402 
	$mósuª
(
size_t
 
size
, 
ª≥tôi⁄s
,

403 * 
v¨üti⁄
, 
mem_°©e
* 
°©e
)

405 
size_t
 
i
, 
j
, 
≈ages
, 
∆öes
;

406 
time
, 
medün
;

407 *
p
;

408 
ªsu…_t
 *
r
, *
r_ßve
;

409 
size_t
 *
∑ges
;

411 
∑ges
 = 
°©e
->pages;

412 
≈ages
 = (
size
 + 
	`gë∑gesize
() - 1) / getpagesize();

413 
∆öes
 = 
°©e
->nlines;

415 i‡(
size
 % 
	`gë∑gesize
())

416 
∆öes
 = (
size
 % 
	`gë∑gesize
()Ë/ 
°©e
->
löe
;

418 
r_ßve
 = 
	`gë_ªsu…s
();

419 
r
 = (
ªsu…_t
*)
	`mÆloc
(
	`sizeof_ªsu…
(
ª≥tôi⁄s
));

420 i‡(!
r
) {

421 
	`≥º‹
("malloc");

422 
	`exô
(3);

424 
	`ö£πöô
(
r
);

429 
p
 = 
°©e
->
ba£
;

430 
i
 = 0; i < 
≈ages
 - 1; ++i) {

431 
j
 = 0; j < 
°©e
->
nw‹ds
; ++j) {

432 *(**)(
p
 + 
∑ges
[
i
] + 
°©e
->
löes
[°©e->
∆öes
 - 1] + sèã->
w‹ds
[
j
]) =

433 
p
 + 
∑ges
[
i
+1] + 
°©e
->
löes
[0] + sèã->
w‹ds
[
j
];

436 
j
 = 0; j < 
°©e
->
nw‹ds
; ++j) {

437 *(**)(
p
 + 
∑ges
[
≈ages
 - 1] + 
°©e
->
löes
[
∆öes
 - 1] + sèã->
w‹ds
[
j
]) =

438 
p
 + 
∑ges
[0] + 
°©e
->
löes
[0] + sèã->
w‹ds
[(
j
+1)%°©e->
nw‹ds
];

445 
addr_ßve
 = 
NULL
;

446 
°©e
->
p
[0] =Ö + 
∑ges
[0] + sèã->
löes
[0] + sèã->
w‹ds
[0];

448 
	`mem_bíchm¨k
((
size
 / (*Ë+ 100Ë/ 100, 
°©e
);

450 
i
 = 0; i < 
ª≥tôi⁄s
; ++i) {

451 
	`BENCH1
(
	`mem_bíchm¨k
(
__n
, 
°©e
); __n = 1;, 0)

452 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), 
r
);

454 
	`£t_ªsu…s
(
r
);

455 
medün
 = (1000. * ()
	`gëtime
()Ë/ (100. * ()
	`gë_n
());

457 
	`ßve_möimum
();

458 
time
 = (1000. * ()
	`gëtime
()Ë/ (100. * ()
	`gë_n
());

461 i‡(
time
 != 0.)

462 *
v¨üti⁄
 = 
medün
 / 
time
;

464 *
v¨üti⁄
 = -1.0;

465 
	`£t_ªsu…s
(
r_ßve
);

466 
	`‰ì
(
r
);

468 i‡(
∆öes
 < 
°©e
->nlines) {

469 
j
 = 0; j < 
°©e
->
nw‹ds
; ++j) {

470 *(**)(
p
 + 
∑ges
[
≈ages
 - 1] + 
°©e
->
löes
[
∆öes
 - 1] + sèã->
w‹ds
[
j
]) =

471 
p
 + 
∑ges
[
≈ages
 - 1] + 
°©e
->
löes
[
∆öes
] + sèã->
w‹ds
[
j
];

478  
medün
;

479 
	}
}

483 
	$ªmove_chunk
(
size_t
 
i
, size_à
chunk
, size_à
≈ages
, size_t* 
∑ges
,

484 
size_t
 
Àn
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
)

486 
size_t
 
n
, 
j
;

487 
t
, 
v¨
;

489 i‡(
i
 + 
chunk
 < 
≈ages
) {

490 
j
 = 0; j < 
chunk
; ++j) {

491 
n
 = 
∑ges
[
i
+
j
];

492 
∑ges
[
i
+
j
] =Öages[
≈ages
-1-j];

493 
∑ges
[
≈ages
-1-
j
] = 
n
;

496 
t
 = 
	`mósuª
(
Àn
 - 
chunk
 * 
	`gë∑gesize
(), 
ª≥tôi⁄s
, &
v¨
, 
°©e
);

497 i‡(
i
 + 
chunk
 < 
≈ages
) {

498 
j
 = 0; j < 
chunk
; ++j) {

499 
n
 = 
∑ges
[
i
+
j
];

500 
∑ges
[
i
+
j
] =Öages[
≈ages
-1-j];

501 
∑ges
[
≈ages
-1-
j
] = 
n
;

505  
t
;

506 
	}
}

509 
	$ã°_chunk
(
size_t
 
i
, size_à
chunk
, size_à
≈ages
, size_t* 
∑ges
,

510 
size_t
 
Àn
, *
ba£löe
, 
chunk_ba£löe
,

511 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
)

513 
modifõd
 = 0;

514 
ch™ged
;

515 
size_t
 
j
, 
k
, 
subchunk
;

516 
t
, 
â
, 
nodiff_chunk_ba£löe
;

518 i‡(
chunk
 <20 && chunk < 
≈ages
) {

519  
	`fixup_chunk
(
i
, 
chunk
, 
≈ages
, 
∑ges
, 
Àn
, 
ba£löe
,

520 
chunk_ba£löe
, 
ª≥tôi⁄s
, 
°©e
);

523 
nodiff_chunk_ba£löe
 = *
ba£löe
;

524 
subchunk
 = (
chunk
 + 19) / 20;

525 
j
 = 
i
, 
k
 = 0; j < i + 
chunk
; j+=
subchunk
, k++) {

526 i‡(
j
 + 
subchunk
 > 
i
 + 
chunk
) subchunk = i + chunk - j;

528 
t
 = 
	`ªmove_chunk
(
j
, 
subchunk
, 
≈ages
, 
∑ges
,

529 
Àn
, 
ª≥tôi⁄s
, 
°©e
);

535 i‡(
t
 >0.99 * *
ba£löe
) ;

536 i‡(
t
 >0.999 * 
nodiff_chunk_ba£löe
) ;

538 
â
 = 
	`ªmove_chunk
(
j
, 
subchunk
, 
≈ages
, 
∑ges
,

539 
Àn
, 
ª≥tôi⁄s
, 
°©e
);

541 i‡(
â
 > 
t
)Å =Åt;

543 i‡(
t
 >0.99 * *
ba£löe
) ;

544 i‡(
t
 >0.999 * 
nodiff_chunk_ba£löe
) ;

546 
ch™ged
 = 
	`ã°_chunk
(
j
, 
subchunk
, 
≈ages
, 
∑ges
, 
Àn
,

547 
ba£löe
, 
t
, 
ª≥tôi⁄s
, 
°©e
);

549 i‡(
ch™ged
) {

550 
modifõd
 = 1;

552 
nodiff_chunk_ba£löe
 = 
t
;

555  
modifõd
;

556 
	}
}

568 
	$fixup_chunk
(
size_t
 
i
, size_à
chunk
, size_à
≈ages
, size_t* 
∑ges
,

569 
size_t
 
Àn
, *
ba£löe
, 
chunk_ba£löe
,

570 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
)

572 
sw≠≥d
 = 0;

573 
size_t
 
j
, 
k
;

574 
size_t
 
∑ge
, 
sub°ôuã
, 
‹igöÆ
;

575 
size_t
 
¡ŸÆ∑ges
, 
n•¨ïages
;

576 
size_t
 
sub£t_Àn
;

577 
size_t
 *
∑ge£t
;

578 
size_t
 *
ßved_∑ges
;

579 
size_t
 
avaûabÀ_ödex
 = 0;

580 
t
, 
v¨
, 
√w_ba£löe
;

581 
œãncõs
[20];

583 
¡ŸÆ∑ges
 = (
°©e
->
maxÀn
 + 
	`gë∑gesize
() - 1)/ getpagesize();

584 
n•¨ïages
 = 
¡ŸÆ∑ges
 - 
≈ages
;

585 
∑ge£t
 = 
°©e
->
∑ges
 + 
≈ages
;

586 
√w_ba£löe
 = *
ba£löe
;

588 
ßved_∑ges
 = (
size_t
*)
	`mÆloc
((size_tË* 
¡ŸÆ∑ges
);

589 i‡(!
ßved_∑ges
) {

590 
	`≥º‹
("malloc");

591 
	`exô
(4);

593 
	`bc›y
(
∑ges
, 
ßved_∑ges
, (Ë* 
¡ŸÆ∑ges
);

596 i‡(
i
 + 
chunk
 < 
≈ages
) {

597 
j
 = 0; j < 
chunk
; ++j) {

598 
∑ge
 = 
∑ges
[
i
+
j
];

599 
∑ges
[
i
+
j
] =Öages[
≈ages
-
chunk
+j];

600 
∑ges
[
≈ages
-
chunk
+
j
] = 
∑ge
;

604 i‡(
avaûabÀ_ödex
 >
n•¨ïages
)ávailable_index = 0;

609 
j
 = 0, 
k
 = 
chunk
; j < k; ) {

611 
t
 = 
	`mósuª
((
≈ages
 - 
chunk
 + 
j
 + 1Ë* 
	`gë∑gesize
(),

612 
ª≥tôi⁄s
, &
v¨
, 
°©e
);

614 i‡(0.995 * 
t
 <
chunk_ba£löe
) {

615 
œãncõs
[
j
] = 
t
;

616 ++
j
;

618 --
k
;

619 
œãncõs
[
k
] = 
t
;

620 
	`SWAP
(
∑ges
[
≈ages
 - 
chunk
 + 
j
],Öages[≈age†- chunk + 
k
]);

626 
	`∑ges‹t
(
chunk
 - 
j
, &
∑ges
[
≈ages
 - chunk + j], &
œãncõs
[j]);

632 i‡(
chunk
 >
≈ages
 && 
j
 < chunk / 2) {

633 
j
 = 
chunk
 / 2;

634 
t
 = 
	`mósuª
((
≈ages
 - 
chunk
 + 
j
 + 1Ë* 
	`gë∑gesize
(),

635 
ª≥tôi⁄s
, &
v¨
, 
°©e
);

636 
chunk_ba£löe
 = 
t
;

639 
k
 = 0; 
j
 < 
chunk
 && k < 2 * 
≈ages
; ++k) {

640 
‹igöÆ
 = 
≈ages
 - 
chunk
 + 
j
;

641 
sub°ôuã
 = 
n•¨ïages
 - 1;

642 
sub°ôuã
 -(
k
 + 
avaûabÀ_ödex
Ë% (
n•¨ïages
 - 1);

643 
sub£t_Àn
 = (
‹igöÆ
 + 1Ë* 
	`gë∑gesize
();

644 i‡(
j
 =
chunk
 - 1 && 
Àn
 % 
	`gë∑gesize
()) {

645 
sub£t_Àn
 = 
Àn
;

648 
	`SWAP
(
∑ges
[
‹igöÆ
], 
∑ge£t
[
sub°ôuã
]);

649 
t
 = 
	`mósuª
(
sub£t_Àn
, 
ª≥tôi⁄s
, &
v¨
, 
°©e
);

650 
	`SWAP
(
∑ges
[
‹igöÆ
], 
∑ge£t
[
sub°ôuã
]);

655 i‡(
t
 < 
œãncõs
[
chunk
 - 1]) {

656 
œãncõs
[
chunk
 - 1] = 
t
;

657 
	`SWAP
(
∑ges
[
≈ages
 - 1], 
∑ge£t
[
sub°ôuã
]);

658 
	`∑ges‹t
(
chunk
 - 
j
,

659 &
∑ges
[
≈ages
 - 
chunk
 + 
j
], &
œãncõs
[j]);

661 i‡(0.995 * 
œãncõs
[
j
] <
chunk_ba£löe
) {

662 ++
j
;

663 ++
sw≠≥d
;

667 
avaûabÀ_ödex
 = (
k
 +ávaûabÀ_ödexË% (
n•¨ïages
 - 1);

672 i‡(
sw≠≥d
) {

673 
√w_ba£löe
 = 
	`mósuª
(
Àn
, 
ª≥tôi⁄s
, &
v¨
, 
°©e
);

679 i‡(
√w_ba£löe
 >0.999 * *
ba£löe
) {

681 
sw≠≥d
 = 0;

682 
	`bc›y
(
ßved_∑ges
, 
∑ges
, (Ë* 
¡ŸÆ∑ges
);

685 *
ba£löe
 = 
√w_ba£löe
;

688 i‡(
i
 + 
chunk
 < 
≈ages
) {

689 
j
 = 0; j < 
chunk
; ++j) {

690 
∑ge
 = 
∑ges
[
i
+
j
];

691 
∑ges
[
i
+
j
] =Öages[
≈ages
-
chunk
+j];

692 
∑ges
[
≈ages
-
chunk
+
j
] = 
∑ge
;

701 
	`‰ì
(
ßved_∑ges
);

703  
sw≠≥d
;

704 
	}
}

707 
	$check_mem‹y
(
size_t
 
size
, 
mem_°©e
* 
°©e
)

709 
size_t
 
i
, 
j
, 
fú°_∑ge
, 
≈ages
, 
nw‹ds
;

710 
size_t
 
∑ge
, 
w‹d_cou¡
, 
∑gesize
;

711 
off_t
 
off£t
;

712 **
p
, **
q
;

713 **
°¨t
;

715 
∑gesize
 = 
	`gë∑gesize
();

716 
≈ages
 = (
size
 + 
∑gesize
 - 1) /Öagesize;

717 
nw‹ds
 = 
size
 / (*);

722 
w‹d_cou¡
 = 1;

723 
fú°_∑ge
 = 0;

724 
°¨t
 = (**)(
°©e
->
ba£
 + sèã->
∑ges
[0] + sèã->
löes
[0] + sèã->
w‹ds
[0]);

725 
q
 = 
p
 = (**)*
°¨t
;Ö != start; ) {

726 
w‹d_cou¡
++;

727 
off£t
 = ()
p
 - ()
°©e
->
ba£
;

728 
∑ge
 = 
off£t
 - off£à% 
∑gesize
;

729 
j
 = 
fú°_∑ge
; j < 
≈ages
; ++j) {

730 i‡(
∑ge
 =
°©e
->
∑ges
[
j
]) ;

732 i‡(
j
 =
≈ages
) {

733 
j
 = 0; j < 
fú°_∑ge
; ++j) {

734 i‡(
∑ge
 =
°©e
->
∑ges
[
j
]) ;

736 i‡(
j
 =
fú°_∑ge
) {

737 
	`Ârötf
(
°dîr
,

739 ()
size
);

742 
fú°_∑ge
 = 
j
 % 
≈ages
;

743 
p
 = (**)*p;

744 i‡(
w‹d_cou¡
 & 0x1Ë
q
 = (**)*q;

745 i‡(*
p
 =*
q
) {

746 
	`Ârötf
(
°dîr
, "check_mem‹y: unw™ãd mem‹y cy˛e!Öage=%lu\n", ()
j
);

750 i‡(
w‹d_cou¡
 !
nw‹ds
) {

751 
	`Ârötf
(
°dîr
, "check_mem‹y: wr⁄g w‹d cou¡,Éx≥˘ed %lu, gŸ %lu\n", ()
nw‹ds
, ()
w‹d_cou¡
);

756 
	}
}

759 
	$∑ges‹t
(
size_t
 
n
, size_t* 
∑ges
, * 
œãncõs
)

761 
i
, 
j
;

762 
t
;

764 
i
 = 0; i < 
n
 - 1; ++i) {

765 
j
 = 
i
 + 1; j < 
n
; ++j) {

766 i‡(
œãncõs
[
i
] >Ü©ícõs[
j
]) {

767 
t
 = 
œãncõs
[
i
];

768 
œãncõs
[
i
] =Ü©ícõs[
j
];

769 
œãncõs
[
j
] = 
t
;

770 
	`SWAP
(
∑ges
[
i
],Öages[
j
]);

774 
	}
}

	@clock.c

6 
	~"bích.h
"

8 *
	gid
 = "$Id$";

9 *
	gªvisi⁄
 = "$Revision$";

11 
	$maö
()

13 
uöt64
 
íough
;

14 
t_ovîhód
, 
l_ovîhód
;

16 
íough
 = 
	`compuã_íough
(15);

17 
	`¥ötf
("ENOUGH=%lu\n", ()
íough
); 
	`fÊush
(
°dout
);

18 
t_ovîhód
 = 
	`timög_ovîhód
(
íough
);

19 
	`¥ötf
("TIMING_OVERHEAD=%f\n", 
t_ovîhód
); 
	`fÊush
(
°dout
);

20 
l_ovîhód
 = 
	`lo›_ovîhód
(
íough
, 
t_ovîhód
);

21 
	`¥ötf
("LOOP_OVERHEAD=%f\n", 
l_ovîhód
);

22 
	`¥ötf
("# vîsi⁄ [%s]\n", 
ªvisi⁄
);

23 
	`exô
(0);

24 
	}
}

	@disk.c

10 
	~<°dio.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<uni°d.h
>

13 
	~<°dlib.h
>

14 
	~"bích.h
"

15 
	~"Êushdisk.c
"

17 
	#SEEKPOINTS
 2000

	)

18 
	#ZONEPOINTS
 150

	)

20 
uöt64
 
disksize
(*);

21 
z⁄e
(*
disk
, 
oÊag
, 
bsize
);

22 
£ek
(*
disk
, 
oÊag
);

25 
	$maö
(
ac
, **
av
)

27 
	`Ârötf
(
°dîr
, "\"SìkÅime†f‹ %s\n", 
av
[1]);

28 
	`£ek
(
av
[1], 0);

29 
	`Ârötf
(
°dîr
, "\n");

30 
	`Ârötf
(
°dîr
, "\"Z⁄êb™dwidth f‹ %s\n", 
av
[1]);

31 
	`z⁄e
(
av
[1], 0, (1<<20));

33 
	}
}

36 
	$z⁄e
(*
disk
, 
oÊag
, 
bsize
)

38 *
buf
;

39 
u£cs
;

40 
fd
;

41 
uöt64
 
off
;

42 
°ride
;

44 i‡((
fd
 = 
	`›í
(
disk
, 
oÊag
)) == -1) {

45 
	`≥º‹
(
disk
);

46 
	`exô
(1);

48 
buf
 = 
	`vÆloc
(
bsize
);

49 i‡(!
buf
) {

50 
	`≥º‹
("valloc");

51 
	`exô
(1);

53 
	`bzîo
(
buf
, 
bsize
);

54 #ifdef 
löux


55 
	`Êushdisk
(
fd
);

63 
off
 = 
	`disksize
(
disk
);

64 
off
 /
ZONEPOINTS
;

65 
°ride
 = 
off
;

66 i‡(
°ride
 < 512) stride = 512;

67 
°ride
 += 511;

68 
°ride
 >>= 9;

69 
°ride
 <<= 9;

77 i‡(
bsize
 > 
°ride
) bsize = 256<<10;

78 i‡(
bsize
 > 
°ride
) stride = bsize;

80 
off
 *
ZONEPOINTS
;

81 
	`debug
((
°dout
, "stride=%d bs=%d size=%dMÖoints=%d\n",

82 
°ride
, 
bsize
, ()(
off
 >> 20), ()(off/stride)));

90 
	#IO
(
a
,
b
,
c
Ë(
oÊag
 =0 ? 
	`ªad
◊,b,cË: 
	`wrôe
◊,b,c))

	)

93 i‡(
	`IO
(
fd
, 
buf
, 512) != 512) {

94 
	`≥º‹
(
disk
);

95 
	`exô
(1);

97 
off
 = 512;

99 i‡(
	`IO
(
fd
, 
buf
, 1024) != 1024) {

100 
	`exô
(0);

102 
off
 += 1024;

103 
	`°¨t
(0);

104 i‡(
	`IO
(
fd
, 
buf
, 
bsize
) != bsize) {

107 
u£cs
 = 
	`°›
(0, 0);

108 
off
 +
bsize
;

109 
	`Ârötf
(
°dîr
, "%.01f %.2f\n",

110 
off
/1000000.0, ()
bsize
/
u£cs
);

111 
off
 +
°ride
;

112 i‡(
	`£ekto
(
fd
, 
off
, 
SEEK_SET
) != off) {

117 
	}
}

122 #unde‡
IO


123 
	#IO
(
a
,
b
,
c
Ë
îr‹
 = (
oÊag
 =0 ? 
	`ªad
◊,b,cË: 
	`wrôe
(a,b,c)); \

124 i‡(
îr‹
 =-1Ë{ 
	`≥º‹
("io"); 
	`exô
(1); }

	)

125 
	#IOSIZE
 512

	)

126 
	#TOOSMALL
 1000

	)

127 
	#TOOBIG
 1000000

	)

131 
	$£ek
(*
disk
, 
oÊag
)

133 *
buf
;

134 
fd
;

135 
off64_t
 
size
;

136 
off64_t
 
begö
, 
íd
;

137 
u£cs
;

138 
îr‹
;

139 
tŸ_m£c
 = 0, 
tŸ_io
 = 0;

140 
°ride
;

142 i‡((
fd
 = 
	`›í
(
disk
, 
oÊag
)) == -1) {

143 
	`≥º‹
(
disk
);

146 #ifdef 
löux


147 
	`Êushdisk
(
fd
);

149 
size
 = 
	`disksize
(
disk
);

150 
buf
 = 
	`vÆloc
(
IOSIZE
);

151 i‡(!
buf
) {

152 
	`≥º‹
("valloc");

153 
	`exô
(1);

155 
	`bzîo
(
buf
, 
IOSIZE
);

165 
°ride
 = 
size
 / 
SEEKPOINTS
;

166 i‡(
°ride
 < 512) stride = 512;

167 
°ride
 += 511;

168 
°ride
 >>= 9;

169 
°ride
 <<= 9;

171 
	`debug
((
°dout
, "stride=%d size=%dMÖoints=%d\n",

172 
°ride
, ()(
size
 >> 20), ()(size/stride)));

174 
íd
 = 
size
;

175 
begö
 = 0;

176 
	`£ekto
(
fd
, 
begö
, 
SEEK_SET
);

177 
	`IO
(
fd
, 
buf
, 
IOSIZE
);

178 
íd
 >
begö
 + 
°ride
*2) {

179 
íd
 -
°ride
;

180 
	`°¨t
(0);

181 
	`£ekto
(
fd
, 
íd
, 
SEEK_SET
);

182 
	`IO
(
fd
, 
buf
, 
IOSIZE
);

183 
u£cs
 = 
	`°›
(0, 0);

184 i‡(
u£cs
 > 
TOOSMALL
 && u£c†< 
TOOBIG
) {

185 
tŸ_io
++; 
tŸ_m£c
 +
u£cs
/1000;

186 
	`Ârötf
(
°dîr
, "%.01f %.02f\n",

187 (
íd
 - 
begö
 - 
°ride
Ë/ 1000000., 
u£cs
/1000.);

190 
begö
 +
°ride
;

191 
	`°¨t
(0);

192 
	`£ekto
(
fd
, 
begö
, 
SEEK_SET
);

193 
	`IO
(
fd
, 
buf
, 
IOSIZE
);

194 
u£cs
 = 
	`°›
(0, 0);

195 i‡(
u£cs
 > 
TOOSMALL
 && u£c†< 
TOOBIG
) {

196 
tŸ_io
++; 
tŸ_m£c
 +
u£cs
/1000;

197 
	`Ârötf
(
°dîr
, "%.01f %.02f\n",

198 (
íd
 + 
°ride
 - 
begö
Ë/ 1000000., 
u£cs
/1000.);

207 
	}
}

214 
	#FORWARD
 (512<<20)

	)

215 
	#FORWARD1
 (64<<20)

	)

216 
	#FORWARD2
 (1<<20)

	)

223 
uöt64


224 
	$disksize
(*
disk
)

226 
fd
 = 
	`›í
(
disk
, 0);

227 
buf
[512];

228 
uöt64
 
off
 = 0;

230 i‡(
fd
 == -1) {

231 
	`≥º‹
("usage: disksize device");

238 
off
 +
FORWARD
;

239 i‡(
	`£ekto
(
fd
, 
off
, 
SEEK_SET
) != off) {

240 
	`debug
((
°dout
, "£ekto(%dMËÁûed\n", ()(
off
>>20)));

241 
off
 -
FORWARD
;

244 i‡((
	`ªad
(
fd
, 
buf
, (buf)) != (buf))) {

245 
	`debug
((
°dout
, "ªad @ %dM faûed\n", ()(
off
>>20)));

246 
off
 -
FORWARD
;

252 
off
 +
FORWARD1
;

253 i‡(
	`£ekto
(
fd
, 
off
, 
SEEK_SET
) != off) {

254 
	`debug
((
°dout
, "£ekto(%dMËÁûed\n", ()(
off
>>20)));

255 
off
 -
FORWARD1
;

258 i‡((
	`ªad
(
fd
, 
buf
, (buf)) != (buf))) {

259 
	`debug
((
°dout
, "ªad @ %dM faûed\n", ()(
off
>>20)));

260 
off
 -
FORWARD1
;

266 
off
 +
FORWARD2
;

267 i‡(
	`£ekto
(
fd
, 
off
, 
SEEK_SET
) != off) {

268 
	`debug
((
°dout
, "£ekto(%dMËÁûed\n", ()(
off
>>20)));

269 
off
 -
FORWARD2
;

272 i‡((
	`ªad
(
fd
, 
buf
, (buf)) != (buf))) {

273 
	`debug
((
°dout
, "ªad @ %dM faûed\n", ()(
off
>>20)));

274 
off
 -
FORWARD2
;

279 
	`debug
((
°dout
, "disksize(%sË%d MB\n", 
disk
, ()(
off
 >> 20)));

280  (
off
);

281 
	}
}

	@enough.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
gë_íough
();

7 
	$maö
()

9 
	`puãnv
("LOOP_O=0.0");

10 
	`puãnv
("TIMING_O=0.0");

11 
	`¥ötf
("%u\n", 
	`gë_íough
(0));

13 
	}
}

	@flushdisk.c

1 #ifdef 
löux


6 
	~<°dio.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<f˙é.h
>

9 
	~<uni°d.h
>

10 
	~<°dlib.h
>

11 
	~<sys/io˘l.h
>

12 
	~<sys/mou¡.h
>

15 
	$Êushdisk
(
fd
)

17 
ªt
 = 
	`io˘l
(
fd
, 
BLKFLSBUF
, 0);

18 
	`u¶ìp
(100000);

19  (
ªt
);

20 
	}
}

24 #ifdef 
MAIN


26 
	$maö
(
ac
, **
av
)

28 #ifdef 
löux


29 
fd
;

30 
i
;

32 
i
 = 1; i < 
ac
; ++i) {

33 
fd
 = 
	`›í
(
av
[
i
], 0);

34 i‡(
	`Êushdisk
(
fd
)) {

35 
	`exô
(1);

37 
	`˛o£
(
fd
);

41 
	}
}

	@getopt.c

24 
	~"bích.h
"

25 *
	gid
 = "%@%";

27 
	g›t›t
;

28 
	g›töd
;

29 *
	g›èrg
;

30 
	gn
;

33 
	$gë›t
(
ac
, **
av
, *
›ts
)

35 *
t
;

37 i‡(!
›töd
) {

38 
›töd
 = 1;

39 
n
 = 1;

41 
	`debug
((
°dîr
, "GETOPT ind=%dÇ=%dárg=%sáv[%d]='%s'\n",

42 
›töd
, 
n
, 
›èrg
 ? o±¨g : "", o±öd, 
av
[optind]));

44 i‡((
›töd
 >
ac
Ë|| (
av
[optind][0] != '-') || !av[optind][1]) {

45  (
EOF
);

48 
	`as£π
(
av
[
›töd
][
n
]);

49 
t
 = (*)
›ts
; *t;Å++) {

50 i‡(*
t
 =
av
[
›töd
][
n
]) {

54 i‡(!*
t
) {

55 
›t›t
 = 
av
[
›töd
][
n
];

56 
	`debug
((
°dîr
, "\tran out of optionÜetters\n"));

63 i‡(
t
[1] != ':' &&Å[1] != '|' &&Å[1] != ';') {

64 i‡(!
av
[
›töd
][
n
+1]) {

65 
›töd
++;

66 
n
 = 1;

68 
n
++;

70 
	`debug
((
°dîr
, "\tLegô sögÀt⁄ %c\n", *
t
));

71  (*
t
);

75 i‡(
av
[
›töd
][
n
+1]) {

76 i‡(
av
[
›töd
][
n
+1]) {

77 
›èrg
 = &
av
[
›töd
][
n
+1];

79 
›èrg
 = 0;

81 
›töd
++;

82 
n
 = 1;

83 
	`debug
((
°dîr
, "\t%¯wôh %s\n", *
t
, 
›èrg
));

84  (*
t
);

88 i‡(
t
[1] == '|') {

89 
›èrg
 = 0;

90 
›töd
++;

91 
n
 = 1;

92 
	`debug
((
°dîr
, "\t%¯wôhouà¨g\n", *
t
));

93  (*
t
);

97 i‡(
t
[1] == ';') {

98 
›èrg
 = 0;

99 
›töd
++;

100 
›t›t
 = *
t
;

101 
	`debug
((
°dîr
, "\twantedánother word\n"));

106 i‡((
›töd
 + 1 =
ac
Ë|| (
av
[optind+1][0] == '-')) {

107 
›t›t
 = 
av
[
›töd
][
n
];

108 
	`debug
((
°dîr
, "\twantedánother word\n"));

111 
›èrg
 = 
av
[
›töd
+1];

112 
›töd
 += 2;

113 
n
 = 1;

114 
	`debug
((
°dîr
, "\t%¯wôhárg %s\n", *
t
, 
›èrg
));

115  (*
t
);

116 
	}
}

118 #ifdef 
TEST


121 
	$maö
(
ac
, **
av
)

123 *
›èrg
;

124 
›töd
;

125 *
commít
 = 0;

126 
c
;

128 (
c
 = 
	`gë›t
(
ac
, 
av
, "fnpsx:y|")) != -1) {

129 
c
) {

134 
	`¥ötf
("GŸ o±i⁄ %c\n", 
c
);

138 
commít
 = 
›èrg
;

139 
	`¥ötf
("GŸ o±¨g %†wôh -%c\n", 
commít
, 
c
);

142 
	`Ârötf
(
°dîr
, "bad o±i⁄ %c\n", 
›t›t
);

145 
	`Ârötf
(
°dîr
, "unknow¿ªà%c\n", 
c
);

149 
av
[
›töd
]) {

150 
	`¥ötf
("av[%d] = %s\n", 
›töd
, 
av
[optind++]);

152 
	`exô
(0);

153 
	}
}

	@hello.c

1 
	~"bích.h
"

4 
	$maö
()

6 
	`wrôe
(1, "Hello world\n", 12);

8 
	}
}

	@lat_cmd.c

12 *
	gid
 = "$Id$\n";

14 
	~"bích.h
"

16 
bích
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

17 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

19 
	s_°©e
 {

20 ** 
	m¨gv
;

21 
pid_t
 
	mpid
;

22 } 
	t°©e_t
;

25 
	$maö
(
ac
, **
av
)

27 
c
;

28 
i
;

29 
∑øŒñ
 = 1;

30 
w¨mup
 = 0;

31 
ª≥tôi⁄s
 = -1;

32 
°©e_t
 
°©e
;

33 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>] cmdline...\n";

35 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

36 
c
) {

38 
∑øŒñ
 = 
	`©oi
(
›èrg
);

39 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

42 
w¨mup
 = 
	`©oi
(
›èrg
);

45 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

48 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

52 i‡(
›töd
 >
ac
) {

53 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

55 
°©e
.
¨gv
 = (**)
	`mÆloc
((
ac
 - 
›töd
 + 1) * (*));

56 i‡(!
°©e
.
¨gv
) {

57 
	`≥º‹
("malloc");

58 
	`exô
(1);

60 
°©e
.
pid
 = 0;

61 
i
 = 0; i < 
ac
 - 
›töd
; ++i) {

62 
°©e
.
¨gv
[
i
] = 
av
[
›töd
 + i];

64 
°©e
.
¨gv
[
i
] = 
NULL
;

66 
	`bíchmp
(
NULL
, 
bích
, NULL, 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

67 
	`mi¸o
("œt_cmd", 
	`gë_n
());

69 
	}
}

72 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

74 
°©e_t
* 
°©e
 = (°©e_t*)
cookõ
;

76 i‡(
ôî©i⁄s
) ;

78 i‡(
°©e
->
pid
) {

79 
	`kûl
(
°©e
->
pid
, 
SIGKILL
);

80 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

81 
°©e
->
pid
 = 0;

83 
	}
}

86 
	$bích
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

88 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

90 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

91 
ôî©i⁄s
-- > 0) {

92 
°©e
->
pid
 = 
	`f‹k
()) {

94 
	`execvp
(
°©e
->
¨gv
[0], state->argv);

99 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

100 
°©e
->
pid
 = 0;

102 
	}
}

	@lat_connect.c

24 *
	gid
 = "$Id$\n";

25 
	~"bích.h
"

27 
	s_°©e
 {

28 *
	m£rvî
;

29 } 
	t°©e_t
;

31 
do˛õ¡
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

32 
£rvî_maö
();

35 
	$maö
(
ac
, **
av
)

37 
°©e_t
 
°©e
;

38 
ª≥tôi⁄s
 = -1;

39 
c
;

40 
buf
[256];

41 *
ußge
 = "-s\n OR [-S] [-N <repetitions>] server\n";

43 –
c
 = 
	`gë›t
(
ac
, 
av
, "sSP:W:N:")Ë!
EOF
) {

44 
c
) {

46 i‡(
	`f‹k
() == 0) {

47 
	`£rvî_maö
();

49 
	`exô
(0);

52 
sock
 = 
	`t˝_c⁄√˘
(
av
[
›töd
],

53 
TCP_CONNECT
,

54 
SOCKOPT_NONE
);

55 
	`wrôe
(
sock
, "0", 1);

56 
	`˛o£
(
sock
);

57 
	`exô
(0);

60 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

63 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

68 i‡(
›töd
 + 1 !
ac
) {

69 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

72 
°©e
.
£rvî
 = 
av
[
›töd
];

73 
	`bíchmp
(
NULL
, 
do˛õ¡
, NULL, 0, 1, 0, 
ª≥tôi⁄s
, &
°©e
);

75 
	`•rötf
(
buf
, "TCP/IP c⁄√˘i⁄ co°Åÿ%s", 
°©e
.
£rvî
);

76 
	`mi¸o
(
buf
, 
	`gë_n
());

77 
	`exô
(0);

78 
	}
}

81 
	$do˛õ¡
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

83 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

84 *
£rvî
 = 
°©e
->server;

85 
sock
;

87 
ôî©i⁄s
-- > 0) {

88 
sock
 = 
	`t˝_c⁄√˘
(
£rvî
, 
TCP_CONNECT
, 
SOCKOPT_REUSE
);

89 
	`˛o£
(
sock
);

91 
	}
}

94 
	$£rvî_maö
()

96 
√wsock
, 
sock
;

97 
c
 ='1';

99 
GO_AWAY
;

100 
sock
 = 
	`t˝_£rvî
(
TCP_CONNECT
, 
SOCKOPT_NONE
|
SOCKOPT_REUSE
);

102 
√wsock
 = 
	`t˝_ac˚±
(
sock
, 
SOCKOPT_NONE
);

103 i‡(
	`ªad
(
√wsock
, &
c
, 1) > 0) {

104 
	`t˝_d⁄e
(
TCP_CONNECT
);

105 
	`exô
(0);

107 
	`˛o£
(
√wsock
);

110 
	}
}

	@lat_ctx.c

12 *
	gid
 = "$Id$\n";

14 
	~"bích.h
"

17 
	#MAXPROC
 2048

	)

18 
	#CHUNK
 (4<<10)

	)

19 
	#TRIPS
 5

	)

20 #i‚def 
max


21 
	#max
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

24 
doô
(
rd
, 
wr
, 
¥o˚ss_size
);

25 
¸óã_pùes
(**
p
, 
¥ocs
);

26 
¸óã_d´m⁄s
(**
p
, 
pid_t
 *
pids
, 
¥ocs
, 
¥o˚ss_size
);

27 
öôülize_ovîhód
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

28 
˛ónup_ovîhód
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

29 
bíchm¨k_ovîhód
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

30 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

31 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

32 
bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

34 
	s_°©e
 {

35 
	m¥o˚ss_size
;

36 
	movîhód
;

37 
	m¥ocs
;

38 
pid_t
* 
	mpids
;

39 **
	mp
;

40 * 
	md©a
;

44 
	$maö
(
ac
, **
av
)

46 
i
, 
max¥ocs
;

47 
c
;

48 
∑øŒñ
 = 1;

49 
w¨mup
 = 0;

50 
ª≥tôi⁄s
 = -1;

51 
_°©e
 
°©e
;

52 *
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>] [-s kbytes]Örocesses [processes ...]\n";

53 
time
;

59 
	`Ârötf
(
°dîr
, "Fix sumit() in ctx.c.\n");

60 
	`exô
(1);

63 
°©e
.
¥o˚ss_size
 = 0;

64 
°©e
.
ovîhód
 = 0.0;

65 
°©e
.
pids
 = 
NULL
;

70 –
c
 = 
	`gë›t
(
ac
, 
av
, "s:P:W:N:")Ë!
EOF
) {

71 
c
) {

73 
∑øŒñ
 = 
	`©oi
(
›èrg
);

74 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

77 
w¨mup
 = 
	`©oi
(
›èrg
);

80 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

83 
°©e
.
¥o˚ss_size
 = 
	`©oi
(
›èrg
) * 1024;

86 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

91 i‡(
›töd
 > 
ac
 - 1)

92 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

95 
max¥ocs
 = 
	`©oi
(
av
[
›töd
]);

96 
i
 = 
›töd
; i < 
ac
; ++i) {

97 
°©e
.
¥ocs
 = 
	`©oi
(
av
[
i
]);

98 i‡(
°©e
.
¥ocs
 > 
max¥ocs
)

99 
max¥ocs
 = 
°©e
.
¥ocs
;

101 
°©e
.
¥ocs
 = 
max¥ocs
;

102 
	`bíchmp
(
öôülize_ovîhód
, 
bíchm¨k_ovîhód
, 
˛ónup_ovîhód
,

103 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

104 i‡(
	`gëtime
() == 0) (0);

105 
°©e
.
ovîhód
 = 
	`gëtime
();

106 
°©e
.
ovîhód
 /
	`gë_n
();

107 
	`Ârötf
(
°dîr
, "\n\"size=%dk ovr=%.2f\n",

108 
°©e
.
¥o˚ss_size
/1024, sèã.
ovîhód
);

111 
i
 = 
›töd
; i < 
ac
; ++i) {

112 
°©e
.
¥ocs
 = 
	`©oi
(
av
[
i
]);

113 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
˛ónup
, 0, 
∑øŒñ
,

114 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

116 
time
 = 
	`gëtime
();

117 
time
 /
	`gë_n
();

118 
time
 /
°©e
.
¥ocs
;

119 
time
 -
°©e
.
ovîhód
;

121 i‡(
time
 > 0.0)

122 
	`Ârötf
(
°dîr
, "%d %.2f\n", 
°©e
.
¥ocs
, 
time
);

126 
	}
}

129 
	$öôülize_ovîhód
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

131 
i
;

132 
¥ocs
;

133 * 
p
;

134 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

136 i‡(
ôî©i⁄s
) ;

138 
pSèã
->
pids
 = 
NULL
;

139 
pSèã
->
p
 = (**)
	`mÆloc
’Sèã->
¥ocs
 * ((*) + 2 * ()));

140 
pSèã
->
d©a
 = (pSèã->
¥o˚ss_size
 > 0Ë? 
	`mÆloc
’Sèã->¥o˚ss_sizeË: 
NULL
;

141 i‡(!
pSèã
->
p
 || (pSèã->
¥o˚ss_size
 > 0 && !pSèã->
d©a
)) {

142 
	`≥º‹
("malloc");

143 
	`exô
(1);

145 
p
 = (*)&
pSèã
->p[pSèã->
¥ocs
];

146 
i
 = 0; i < 
pSèã
->
¥ocs
; ++i) {

147 
pSèã
->
p
[
i
] =Ö;

148 
p
 += 2;

151 i‡(
pSèã
->
d©a
)

152 
	`bzîo
(
pSèã
->
d©a
,ÖSèã->
¥o˚ss_size
);

154 
¥ocs
 = 
	`¸óã_pùes
(
pSèã
->
p
,ÖState->procs);

155 i‡(
¥ocs
 < 
pSèã
->procs) {

156 
	`˛ónup_ovîhód
(0, 
cookõ
);

157 
	`exô
(1);

159 
	}
}

162 
	$˛ónup_ovîhód
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

164 
i
;

165 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

167 i‡(
ôî©i⁄s
) ;

169 
i
 = 0; i < 
pSèã
->
¥ocs
; ++i) {

170 
	`˛o£
(
pSèã
->
p
[
i
][0]);

171 
	`˛o£
(
pSèã
->
p
[
i
][1]);

174 
	`‰ì
(
pSèã
->
p
);

175 i‡(
pSèã
->
d©a
Ë
	`‰ì
(pState->data);

176 
	}
}

179 
	$bíchm¨k_ovîhód
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

181 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

182 
i
 = 0;

183 
msg
 = 1;

185 
ôî©i⁄s
-- > 0) {

186 i‡(
	`wrôe
(
pSèã
->
p
[
i
][1], &
msg
, (msg)) != (msg)) {

188 
	`exô
(1);

190 i‡(
	`ªad
(
pSèã
->
p
[
i
][0], &
msg
, (msg)) != (msg)) {

192 
	`exô
(1);

194 i‡(++
i
 =
pSèã
->
¥ocs
) {

195 
i
 = 0;

197 
	`bªad
(
pSèã
->
d©a
,ÖSèã->
¥o˚ss_size
);

199 
	}
}

202 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

204 
¥ocs
;

205 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

207 i‡(
ôî©i⁄s
) ;

209 
	`öôülize_ovîhód
(
ôî©i⁄s
, 
cookõ
);

211 
pSèã
->
pids
 = (
pid_t
*)
	`mÆloc
’Sèã->
¥ocs
 * (pid_t));

212 i‡(
pSèã
->
pids
 =
NULL
)

213 
	`exô
(1);

214 
	`bzîo
((*)
pSèã
->
pids
,ÖSèã->
¥ocs
 * (
pid_t
));

215 
¥ocs
 = 
	`¸óã_d´m⁄s
(
pSèã
->
p
,ÖSèã->
pids
,

216 
pSèã
->
¥ocs
,ÖSèã->
¥o˚ss_size
);

217 i‡(
¥ocs
 < 
pSèã
->procs) {

218 
	`˛ónup
(0, 
cookõ
);

219 
	`exô
(1);

221 
	}
}

224 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

226 
i
;

227 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

229 i‡(
ôî©i⁄s
) ;

234 
	`˛ónup_ovîhód
(
ôî©i⁄s
, 
cookõ
);

235 
i
 = 1; 
pSèã
->
pids
 && i <ÖSèã->
¥ocs
; ++i) {

236 i‡(
pSèã
->
pids
[
i
] > 0) {

237 
	`kûl
(
pSèã
->
pids
[
i
], 
SIGKILL
);

238 
	`waôpid
(
pSèã
->
pids
[
i
], 
NULL
, 0);

241 i‡(
pSèã
->
pids
)

242 
	`‰ì
(
pSèã
->
pids
);

243 
pSèã
->
pids
 = 
NULL
;

244 
	}
}

247 
	$bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

249 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

250 
msg
;

256 
ôî©i⁄s
-- > 0) {

257 i‡(
	`wrôe
(
pSèã
->
p
[0][1], &
msg
, (msg)) !=

258 (
msg
)) {

260 
	`exô
(1);

262 i‡(
	`ªad
(
pSèã
->
p
[pSèã->
¥ocs
-1][0], &
msg
, (msg)) != (msg)) {

264 
	`exô
(1);

266 
	`bªad
(
pSèã
->
d©a
,ÖSèã->
¥o˚ss_size
);

268 
	}
}

272 
	$doô
(
rd
, 
wr
, 
¥o˚ss_size
)

274 
msg
;

275 * 
d©a
 = 
NULL
;

277 i‡(
¥o˚ss_size
) {

278 
d©a
 = 
	`mÆloc
(
¥o˚ss_size
);

279 i‡(!
d©a
) {

280 
	`≥º‹
("malloc");

281 
	`exô
(3);

283 
	`bzîo
(
d©a
, 
¥o˚ss_size
);

286 i‡(
	`ªad
(
rd
, &
msg
, (msg)) != (msg)) {

290 i‡(
¥o˚ss_size
)

291 
	`bªad
(
d©a
, 
¥o˚ss_size
);

292 i‡(
	`wrôe
(
wr
, &
msg
, (msg)) != (msg)) {

297 
	`exô
(1);

298 
	}
}

302 
	$¸óã_d´m⁄s
(**
p
, 
pid_t
 *
pids
, 
¥ocs
, 
¥o˚ss_size
)

304 
i
, 
j
;

305 
msg
;

313 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 
¥ocs
-1);

314 
i
 = 1; i < 
¥ocs
; ++i) {

315 
pids
[
i
] = 
	`f‹k
()) {

317  
i
;

320 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 
i
, 
¥ocs
-1);

321 
j
 = 0; j < 
¥ocs
; ++j) {

322 i‡(
j
 !
i
 - 1Ë
	`˛o£
(
p
[j][0]);

323 i‡(
j
 !
i
Ë
	`˛o£
(
p
[j][1]);

325 
	`doô
(
p
[
i
-1][0],Ö[i][1], 
¥o˚ss_size
);

337 i‡(
	`wrôe
(
p
[0][1], &
msg
, (msg)) != (msg) ||

338 
	`ªad
(
p
[
¥ocs
-1][0], &
msg
, (msg)) != (msg)) {

340 
	`exô
(1);

342  
¥ocs
;

343 
	}
}

346 
	$¸óã_pùes
(**
p
, 
¥ocs
)

348 
i
;

352 
	`m‹efds
();

353 
i
 = 0; i < 
¥ocs
; ++i) {

354 i‡(
	`pùe
(
p
[
i
]) == -1) {

355  
i
;

358  
¥ocs
;

359 
	}
}

	@lat_dram_page.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

17 
døm_∑ge_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

18 
bíchm¨k_lﬂds
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

19 
lﬂds
(
bíchmp_f
 
öôülize
, 
Àn
, 
w¨mup
, 
ª≥tôi⁄s
, * 
cookõ
);

21 
	sdøm_∑ge_°©e


23 
mem_°©e
 
	mm°©e
;

24 
	mgroup
;

28 
	$maö
(
ac
, **
av
)

30 
maxÀn
 = 64 * 1024 * 1024;

31 
w¨mup
 = 0;

32 
ª≥tôi⁄s
 = -1;

33 
c
;

34 
døm_∑ge_°©e
 
°©e
;

35 
døm_hô
, 
døm_miss
;

36 *
ußge
 = "[-v] [-W <warmup>] [-N <repetitions>][-MÜen[K|M]]\n";

38 
°©e
.
m°©e
.
width
 = 1;

39 
°©e
.
m°©e
.
löe
 = (*);

40 
°©e
.
m°©e
.
∑gesize
 = 
	`gë∑gesize
();

41 
°©e
.
group
 = 16;

43 –
c
 = 
	`gë›t
(
ac
, 
av
, "aL:T:M:W:N:")Ë!
EOF
) {

44 
c
) {

46 
°©e
.
m°©e
.
löe
 = 
	`byãs
(
›èrg
);

49 
°©e
.
group
 = 
	`byãs
(
›èrg
);

52 
maxÀn
 = 
	`byãs
(
›èrg
);

55 
w¨mup
 = 
	`©oi
(
›èrg
);

58 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

61 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

66 
døm_hô
 = 
	`lﬂds
(
mem_öôülize
, 
maxÀn
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

67 
døm_miss
 = 
	`lﬂds
(
døm_∑ge_öôülize
, 
maxÀn
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

69 i‡(
døm_hô
 < 0.95 * 
døm_miss
) {

70 
	`Ârötf
(
°dîr
, "%f\n", 
døm_miss
 - 
døm_hô
);

72 
	`Ârötf
(
°dîr
, "0.0\n");

76 
	}
}

78 
	#ONE
 
p
 = (**)*p;

	)

79 
	#FIVE
 
ONE
 ONE ONE ONE 
	)
ONE

80 
	#TEN
 
FIVE
 
	)
FIVE

81 
	#FIFTY
 
TEN
 TEN TEN TEN 
	)
TEN

82 
	#HUNDRED
 
FIFTY
 
	)
FIFTY

85 
	$bíchm¨k_lﬂds
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

87 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

88 **
p
 = (**)
°©e
->
ba£
;

89 
i
;

90 
cou¡
 = 
°©e
->
Àn
 / (°©e->
löe
 * 100) + 1;

92 
ôî©i⁄s
-- > 0) {

93 
i
 = 0; i < 
cou¡
; ++i) {

94 
HUNDRED
;

98 
	`u£_poöãr
((*)
p
);

99 
	}
}

102 
	$ªgroup
(
size_t
* 
∑ges
, 
groupsize
, * 
cookõ
)

104 
i
, 
j
;

105 * 
±r
;

106 *
∑ge
;

107 *
∑ge_íd
;

108 *
p
 = 0 ;

109 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

111 i‡(
groupsize
 <= 1) ;

113 
p
 = 
°©e
->
ba£
;

119 
i
 = 0; i < 
groupsize
 - 1; ++i) {

120 
j
 = 0; j < 
°©e
->
∑gesize
; j += (*)) {

121 *(**)(
p
 + 
∑ges
[
i
] + 
j
) =Ö +Öages[i+1] + j;

135 
∑ge
 = 
p
 + 
∑ges
[
groupsize
-1];

136 
∑ge_íd
 = 
∑ge
 + 
°©e
->
∑gesize
;

137 
i
 = 0; i < 
°©e
->
∑gesize
; i += (*)) {

138 
±r
 = *(**)(
∑ge
 + 
i
);

139 i‡(
∑ge
 <
±r
 &&Öå < 
∑ge_íd
) {

140 
off£t
 = ()(
±r
 - 
∑ge
);

141 *(**)(
∑ge
 + 
i
Ë
p
 + 
∑ges
[0] + 
off£t
;

144 
	}
}

150 
	$døm_∑ge_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

152 
i
;

153 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

154 
døm_∑ge_°©e
* 
d°©e
 = (døm_∑ge_°©e*)
cookõ
;

156 i‡(
ôî©i⁄s
) ;

158 
	`mem_öôülize
(
ôî©i⁄s
, 
cookõ
);

160 
i
 = 0; i < 
°©e
->
≈ages
; i +
d°©e
->
group
) {

161 
groupsize
 = 
d°©e
->
group
;

162 i‡(
groupsize
 > 
°©e
->
≈ages
 - 
i
) {

163 
groupsize
 = 
°©e
->
≈ages
 - 
i
;

165 
	`ªgroup
(
°©e
->
∑ges
 + 
i
, 
groupsize
, 
cookõ
);

168 
	`bíchm¨k_lﬂds
(1, 
cookõ
);

169 
	}
}

172 
	$lﬂds
(
bíchmp_f
 
öôülize
, 
Àn
, 
w¨mup
, 
ª≥tôi⁄s
, * 
cookõ
)

174 
ªsu…
;

175 
cou¡
;

176 
∑øŒñ
 = 1;

177 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

179 
°©e
->
Àn
 =Üen;

180 
°©e
->
maxÀn
 = 
Àn
;

181 
cou¡
 = 100 * (
°©e
->
Àn
 / (°©e->
löe
 * 100) + 1);

186 
	`bíchmp
(
öôülize
, 
bíchm¨k_lﬂds
, 
mem_˛ónup
,

187 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
);

190 
ªsu…
 = (1000. * ()
	`gëtime
()Ë/ ()(
cou¡
 * 
	`gë_n
());

195  
ªsu…
;

196 
	}
}

	@lat_fcntl.c

1 
	~"bích.h
"

12 *
	gid
 = "$Id:Üat_pipe.c,v 1.8 1997/06/16 05:38:58Üm Exp $\n";

14 
	~"bích.h
"

16 
Êock
 
	glock
, 
	gu∆ock
;

17 
Êock
 
	gs1
, 
	gs2
;

32 
	#waô⁄
(
fd
Ë
	`f˙é
(fd, 
F_SETLKW
, &
lock
)

	)

33 
	#ªÀa£
(
fd
Ë
	`f˙é
(fd, 
F_SETLK
, &
u∆ock
)

	)

35 
	s_°©e
 {

36 
	mfûíame1
[2048];

37 
	mfûíame2
[2048];

38 
	mpid
;

39 
	mfd1
;

40 
	mfd2
;

43 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

44 
bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

45 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

48 
	$¥ocA
(
_°©e
 *
°©e
)

50 i‡(
	`waô⁄
(
°©e
->
fd1
) == -1) {

51 
	`≥º‹
("lock of fd1 failed\n");

52 
	`˛ónup
(0, 
°©e
);

53 
	`exô
(1);

55 i‡(
	`ªÀa£
(
°©e
->
fd2
) == -1) {

56 
	`≥º‹
("unlock of fd2 failed\n");

57 
	`˛ónup
(0, 
°©e
);

58 
	`exô
(1);

60 i‡(
	`waô⁄
(
°©e
->
fd2
) == -1) {

61 
	`≥º‹
("lock of fd2 failed\n");

62 
	`˛ónup
(0, 
°©e
);

63 
	`exô
(1);

65 i‡(
	`ªÀa£
(
°©e
->
fd1
) == -1) {

66 
	`≥º‹
("unlock of fd1 failed\n");

67 
	`˛ónup
(0, 
°©e
);

68 
	`exô
(1);

70 
	}
}

73 
	$¥ocB
(
_°©e
 *
°©e
)

75 i‡(
	`ªÀa£
(
°©e
->
fd1
) == -1) {

76 
	`≥º‹
("unlock of fd1 failed\n");

77 
	`˛ónup
(0, 
°©e
);

78 
	`exô
(1);

80 i‡(
	`waô⁄
(
°©e
->
fd2
) == -1) {

81 
	`≥º‹
("lock of fd2 failed\n");

82 
	`˛ónup
(0, 
°©e
);

83 
	`exô
(1);

85 i‡(
	`ªÀa£
(
°©e
->
fd2
) == -1) {

86 
	`≥º‹
("unlock of fd2 failed\n");

87 
	`˛ónup
(0, 
°©e
);

88 
	`exô
(1);

90 i‡(
	`waô⁄
(
°©e
->
fd1
) == -1) {

91 
	`≥º‹
("lock of fd1 failed\n");

92 
	`˛ónup
(0, 
°©e
);

93 
	`exô
(1);

95 
	}
}

98 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

100 
buf
[10000];

101 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

103 i‡(
ôî©i⁄s
) ;

105 
	`•rötf
(
°©e
->
fûíame1
, "/tmp/lmbích-f˙é%d.1", 
	`gëpid
());

106 
	`•rötf
(
°©e
->
fûíame2
, "/tmp/lmbích-f˙é%d.2", 
	`gëpid
());

107 
°©e
->
pid
 = 0;

108 
°©e
->
fd1
 = -1;

109 
°©e
->
fd2
 = -1;

111 
	`u∆ök
(
°©e
->
fûíame1
);

112 
	`u∆ök
(
°©e
->
fûíame2
);

113 i‡((
°©e
->
fd1
 = 
	`›í
(°©e->
fûíame1
, 
O_CREAT
|
O_RDWR
, 0666)) == -1) {

114 
	`≥º‹
("create");

115 
	`exô
(1);

117 i‡((
°©e
->
fd2
 = 
	`›í
(°©e->
fûíame2
, 
O_CREAT
|
O_RDWR
, 0666)) == -1) {

118 
	`≥º‹
("create");

119 
	`exô
(1);

121 
	`u∆ök
(
°©e
->
fûíame1
);

122 
	`u∆ök
(
°©e
->
fûíame2
);

123 
	`wrôe
(
°©e
->
fd1
, 
buf
, (buf));

124 
	`wrôe
(
°©e
->
fd2
, 
buf
, (buf));

125 
lock
.
l_ty≥
 = 
F_WRLCK
;

126 
lock
.
l_whí˚
 = 0;

127 
lock
.
l_°¨t
 = 0;

128 
lock
.
l_Àn
 = 1;

129 
u∆ock
 = 
lock
;

130 
u∆ock
.
l_ty≥
 = 
F_UNLCK
;

131 i‡(
	`waô⁄
(
°©e
->
fd1
) == -1) {

132 
	`≥º‹
("lock1");

133 
	`exô
(1);

135 i‡(
	`waô⁄
(
°©e
->
fd2
) == -1) {

136 
	`≥º‹
("lock2");

137 
	`exô
(1);

139 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

140 
°©e
->
pid
 = 
	`f‹k
()) {

142 
	`≥º‹
("fork");

143 
	`exô
(1);

145 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

147 
	`¥ocB
(
°©e
);

152 
	}
}

155 
	$bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

157 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

159 
ôî©i⁄s
-- > 0) {

160 
	`¥ocA
(
°©e
);

162 
	}
}

165 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

167 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

169 i‡(
ôî©i⁄s
) ;

171 i‡(
°©e
->
fd1
 >0Ë
	`˛o£
(state->fd1);

172 i‡(
°©e
->
fd2
 >0Ë
	`˛o£
(state->fd2);

173 
°©e
->
fd1
 = -1;

174 
°©e
->
fd2
 = -1;

176 i‡(
°©e
->
pid
) {

177 
	`kûl
(
°©e
->
pid
, 
SIGKILL
);

178 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

180 
°©e
->
pid
 = 0;

181 
	}
}

184 
	$maö
(
ac
, **
av
)

186 
c
;

187 
∑øŒñ
 = 1;

188 
w¨mup
 = 0;

189 
ª≥tôi⁄s
 = -1;

190 
_°©e
 
°©e
;

191 *
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

196 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

197 
c
) {

199 
∑øŒñ
 = 
	`©oi
(
›èrg
);

200 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

203 
w¨mup
 = 
	`©oi
(
›èrg
);

206 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

209 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

214 
°©e
.
pid
 = 0;

216 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
˛ónup
, 0, 
∑øŒñ
,

217 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

218 
	`mi¸o
("F˙éÜockÜ©ícy", 2 * 
	`gë_n
());

221 
	}
}

	@lat_fifo.c

11 *
	gid
 = "$Id$\n";

13 
	~"bích.h
"

15 
	#F1
 "/tmp/lmbích_f1.%d"

	)

16 
	#F2
 "/tmp/lmbích_f2.%d"

	)

18 
öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

19 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

20 
doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

21 
wrôî
(
wr
, 
rd
);

23 
	s_°©e
 {

24 
	mfûíame1
[256];

25 
	mfûíame2
[256];

26 
	mpid
;

27 
	mwr
;

28 
	mrd
;

29 } 
	t°©e_t
;

32 
	$maö
(
ac
, **
av
)

34 
°©e_t
 
°©e
;

35 
∑øŒñ
 = 1;

36 
w¨mup
 = 0;

37 
ª≥tôi⁄s
 = -1;

38 
c
;

39 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

41 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

42 
c
) {

44 
∑øŒñ
 = 
	`©oi
(
›èrg
);

45 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

48 
w¨mup
 = 
	`©oi
(
›èrg
);

51 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

54 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

58 i‡(
›töd
 < 
ac
) {

59 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

62 
°©e
.
pid
 = 0;

64 
	`bíchmp
(
öôülize
, 
doô
, 
˛ónup
, 
SHORT
, 
∑øŒñ
,

65 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

66 
	`mi¸o
("Fifÿœãncy", 
	`gë_n
());

68 
	}
}

71 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

73 
c
;

74 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

76 i‡(
ôî©i⁄s
) ;

78 
°©e
->
pid
 = 0;

79 
	`•rötf
(
°©e
->
fûíame1
,
F1
,
	`gëpid
());

80 
	`•rötf
(
°©e
->
fûíame2
,
F2
,
	`gëpid
());

82 
	`u∆ök
(
°©e
->
fûíame1
); u∆ök(°©e->
fûíame2
);

83 i‡(
	`mknod
(
°©e
->
fûíame1
, 
S_IFIFO
|0664, 0) ||

84 
	`mknod
(
°©e
->
fûíame2
, 
S_IFIFO
|0664, 0)) {

85 
	`≥º‹
("mknod");

86 
	`exô
(1);

88 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

89 
°©e
->
pid
 = 
	`f‹k
()) {

91 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

92 
°©e
->
rd
 = 
	`›í
(°©e->
fûíame1
, 
O_RDONLY
);

93 
°©e
->
wr
 = 
	`›í
(°©e->
fûíame2
, 
O_WRONLY
);

94 
	`wrôî
(
°©e
->
wr
, sèã->
rd
);

98 
	`≥º‹
("fork");

102 
°©e
->
wr
 = 
	`›í
(°©e->
fûíame1
, 
O_WRONLY
);

103 
°©e
->
rd
 = 
	`›í
(°©e->
fûíame2
, 
O_RDONLY
);

110 i‡(
	`wrôe
(
°©e
->
wr
, &
c
, 1Ë!1 || 
	`ªad
(°©e->
rd
, &c, 1) != 1) {

111 
	`≥º‹
("(i)Ñead/write onÖipe");

112 
	`exô
(1);

114 
	}
}

117 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

119 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

121 i‡(
ôî©i⁄s
) ;

123 
	`u∆ök
(
°©e
->
fûíame1
);

124 
	`u∆ök
(
°©e
->
fûíame2
);

125 
	`˛o£
(
°©e
->
wr
);

126 
	`˛o£
(
°©e
->
rd
);

128 i‡(
°©e
->
pid
 > 0) {

129 
	`kûl
(
°©e
->
pid
, 15);

130 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

131 
°©e
->
pid
 = 0;

133 
	}
}

136 
	$doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

138 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

139 
c
;

140 
w
 = 
°©e
->
wr
;

141 
r
 = 
°©e
->
rd
;

142 *
˝å
 = &
c
;

144 
ôî©i⁄s
-- > 0) {

145 i‡(
	`wrôe
(
w
, 
˝å
, 1) != 1 ||

146 
	`ªad
(
r
, 
˝å
, 1) != 1) {

147 
	`≥º‹
("(r)Ñead/write onÖipe");

148 
	`exô
(1);

151 
	}
}

154 
	$wrôî
(
w
, 
r
)

156 
c
;

157 *
˝å
 = &
c
;

160 i‡(
	`ªad
(
r
, 
˝å
, 1) != 1 ||

161 
	`wrôe
(
w
, 
˝å
, 1) != 1) {

162 
	`≥º‹
("(w)Ñead/write onÖipe");

165 
	}
}

	@lat_fs.c

5 *
	gid
 = "$Id$\n";

7 
	~"bích.h
"

10 
	s_°©e
 {

11 *
	mtmpdú
;

12 
	mmax
;

13 
	mn
;

14 ** 
	m«mes
;

15 
	mndús
;

16 ** 
	mdús
;

17 
size_t
 
	msize
;

19 
mósuª
(
size_t
 
size
,

20 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, * 
cookõ
);

21 
mkfûe
(* 
s
, 
size_t
 
size
);

22 
£tup_«mes
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

23 
˛ónup_«mes
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

24 
£tup_rm
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

25 
˛ónup_mk
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

26 
bíchm¨k_mk
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

27 
bíchm¨k_rm
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

30 
	$maö
(
ac
, **
av
)

32 
i
;

33 
∑øŒñ
 = 1;

34 
w¨mup
 = 0;

35 
ª≥tôi⁄s
 = -1;

36 
sizes
[] = { 0, 1024, 4096, 10*1024 };

37 
_°©e
 
°©e
;

38 
c
;

39 * 
ußge
 = "[-s <file size>] [-n <max filesÖer dir>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] [<dir>]\n";

41 
°©e
.
size
 = 0;

42 
°©e
.
max
 = 100;

43 
°©e
.
tmpdú
 = 
NULL
;

45 –
c
 = 
	`gë›t
(
ac
, 
av
, "s:n:P:W:N:")Ë!
EOF
) {

46 
c
) {

48 
°©e
.
size
 = 
	`byãs
(
›èrg
);

51 
°©e
.
max
 = 
	`byãs
(
›èrg
);

54 
∑øŒñ
 = 
	`©oi
(
›èrg
);

55 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

58 
w¨mup
 = 
	`©oi
(
›èrg
);

61 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

64 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

68 i‡(
›töd
 < 
ac
 - 1) {

69 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

71 i‡(
›töd
 =
ac
 - 1) {

72 
°©e
.
tmpdú
 = 
av
[1];

75 i‡(
°©e
.
size
) {

76 
	`mósuª
(
°©e
.
size
, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &state);

78 
i
 = 0; i < (
sizes
)/(); ++i) {

79 
°©e
.
size
 = 
sizes
[
i
];

80 
	`mósuª
(
°©e
.
size
,

81 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

85 
	}
}

88 
	$mósuª
(
size_t
 
size
, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, * 
cookõ
)

90 
	`Ârötf
(
°dîr
, "%luk", 
size
>>10);

91 
	`bíchmp
(
£tup_«mes
, 
bíchm¨k_mk
, 
˛ónup_mk
, 0, 
∑øŒñ
,

92 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
);

93 i‡(
	`gëtime
()) {

94 
	`Ârötf
(
°dîr
, "\t%lu\t%.0f", ()
	`gë_n
(),

95 ()(1000000. * 
	`gë_n
(Ë/ ()
	`gëtime
()));

97 
	`Ârötf
(
°dîr
, "\t-1\t-1");

100 
	`bíchmp
(
£tup_rm
, 
bíchm¨k_rm
, 
˛ónup_«mes
, 0, 
∑øŒñ
,

101 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
);

102 i‡(
	`gëtime
()) {

103 
	`Ârötf
(
°dîr
, "\t%.0f",

104 ()(1000000. * 
	`gë_n
(Ë/ ()
	`gëtime
()));

106 
	`Ârötf
(
°dîr
, "\t-1");

108 
	`Ârötf
(
°dîr
, "\n");

109 
	}
}

112 
	$mkfûe
(*
«me
, 
size_t
 
size
)

114 
size_t
 
chunk
;

115 
fd
 = 
	`¸ót
(
«me
, 0666);

116 
buf
[128*1024];

118 
size
 > 0) {

119 
chunk
 = ((
size
 > (128*1024)) ? (128*1024) : size);

120 
	`wrôe
(
fd
, 
buf
, 
chunk
);

121 
size
 -
chunk
;

123 
	`˛o£
(
fd
);

124 
	}
}

127 
	$£tup_«mes_ªcur£
(
ôî_t
* 
foff
, iãr_t* 
doff
, 
dïth
, 
_°©e
* 
°©e
)

129 
i
, 
ndús
, 
cou¡
;

130 * 
ba£«me
 = 
°©e
->
dús
[*
doff
];

131 
«me
[
L_tm≤am
 + 8192];

133 i‡(
dïth
 > 0) {

134 
cou¡
 = 
°©e
->
max
, 
i
 = 1; i < 
dïth
; ++i) {

135 
cou¡
 *
°©e
->
max
;

137 
ndús
 = (
°©e
->
n
 - *
foff
Ë/ 
cou¡
 + 1;

138 
i
 = 0; i < 
°©e
->
max
 && i < 
ndús
 && *
foff
 < sèã->
n
; ++i) {

139 
	`•rötf
(
«me
, "%s/%ld", 
ba£«me
, 
i
);

140 
°©e
->
dús
[++(*
doff
)] = 
	`°rdup
(
«me
);

141 
	`mkdú
(
«me
, 0777);

142 
	`£tup_«mes_ªcur£
(
foff
, 
doff
, 
dïth
-1, 
°©e
);

145 
i
 = 0; i < 
°©e
->
max
 && *
foff
 < sèã->
n
; ++i) {

146 
	`•rötf
(
«me
, "%s/%ld", 
ba£«me
, 
i
);

147 
°©e
->
«mes
[(*
foff
)++] = 
	`°rdup
(
«me
);

150 
	}
}

153 
	$£tup_«mes
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

155 
i
, 
ndús
, 
dïth
;

156 
ôî_t
 
foff
;

157 
ôî_t
 
doff
;

158 
dú«me_tm∂
[
L_tm≤am
 + 256];

159 * 
dú«me
;

160 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

162 i‡(!
ôî©i⁄s
) ;

164 
dïth
 = 0;

165 
°©e
->
n
 = 
ôî©i⁄s
;

166 
°©e
->
ndús
 = 
ôî©i⁄s
 / sèã->
max
;

167 i‡(
ôî©i⁄s
 % 
°©e
->
max
Ë°©e->
ndús
++;

168 
ndús
 = 
°©e
->ndirs;Çdirs > 1; ) {

169 
ndús
 =Çdú†/ 
°©e
->
max
 + ((ndirs % state->max) ? 1 : 0);

170 
°©e
->
ndús
 +=Çdirs;

171 
dïth
++;

174 
°©e
->
«mes
 = (**)
	`mÆloc
(
ôî©i⁄s
 * (*));

175 
°©e
->
dús
 = (**)
	`mÆloc
(°©e->
ndús
 * (*));

176 i‡(
ôî©i⁄s
 && !
°©e
->
«mes
 || sèã->
ndús
 && !°©e->
dús
) {

177 
	`≥º‹
("malloc");

178 
	`exô
(1);

180 
i
 = 0; i < 
ôî©i⁄s
; ++i) {

181 
°©e
->
«mes
[
i
] = 
NULL
;

184 
i
 = 0; i < 
°©e
->
ndús
; ++i) {

185 
°©e
->
dús
[
i
] = 
NULL
;

188 
	`•rötf
(
dú«me_tm∂
, "œt_fs_%d_XXXXXX", 
	`gëpid
());

189 
dú«me
 = 
	`ãm≤am
(
°©e
->
tmpdú
, 
dú«me_tm∂
);

190 i‡(!
dú«me
) {

191 
	`≥º‹
("tempnam failed");

192 
	`exô
(1);

194 i‡(
	`mkdú
(
dú«me
, 
S_IRUSR
|
S_IWUSR
|
S_IXUSR
)) {

195 
	`≥º‹
("mkdir failed");

196 
	`exô
(1);

198 
°©e
->
dús
[0] = 
dú«me
;

199 
foff
 = 0;

200 
doff
 = 0;

201 
	`£tup_«mes_ªcur£
(&
foff
, &
doff
, 
dïth
, 
°©e
);

202 i‡(
foff
 !
ôî©i⁄s
 || 
doff
 !
°©e
->
ndús
 - 1) {

203 
	`Ârötf
(
°dîr
, "£tup_«mes: ERROR: foff=%lu, iãøti⁄s=%lu, doff=%lu,Çdús=%lu, dïth=%ld\n", ()
foff
, ()
ôî©i⁄s
, ()
doff
, ()
°©e
->
ndús
, 
dïth
);

205 
	}
}

208 
	$˛ónup_«mes
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

210 
i
;

211 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

213 i‡(!
ôî©i⁄s
) ;

215 
i
 = 0; i < 
°©e
->
n
; ++i) {

216 i‡(
°©e
->
«mes
[
i
]Ë
	`‰ì
(state->names[i]);

218 
	`‰ì
(
°©e
->
«mes
);

219 
°©e
->
n
 = 0;

221 
i
 = 
°©e
->
ndús
 - 1; i >= 0; --i) {

222 i‡(
°©e
->
dús
[
i
]) {

223 
	`rmdú
(
°©e
->
dús
[
i
]);

224 
	`‰ì
(
°©e
->
dús
[
i
]);

227 
	`‰ì
(
°©e
->
dús
);

228 
°©e
->
ndús
 = 0;

229 
	}
}

232 
	$£tup_rm
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

234 i‡(!
ôî©i⁄s
) ;

236 
	`£tup_«mes
(
ôî©i⁄s
, 
cookõ
);

237 
	`bíchm¨k_mk
(
ôî©i⁄s
, 
cookõ
);

238 
	}
}

241 
	$˛ónup_mk
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

243 i‡(!
ôî©i⁄s
) ;

245 
	`bíchm¨k_rm
(
ôî©i⁄s
, 
cookõ
);

246 
	`˛ónup_«mes
(
ôî©i⁄s
, 
cookõ
);

247 
	}
}

250 
	$bíchm¨k_mk
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

252 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

254 
ôî©i⁄s
-- > 0) {

255 i‡(!
°©e
->
«mes
[
ôî©i⁄s
]) {

256 
	`Ârötf
(
°dîr
, "bíchm¨k_mk:ÇuŒ fûíamê© %lu o‡%lu\n", 
ôî©i⁄s
, 
°©e
->
n
);

259 
	`mkfûe
(
°©e
->
«mes
[
ôî©i⁄s
], sèã->
size
);

261 
	}
}

264 
	$bíchm¨k_rm
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

266 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

268 
ôî©i⁄s
-- > 0) {

269 i‡(!
°©e
->
«mes
[
ôî©i⁄s
]) {

270 
	`Ârötf
(
°dîr
, "bíchm¨k_rm:ÇuŒ fûíamê© %lu o‡%lu\n", 
ôî©i⁄s
, 
°©e
->
n
);

273 
	`u∆ök
(
°©e
->
«mes
[
ôî©i⁄s
]);

275 
	}
}

	@lat_http.c

12 *
	gid
 = "$Id$\n";

14 
	~"bích.h
"

16 *
	gbuf
;

17 
	gdebug
;

18 
	gecho
;

21 
	$hâp
(*
£rvî
, *
fûe
, 
¥og
)

23 
sock
;

24 
n
;

25 
b
 = 0;

27 
sock
 = 
	`t˝_c⁄√˘
(
£rvî
, 
¥og
, 
SOCKOPT_REUSE
);

28 
	`•rötf
(
buf
, "GET /%†HTTP/1.0\r\n\r\n\n", 
fûe
);

29 i‡(
debug
) {

30 
	`¥ötf
(
buf
);

32 
	`wrôe
(
sock
, 
buf
, 
	`°æí
(buf));

33 (
n
 = 
	`ªad
(
sock
, 
buf
, 
XFERSIZE
)) > 0) {

34 
b
 +
n
;

35 i‡(
echo
) {

36 
	`wrôe
(1, 
buf
, 
n
);

39 
	`˛o£
(
sock
);

40 i‡(
debug
) {

41 
	`¥ötf
("GŸ %d\n", 
b
);

43  (
b
);

44 
	}
}

47 
	$kûlhâp
(*
£rvî
, 
¥og
)

49 
sock
;

51 
sock
 = 
	`t˝_c⁄√˘
(
£rvî
, 
¥og
, 
SOCKOPT_REUSE
);

52 
	`wrôe
(
sock
, "EXIT", 4);

53 
	`˛o£
(
sock
);

54 
	}
}

56 
	$ch›
(*
s
Ë{ *†&& *†!'\n'Ës++; *†0; 
	}
}

59 
	$maö
(
ac
, **
av
)

61 *
£rvî
;

62 
i
, 
¥og
;

63 
c
;

64 
shutdown
 = 0;

65 
uöt64
 
tŸÆ
 = 0;

66 
uöt64
 
u£cs
 = 0;

67 
avg
;

68 *
«me
 = 
av
[0];

69 
fûe
[1024];

70 *
ußge
 = "[-d] [-e] [-S] serverhost [port] <Üist\n";

72 –
c
 = 
	`gë›t
(
ac
, 
av
, "deS")Ë!
EOF
) {

73 
c
) {

75 
debug
++;

78 
echo
++;

81 
shutdown
 = 1;

84 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

89 i‡(
›töd
 >
ac
 || optind <ác - 2) {

90 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

91 
	`exô
(0);

93 
£rvî
 = 
av
[
›töd
++];

95 i‡(
›töd
 < 
ac
 && 
	`©oi
(
av
[optind]) != 0) {

96 
¥og
 = -
	`©oi
(
av
[
›töd
]);

98 
¥og
 = -80;

101 i‡(
shutdown
) {

102 
	`kûlhâp
(
£rvî
, 
¥og
);

103 
	`exô
(0);

106 
i
 = 0;

107 
buf
 = 
	`vÆloc
(
XFERSIZE
);

108 i‡(!
buf
) {

109 
	`≥º‹
("valloc");

110 
	`exô
(1);

112 
	`bzîo
(
buf
, 
XFERSIZE
);

113 
	`fgës
(
fûe
, (fûe), 
°dö
)) {

114 
	`ch›
(
fûe
);

115 
	`°¨t
(0);

116 
tŸÆ
 +
	`hâp
(
£rvî
, 
fûe
, 
¥og
);

117 
u£cs
 +
	`°›
(0,0);

118 
i
++;

120 
avg
 = 
tŸÆ
;

121 
avg
 /(
i
 - 1);

122 i‡(
avg
 > 1000) {

123 
avg
 /= 1000;

124 
	`Ârötf
(
°dîr
, "Avg x„r: %.1fKB, ", 
avg
);

126 
	`Ârötf
(
°dîr
, "Avg x„∏%d, ", ()
avg
);

128 
	`£âime
(
u£cs
);

129 
	`œãncy
((
uöt64
)1, 
tŸÆ
);

130 
	`exô
(0);

131 
	}
}

	@lat_mem_rd.c

15 *
	gid
 = "$Id: s.lat_mem_rd.c 1.13 98/06/30 16:13:49-07:00Üm@lm.bitmover.com $\n";

17 
	~"bích.h
"

18 
	#STRIDE
 (512/(*))

	)

19 
	#LOWER
 512

	)

20 
lﬂds
(
size_t
 
Àn
, size_à
ønge
, size_à
°ride
,

21 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
);

22 
size_t
 
°ï
(size_à
k
);

23 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

25 
bíchmp_f
 
	gÂInô
 = 
°ride_öôülize
;

28 
	$maö
(
ac
, **
av
)

30 
i
;

31 
c
;

32 
∑øŒñ
 = 1;

33 
w¨mup
 = 0;

34 
ª≥tôi⁄s
 = -1;

35 
size_t
 
Àn
;

36 
size_t
 
ønge
;

37 
size_t
 
°ride
;

38 *
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>] [-t]Üen [stride...]\n";

40 –
c
 = 
	`gë›t
(
ac
, 
av
, "tP:W:N:")Ë!
EOF
) {

41 
c
) {

43 
ÂInô
 = 
thøsh_öôülize
;

46 
∑øŒñ
 = 
	`©oi
(
›èrg
);

47 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

50 
w¨mup
 = 
	`©oi
(
›èrg
);

53 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

56 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

60 i‡(
›töd
 =
ac
) {

61 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

64 
Àn
 = 
	`©oi
(
av
[
›töd
]);

65 
Àn
 *= 1024 * 1024;

67 i‡(
›töd
 =
ac
 - 1) {

68 
	`Ârötf
(
°dîr
, "\"°ride=%d\n", ()
STRIDE
);

69 
ønge
 = 
LOWER
;Ñ™gê<
Àn
;Ñ™gê
	`°ï
(range)) {

70 
	`lﬂds
(
Àn
, 
ønge
, 
STRIDE
, 
∑øŒñ
,

71 
w¨mup
, 
ª≥tôi⁄s
);

74 
i
 = 
›töd
 + 1; i < 
ac
; ++i) {

75 
°ride
 = 
	`byãs
(
av
[
i
]);

76 
	`Ârötf
(
°dîr
, "\"°ride=%d\n", ()
°ride
);

77 
ønge
 = 
LOWER
;Ñ™gê<
Àn
;Ñ™gê
	`°ï
(range)) {

78 
	`lﬂds
(
Àn
, 
ønge
, 
°ride
, 
∑øŒñ
,

79 
w¨mup
, 
ª≥tôi⁄s
);

81 
	`Ârötf
(
°dîr
, "\n");

85 
	}
}

87 
	#ONE
 
p
 = (**)*p;

	)

88 
	#FIVE
 
ONE
 ONE ONE ONE 
	)
ONE

89 
	#TEN
 
FIVE
 
	)
FIVE

90 
	#FIFTY
 
TEN
 TEN TEN TEN 
	)
TEN

91 
	#HUNDRED
 
FIFTY
 
	)
FIFTY

95 
	$bíchm¨k_lﬂds
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

97 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

98 **
p
 = (**)
°©e
->p[0];

99 
size_t
 
i
;

100 
size_t
 
cou¡
 = 
°©e
->
Àn
 / (°©e->
löe
 * 100) + 1;

102 
ôî©i⁄s
-- > 0) {

103 
i
 = 0; i < 
cou¡
; ++i) {

104 
HUNDRED
;

108 
	`u£_poöãr
((*)
p
);

109 
°©e
->
p
[0] = (*)p;

110 
	}
}

114 
	$lﬂds
(
size_t
 
Àn
, size_à
ønge
, size_à
°ride
,

115 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
)

117 
ªsu…
;

118 
size_t
 
cou¡
;

119 
mem_°©e
 
°©e
;

121 i‡(
ønge
 < 
°ride
) ;

123 
°©e
.
width
 = 1;

124 
°©e
.
Àn
 = 
ønge
;

125 
°©e
.
maxÀn
 = 
Àn
;

126 
°©e
.
löe
 = 
°ride
;

127 
°©e
.
∑gesize
 = 
	`gë∑gesize
();

128 
cou¡
 = 100 * (
°©e
.
Àn
 / (°©e.
löe
 * 100) + 1);

131 (*
ÂInô
)(0, &
°©e
);

132 
	`Ârötf
(
°dîr
, "loads:áfter init\n");

133 (*
bíchm¨k_lﬂds
)(2, &
°©e
);

134 
	`Ârötf
(
°dîr
, "loads:áfter benchmark\n");

135 
	`mem_˛ónup
(0, &
°©e
);

136 
	`Ârötf
(
°dîr
, "loads:áfter cleanup\n");

137 
	`£âime
(1);

138 
	`ßve_n
(1);

143 
	`bíchmp
(
ÂInô
, 
bíchm¨k_lﬂds
, 
mem_˛ónup
,

144 100000, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

148 
	`ßve_möimum
();

149 
ªsu…
 = (1000. * ()
	`gëtime
()Ë/ ()(
cou¡
 * 
	`gë_n
());

150 
	`Ârötf
(
°dîr
, "%.5‡%.3f\n", 
ønge
 / (1024. * 1024.), 
ªsu…
);

152 
	}
}

154 
size_t


155 
	$°ï
(
size_t
 
k
)

157 i‡(
k
 < 1024) {

158 
k
 = k * 2;

159 } i‡(
k
 < 4*1024) {

160 
k
 += 1024;

162 
size_t
 
s
;

164 
s
 = 4 * 1024; s <
k
; s *= 2)

166 
k
 +
s
 / 4;

168  (
k
);

169 
	}
}

	@lat_mmap.c

15 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
	#PSIZE
 (16<<10)

	)

20 
	#N
 10

	)

21 
	#STRIDE
 (10*
PSIZE
)

	)

22 
	#MINSIZE
 (
STRIDE
*2)

	)

24 
	#CHK
(
x
Ëi‡((xË=-1Ë{ 
	`≥º‹
("x"); 
	`exô
(1); }

	)

27 
	s_°©e
 {

28 
size_t
 
	msize
;

29 
	mfd
;

30 
	møndom
;

31 
	m˛⁄e
;

32 *
	m«me
;

33 } 
	t°©e_t
;

35 
öô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

36 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

37 
dom≠pög
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

40 
	$maö
(
ac
, **
av
)

42 
°©e_t
 
°©e
;

43 
∑øŒñ
 = 1;

44 
w¨mup
 = 0;

45 
ª≥tôi⁄s
 = -1;

46 
c
;

47 *
ußge
 = "[-r] [-C] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] size file\n";

50 
°©e
.
øndom
 = 0;

51 
°©e
.
˛⁄e
 = 0;

52 –
c
 = 
	`gë›t
(
ac
, 
av
, "rP:W:N:C")Ë!
EOF
) {

53 
c
) {

55 
∑øŒñ
 = 
	`©oi
(
›èrg
);

56 i‡(
∑øŒñ
 <= 0)

57 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

60 
w¨mup
 = 
	`©oi
(
›èrg
);

63 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

66 
°©e
.
øndom
 = 1;

69 
°©e
.
˛⁄e
 = 1;

72 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

77 i‡(
›töd
 + 2 !
ac
) {

78 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

81 
°©e
.
size
 = 
	`byãs
(
av
[
›töd
]);

82 i‡(
°©e
.
size
 < 
MINSIZE
) {

85 
°©e
.
«me
 = 
av
[
›töd
+1];

87 
	`bíchmp
(
öô
, 
dom≠pög
, 
˛ónup
, 0, 
∑øŒñ
,

88 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

90 i‡(
	`gëtime
() > 0) {

91 
	`mi¸omb
(
°©e
.
size
, 
	`gë_n
());

94 
	}
}

97 
	$öô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

99 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

101 i‡(
ôî©i⁄s
) ;

103 i‡(
°©e
->
˛⁄e
) {

104 
buf
[128];

105 * 
s
;

108 
	`•rötf
(
buf
, "%d", ()
	`gëpid
());

109 
s
 = (*)
	`mÆloc
(
	`°æí
(
°©e
->
«me
Ë+ såÀn(
buf
) + 1);

110 i‡(!
s
) {

111 
	`≥º‹
("malloc");

112 
	`exô
(1);

114 
	`•rötf
(
s
, "%s%d", 
°©e
->
«me
, ()
	`gëpid
());

115 i‡(
	`˝
(
°©e
->
«me
, 
s
, 
S_IREAD
|
S_IWRITE
) < 0) {

116 
	`≥º‹
("CouldÇot copy file");

117 
	`u∆ök
(
s
);

118 
	`exô
(1);

120 
°©e
->
«me
 = 
s
;

122 
	`CHK
(
°©e
->
fd
 = 
	`›í
(°©e->
«me
, 
O_RDWR
));

123 i‡(
°©e
->
˛⁄e
Ë
	`u∆ök
(°©e->
«me
);

124 i‡(
	`£ekto
(
°©e
->
fd
, 0, 
SEEK_END
Ë< sèã->
size
) {

125 
	`Ârötf
(
°dîr
, "Input fileÅoo small\n");

126 
	`exô
(1);

128 
	}
}

131 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

133 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

135 i‡(
ôî©i⁄s
) ;

137 
	`˛o£
(
°©e
->
fd
);

138 
	}
}

145 
	$dom≠pög
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

147 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

148 
fd
 = 
°©e
->fd;

149 
size_t
 
size
 = 
°©e
->size;

150 
øndom
 = 
°©e
->random;

151 *
p
, *
whîe
, *
íd
;

152 
c
 = 
size
 & 0xff;

154 
ôî©i⁄s
-- > 0) {

156 #ifdef 
MAP_FILE


157 
whîe
 = 
	`mm≠
(0, 
size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_FILE
|
MAP_SHARED
, 
fd
, 0);

159 
whîe
 = 
	`mm≠
(0, 
size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
fd
, 0);

161 i‡(()
whîe
 == -1) {

162 
	`≥º‹
("mmap");

163 
	`exô
(1);

165 i‡(
øndom
) {

166 
íd
 = 
whîe
 + 
size
;

167 
p
 = 
whîe
;Ö < 
íd
;Ö +
STRIDE
) {

168 *
p
 = 
c
;

171 
íd
 = 
whîe
 + (
size
 / 
N
);

172 
p
 = 
whîe
;Ö < 
íd
;Ö +
PSIZE
) {

173 *
p
 = 
c
;

176 
	`munm≠
(
whîe
, 
size
);

178 
	}
}

	@lat_ops.c

26 *
	gid
 = "$Id$\n";

28 
	~"bích.h
"

30 
	s_°©e
 {

31 
	mN
;

32 
	mM
;

33 
	mK
;

34 * 
	md©a
;

37 
	#FIVE
(
a
Ë®®®®
	)
a

38 
	#TEN
(
a
Ë®®®®®®®®®
	)
a

39 
	#HUNDRED
(
a
Ë
	`TEN
(TEN◊))

	)

42 
	$Êﬂt_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

44 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

45 
i
;

46 * 
x
;

48 i‡(
ôî©i⁄s
) ;

50 
x
 = (*)
	`mÆloc
(
pSèã
->
M
 * ());

51 
pSèã
->
d©a
 = (*)
x
;

52 i‡(!
pSèã
->
d©a
) {

53 
	`≥º‹
("malloc");

54 
	`exô
(1);

56 
i
 = 0; i < 
pSèã
->
M
; ++i) {

57 
x
[
i
] = 3.14159265;

59 
	}
}

62 
	$doubÀ_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

64 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

65 
i
;

67 i‡(
ôî©i⁄s
) ;

69 
pSèã
->
d©a
 = (*)
	`mÆloc
’Sèã->
M
 * ());

70 i‡(!
pSèã
->
d©a
) {

71 
	`≥º‹
("malloc");

72 
	`exô
(1);

74 
i
 = 0; i < 
pSèã
->
M
; ++i) {

75 
pSèã
->
d©a
[
i
] = 3.14159265;

77 
	}
}

80 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

82 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

84 i‡(
ôî©i⁄s
) ;

86 i‡(
pSèã
->
d©a
)

87 
	`‰ì
(
pSèã
->
d©a
);

88 
	}
}

91 
	$do_öãgî_bôwi£
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

93 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

94 
r
 = 
pSèã
->
N
;

95 
s
 = ()
ôî©i⁄s
;

97 
ôî©i⁄s
-- > 0) {

98 
	`HUNDRED
(
r
 ^
ôî©i⁄s
; 
s
 ^=Ñ;Ñ |= s;)

100 
	`u£_öt
(
r
);

101 
	}
}

104 
	$do_öãgî_add
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

106 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

107 
i
;

108 
a
 = 
pSèã
->
N
 + 57;

110 
ôî©i⁄s
-- > 0) {

111 
i
 = 1; i < 1001; ++i) {

112 #i‚de‡
__GNUC__


114 
	`HUNDRED
(
a
=◊+
i
)^a;)

116 
	`TEN
(
a
˜+a+
i
;)

120 
	`u£_öt
(
a
);

121 
	}
}

124 
	$do_öãgî_mul
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

126 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

127 
r
 = 
pSèã
->
N
 + 37431;

128 
s
 = 
pSèã
->
N
 + 4;

129 
t
 = 
r
 * 
s
 * s * s * s * s * s * s * s * s * s -Ñ;

131 
ôî©i⁄s
-- > 0) {

132 
	`TEN
(
r
 *
s
;);Ñ -
t
;

133 
	`TEN
(
r
 *
s
;);Ñ -
t
;

135 
	`u£_öt
(
r
);

136 
	}
}

139 
	$do_öãgî_div
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

141 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

142 
r
 = 
pSèã
->
N
 + 36;

143 
s
 = (
r
 + 1) << 20;

145 
ôî©i⁄s
-- > 0) {

146 
	`HUNDRED
(
r
 = 
s
 /Ñ;)

148 
	`u£_öt
(
r
);

149 
	}
}

152 
	$do_öãgî_mod
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

154 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

155 
r
 = 
pSèã
->
N
 + 
ôî©i⁄s
;

156 
s
 = 
pSèã
->
N
 + 62;

158 
ôî©i⁄s
-- > 0) {

159 
	`HUNDRED
(
r
 %
s
;Ñ |= s;)

161 
	`u£_öt
(
r
);

162 
	}
}

165 
	$do_öt64_bôwi£
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

167 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

168 
öt64
 
r
 = (öt64)
pSèã
->
N
 | ((int64)pState->N << 32);

169 
öt64
 
s
 = (öt64)
ôî©i⁄s
 | ((int64)iterations << 32);

170 
öt64
 
i
 = ((öt64)
ôî©i⁄s
 << 34) - 1;

172 
ôî©i⁄s
-- > 0) {

173 
	`HUNDRED
(
r
 ^
i
; 
s
 ^=Ñ;Ñ |= s;)

174 
i
--;

176 
	`u£_öt
(()
r
);

177 
	}
}

180 
	$do_öt64_add
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

182 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

183 
öt64
 
i
;

184 
öt64
 
a
 = (öt64)
pSèã
->
N
 + 37420;

185 
öt64
 
b
 = (öt64)
pSèã
->
N
 + 21698324;

187 
a
 +(
öt64
)(0xFE + 
pSèã
->
N
)<<30;

188 
b
 +(
öt64
)(0xFFFE + 
pSèã
->
N
)<<29;

190 
ôî©i⁄s
-- > 0) {

191 
i
 = 1; i < 1001; ++i) {

192 #i‚de‡
__GNUC__


194 
	`HUNDRED
(
a
=◊+
i
)^a;)

196 
	`TEN
(
a
˜+a+
i
;)

200 
	`u£_öt
(()
a
+()
b
);

201 
	}
}

204 
	$do_öt64_mul
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

206 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

207 
öt64
 
r
 = (öt64)
pSèã
->
N
 + 37420;

208 
öt64
 
s
 = (öt64)
pSèã
->
N
 + 4;

209 
öt64
 
t
;

211 
r
 +(
öt64
)(
pSèã
->
N
 + 6)<<32;

212 
t
 = 
r
 * 
s
 * s * s * s * s * s * s * s * s * s -Ñ;

214 
ôî©i⁄s
-- > 0) {

215 
	`TEN
(
r
 *
s
;);Ñ -
t
;

216 
	`TEN
(
r
 *
s
;);Ñ -
t
;

218 
	`u£_öt
(()
r
);

219 
	}
}

222 
	$do_öt64_div
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

224 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

225 
öt64
 
r
 = (öt64)
pSèã
->
N
 + 36;

226 
öt64
 
s
;

228 
r
 +=Ñ << 33;

229 
s
 = (
r
 + 17) << 13;

231 
ôî©i⁄s
-- > 0) {

232 
	`HUNDRED
(
r
 = 
s
 /Ñ;)

234 
	`u£_öt
(()
r
);

235 
	}
}

238 
	$do_öt64_mod
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

240 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

241 
öt64
 
r
 = 
ôî©i⁄s
 + ((int64)iterations << 32);

242 
öt64
 
s
 = (öt64)
pSèã
->
N
 + ((int64)pState->N << 56);

244 
ôî©i⁄s
-- > 0) {

245 
	`HUNDRED
(
r
 %
s
;Ñ |= s;);

247 
	`u£_öt
(()
r
);

248 
	}
}

251 
	$do_Êﬂt_add
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

253 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

254 
f
 = ()
pSèã
->
N
;

255 
g
 = ()
pSèã
->
K
;

257 
ôî©i⁄s
-- > 0) {

258 
	`TEN
(
f
 +()f;Ë‡+()
g
;

259 
	`TEN
(
f
 +()f;Ë‡+()
g
;

261 
	`u£_öt
(()
f
);

262 
	`u£_öt
(()
g
);

263 
	}
}

266 
	$do_Êﬂt_mul
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

268 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

269 
f
 = 8.0‡* ()
pSèã
->
N
;

270 
g
 = 0.125‡* ()
pSèã
->
M
 / 1000.0;

272 
ôî©i⁄s
-- > 0) {

273 
	`TEN
(
f
 *f; f *
g
;);

274 
	`TEN
(
f
 *f; f *
g
;);

276 
	`u£_öt
(()
f
);

277 
	`u£_öt
(()
g
);

278 
	}
}

281 
	$do_Êﬂt_div
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

283 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

284 
f
 = 1.41421356‡* ()
pSèã
->
N
;

285 
g
 = 3.14159265‡* ()
pSèã
->
M
 / 1000.0;

287 
ôî©i⁄s
-- > 0) {

288 
	`FIVE
(
	`TEN
(
f
 = 
g
 / f;) TEN(g = f / g;))

290 
	`u£_öt
(()
f
);

291 
	`u£_öt
(()
g
);

292 
	}
}

295 
	$do_doubÀ_add
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

297 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

298 
f
 = ()
pSèã
->
N
;

299 
g
 = ()
pSèã
->
K
;

301 
ôî©i⁄s
-- > 0) {

302 
	`TEN
(
f
 +()f;Ë‡+()
g
;

303 
	`TEN
(
f
 +()f;Ë‡+()
g
;

305 
	`u£_öt
(()
f
);

306 
	`u£_öt
(()
g
);

307 
	}
}

310 
	$do_doubÀ_mul
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

312 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

313 
f
 = 8.0 * ()
pSèã
->
N
;

314 
g
 = 0.125 * ()
pSèã
->
M
 / 1000.0;

316 
ôî©i⁄s
-- > 0) {

317 
	`TEN
(
f
 *f; f *
g
;)

318 
	`TEN
(
f
 *f; f *
g
;)

320 
	`u£_öt
(()
f
);

321 
	`u£_öt
(()
g
);

322 
	}
}

325 
	$do_doubÀ_div
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

327 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

328 
f
 = 1.41421356 * ()
pSèã
->
N
;

329 
g
 = 3.14159265 * ()
pSèã
->
M
 / 1000.0;

331 
ôî©i⁄s
-- > 0) {

332 
	`FIVE
(
	`TEN
(
f
 = 
g
 / f;) TEN(g = f / g;))

334 
	`u£_öt
(()
f
);

335 
	`u£_öt
(()
g
);

336 
	}
}

339 
	$do_Êﬂt_bogomÊ›s
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

341 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

342 
i
;

343 
M
 = 
pSèã
->M / 10;

345 
ôî©i⁄s
-- > 0) {

346 *
x
 = (*)
pSèã
->
d©a
;

347 
i
 = 0; i < 
M
; ++i) {

348 
x
[0] = (1.0f + x[0]) * (1.5f - x[0]) / x[0];

349 
x
[1] = (1.0f + x[1]) * (1.5f - x[1]) / x[1];

350 
x
[2] = (1.0f + x[2]) * (1.5f - x[2]) / x[2];

351 
x
[3] = (1.0f + x[3]) * (1.5f - x[3]) / x[3];

352 
x
[4] = (1.0f + x[4]) * (1.5f - x[4]) / x[4];

353 
x
[5] = (1.0f + x[5]) * (1.5f - x[5]) / x[5];

354 
x
[6] = (1.0f + x[6]) * (1.5f - x[6]) / x[6];

355 
x
[7] = (1.0f + x[7]) * (1.5f - x[7]) / x[7];

356 
x
[8] = (1.0f + x[8]) * (1.5f - x[8]) / x[8];

357 
x
[9] = (1.0f + x[9]) * (1.5f - x[9]) / x[9];

358 
x
 += 10;

361 
	}
}

364 
	$do_doubÀ_bogomÊ›s
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

366 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

367 
i
;

368 
M
 = 
pSèã
->M / 10;

370 
ôî©i⁄s
-- > 0) {

371 *
x
 = (*)
pSèã
->
d©a
;

372 
i
 = 0; i < 
M
; ++i) {

373 
x
[0] = (1.0f + x[0]) * (1.5f - x[0]) / x[0];

374 
x
[1] = (1.0f + x[1]) * (1.5f - x[1]) / x[1];

375 
x
[2] = (1.0f + x[2]) * (1.5f - x[2]) / x[2];

376 
x
[3] = (1.0f + x[3]) * (1.5f - x[3]) / x[3];

377 
x
[4] = (1.0f + x[4]) * (1.5f - x[4]) / x[4];

378 
x
[5] = (1.0f + x[5]) * (1.5f - x[5]) / x[5];

379 
x
[6] = (1.0f + x[6]) * (1.5f - x[6]) / x[6];

380 
x
[7] = (1.0f + x[7]) * (1.5f - x[7]) / x[7];

381 
x
[8] = (1.0f + x[8]) * (1.5f - x[8]) / x[8];

382 
x
[9] = (1.0f + x[9]) * (1.5f - x[9]) / x[9];

383 
x
 += 10;

386 
	}
}

389 
	$maö
(
ac
, **
av
)

391 
c
;

392 
w¨mup
 = 0;

393 
∑øŒñ
 = 1;

394 
ª≥tôi⁄s
 = -1;

395 
uöt64
 
i›_time
;

396 
uöt64
 
i›_N
;

397 
_°©e
 
°©e
;

398 *
ußge
 = "[-W <warmup>] [-N <repetitions>] [-P <parallel>] \n";

400 
°©e
.
N
 = 1;

401 
°©e
.
M
 = 1000;

402 
°©e
.
K
 = -1023;

403 
°©e
.
d©a
 = 
NULL
;

405 –
c
 = 
	`gë›t
(
ac
, 
av
, "W:N:P:")Ë!
EOF
) {

406 
c
) {

408 
w¨mup
 = 
	`©oi
(
›èrg
);

411 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

414 
∑øŒñ
 = 
	`©oi
(
›èrg
);

415 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

418 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

423 
	`bíchmp
(
NULL
, 
do_öãgî_bôwi£
, NULL,

424 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

425 
	`«no
("öãgî bô", 
	`gë_n
() * 100 * 3);

426 
i›_time
 = 
	`gëtime
();

427 
i›_N
 = 
	`gë_n
() * 100 * 3;

429 
	`bíchmp
(
NULL
, 
do_öãgî_add
, NULL,

430 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

431 #i‚de‡
__GNUC__


432 
	`£âime
(
	`gëtime
(Ë- (
	`gë_n
(Ë* 100000 * 
i›_time
Ë/ 
i›_N
);

433 
	`«no
("öãgîádd", 
	`gë_n
() * 100000);

435 
	`«no
("öãgîádd", 
	`gë_n
() * 10000 * 2);

438 
	`bíchmp
(
NULL
, 
do_öãgî_mul
, NULL,

439 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

440 
	`£âime
(
	`gëtime
(Ë- (
	`gë_n
(Ë* 2 * 
i›_time
Ë/ 
i›_N
);

441 
	`«no
("öãgî mul", 
	`gë_n
() * 10 * 2);

443 
	`bíchmp
(
NULL
, 
do_öãgî_div
, NULL,

444 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

445 
	`«no
("öãgî div", 
	`gë_n
() * 100);

447 
	`bíchmp
(
NULL
, 
do_öãgî_mod
, NULL,

448 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

449 
	`£âime
(
	`gëtime
(Ë- (
	`gë_n
(Ë* 100 * 
i›_time
Ë/ 
i›_N
);

450 
	`«no
("öãgî mod", 
	`gë_n
() * 100);

452 
	`bíchmp
(
NULL
, 
do_öt64_bôwi£
, NULL,

453 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

454 
	`«no
("öt64 bô", 
	`gë_n
() * 100 * 3);

455 
i›_time
 = 
	`gëtime
();

456 
i›_N
 = 
	`gë_n
() * 100 * 3;

458 
	`bíchmp
(
NULL
, 
do_öt64_add
, NULL,

459 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

460 #i‚de‡
__GNUC__


461 
	`£âime
(
	`gëtime
(Ë- (
	`gë_n
(Ë* 100000 * 
i›_time
Ë/ 
i›_N
);

462 
	`«no
("uöt64ádd", 
	`gë_n
() * 100000);

464 
	`«no
("uöt64ádd", 
	`gë_n
() * 10000 * 2);

467 
	`bíchmp
(
NULL
, 
do_öt64_mul
, NULL,

468 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

469 
	`£âime
(
	`gëtime
(Ë- (
	`gë_n
(Ë* 2 * 
i›_time
Ë/ 
i›_N
);

470 
	`«no
("öt64 mul", 
	`gë_n
() * 10 * 2);

472 
	`bíchmp
(
NULL
, 
do_öt64_div
, NULL,

473 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

474 
	`«no
("öt64 div", 
	`gë_n
() * 100);

476 
	`bíchmp
(
NULL
, 
do_öt64_mod
, NULL,

477 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

478 
	`£âime
(
	`gëtime
(Ë- (
	`gë_n
(Ë* 100 * 
i›_time
Ë/ 
i›_N
);

479 
	`«no
("öt64 mod", 
	`gë_n
() * 100);

481 
	`bíchmp
(
NULL
, 
do_Êﬂt_add
, NULL,

482 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

483 
	`«no
("Êﬂàadd", 
	`gë_n
() * (10 + 1) * 2);

485 
	`bíchmp
(
NULL
, 
do_Êﬂt_mul
, NULL,

486 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

487 
	`«no
("Êﬂàmul", 
	`gë_n
() * 10 * 2 * 2);

489 
	`bíchmp
(
NULL
, 
do_Êﬂt_div
, NULL,

490 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

491 
	`«no
("Êﬂàdiv", 
	`gë_n
() * 100);

493 
	`bíchmp
(
NULL
, 
do_doubÀ_add
, NULL,

494 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

495 
	`«no
("doubÀádd", 
	`gë_n
() * (10 + 1) * 2);

497 
	`bíchmp
(
NULL
, 
do_doubÀ_mul
, NULL,

498 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

499 
	`«no
("doubÀ mul", 
	`gë_n
() * 10 * 2 * 2);

501 
	`bíchmp
(
NULL
, 
do_doubÀ_div
, NULL,

502 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

503 
	`«no
("doubÀ div", 
	`gë_n
() * 100);

505 
	`bíchmp
(
Êﬂt_öôülize
, 
do_Êﬂt_bogomÊ›s
, 
˛ónup
,

506 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

507 
	`«no
("ÊﬂàbogomÊ›s", 
	`gë_n
(Ë* 
°©e
.
M
);

508 
	`fÊush
(
°dout
); fÊush(
°dîr
);

510 
	`bíchmp
(
doubÀ_öôülize
, 
do_doubÀ_bogomÊ›s
, 
˛ónup
,

511 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

512 
	`«no
("doubÀ bogomÊ›s", 
	`gë_n
(Ë* 
°©e
.
M
);

513 
	`fÊush
(
°dout
); fÊush(
°dîr
);

516 
	}
}

	@lat_pagefault.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

17 
	#CHK
(
x
Ëi‡((xË=-1Ë{ 
	`≥º‹
("x"); 
	`exô
(1); }

	)

19 
	s_°©e
 {

20 
	mfd
;

21 
	msize
;

22 
	m≈ages
;

23 
	m˛⁄e
;

24 * 
	mfûe
;

25 * 
	mwhîe
;

26 
size_t
* 
	m∑ges
;

27 } 
	t°©e_t
;

29 
öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

30 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

31 
bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

32 
bíchm¨k_mm≠
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

35 
	$maö
(
ac
, **
av
)

37 
∑øŒñ
 = 1;

38 
w¨mup
 = 0;

39 
ª≥tôi⁄s
 = -1;

40 
c
;

41 
t_mm≠
;

42 
t_comböed
;

43 
°©
 
°
;

44 
_°©e
 
°©e
;

45 
buf
[2048];

46 * 
ußge
 = "[-C] [-P <parallel>] [-W <warmup>] [-N <repetitions>] file\n";

48 
°©e
.
˛⁄e
 = 0;

50 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:C")Ë!
EOF
) {

51 
c
) {

53 
∑øŒñ
 = 
	`©oi
(
›èrg
);

54 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

57 
w¨mup
 = 
	`©oi
(
›èrg
);

60 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

63 
°©e
.
˛⁄e
 = 1;

66 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

70 i‡(
›töd
 !
ac
 - 1 ) {

71 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

74 
°©e
.
fûe
 = 
av
[
›töd
];

75 
	`CHK
(
	`°©
(
°©e
.
fûe
, &
°
));

76 
°©e
.
≈ages
 = 
°
.
°_size
 / (
size_t
)
	`gë∑gesize
();

78 #ifdef 
MS_INVALIDATE


79 
	`bíchmp
(
öôülize
, 
bíchm¨k_mm≠
, 
˛ónup
, 0, 
∑øŒñ
,

80 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

81 
t_mm≠
 = 
	`gëtime
(Ë/ ()
	`gë_n
();

83 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
˛ónup
, 0, 
∑øŒñ
,

84 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

85 
t_comböed
 = 
	`gëtime
(Ë/ ()
	`gë_n
();

86 
	`£âime
(
	`gë_n
(Ë* (
t_comböed
 - 
t_mm≠
));

88 
	`•rötf
(
buf
, "PageÁu…†⁄ %s", 
°©e
.
fûe
);

89 
	`mi¸o
(
buf
, 
°©e
.
≈ages
 * 
	`gë_n
());

92 
	}
}

95 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

97 
∑gesize
;

98 
°©
 
sbuf
;

99 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

101 i‡(
ôî©i⁄s
) ;

103 i‡(
°©e
->
˛⁄e
) {

104 
buf
[128];

105 * 
s
;

108 
	`•rötf
(
buf
, "%d", ()
	`gëpid
());

109 
s
 = (*)
	`mÆloc
(
	`°æí
(
°©e
->
fûe
Ë+ såÀn(
buf
) + 1);

110 i‡(!
s
) {

111 
	`≥º‹
("malloc");

112 
	`exô
(1);

114 
	`•rötf
(
s
, "%s%d", 
°©e
->
fûe
, ()
	`gëpid
());

115 i‡(
	`˝
(
°©e
->
fûe
, 
s
, 
S_IREAD
|
S_IWRITE
) < 0) {

116 
	`≥º‹
("CouldÇot copy file");

117 
	`u∆ök
(
s
);

118 
	`exô
(1);

120 
°©e
->
fûe
 = 
s
;

122 
	`CHK
(
°©e
->
fd
 = 
	`›í
(°©e->
fûe
, 0));

123 i‡(
°©e
->
˛⁄e
Ë
	`u∆ök
(°©e->
fûe
);

124 
	`CHK
(
	`f°©
(
°©e
->
fd
, &
sbuf
));

126 
	`§™d
(
	`gëpid
());

127 
∑gesize
 = 
	`gë∑gesize
();

128 
°©e
->
size
 = 
sbuf
.
°_size
;

129 
°©e
->
size
 -°©e->sizê% 
∑gesize
;

130 
°©e
->
≈ages
 = sèã->
size
 / 
∑gesize
;

131 
°©e
->
∑ges
 = 
	`≥rmuèti⁄
(°©e->
≈ages
, 
∑gesize
);

133 i‡(
°©e
->
size
 < 1024*1024) {

134 
	`Ârötf
(
°dîr
, "œt_∑geÁu…: %†toÿsmÆl\n", 
°©e
->
fûe
);

135 
	`exô
(1);

137 
°©e
->
whîe
 = 
	`mm≠
(0, sèã->
size
,

138 
PROT_READ
, 
MAP_SHARED
, 
°©e
->
fd
, 0);

140 #ifdef 
MS_INVALIDATE


141 i‡(
	`msync
(
°©e
->
whîe
, sèã->
size
, 
MS_INVALIDATE
) != 0) {

142 
	`≥º‹
("msync");

143 
	`exô
(1);

146 
	}
}

149 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

151 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

153 i‡(
ôî©i⁄s
) ;

155 
	`munm≠
(
°©e
->
whîe
, sèã->
size
);

156 i‡(
°©e
->
fd
 >0Ë
	`˛o£
(state->fd);

157 
	`‰ì
(
°©e
->
∑ges
);

158 
	}
}

161 
	$bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

163 
i
;

164 
sum
 = 0;

165 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

167 
ôî©i⁄s
-- > 0) {

168 
i
 = 0; i < 
°©e
->
≈ages
; ++i) {

169 
sum
 +*(
°©e
->
whîe
 + sèã->
∑ges
[
i
]);

171 
	`munm≠
(
°©e
->
whîe
, sèã->
size
);

172 
°©e
->
whîe
 = 
	`mm≠
(0, sèã->
size
,

173 
PROT_READ
, 
MAP_SHARED
, 
°©e
->
fd
, 0);

174 #ifdef 
MS_INVALIDATE


175 i‡(
	`msync
(
°©e
->
whîe
, sèã->
size
, 
MS_INVALIDATE
) != 0) {

176 
	`≥º‹
("msync");

177 
	`exô
(1);

181 
	`u£_öt
(
sum
);

182 
	}
}

185 
	$bíchm¨k_mm≠
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

187 
sum
 = 0;

188 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

190 
ôî©i⁄s
-- > 0) {

191 
	`munm≠
(
°©e
->
whîe
, sèã->
size
);

192 
°©e
->
whîe
 = 
	`mm≠
(0, sèã->
size
,

193 
PROT_READ
, 
MAP_SHARED
, 
°©e
->
fd
, 0);

194 #ifdef 
MS_INVALIDATE


195 i‡(
	`msync
(
°©e
->
whîe
, sèã->
size
, 
MS_INVALIDATE
) != 0) {

196 
	`≥º‹
("msync");

197 
	`exô
(1);

201 
	`u£_öt
(
sum
);

202 
	}
}

	@lat_pipe.c

12 *
	gid
 = "$Id$\n";

14 
	~"bích.h
"

16 
öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

17 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

18 
doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

19 
wrôî
(
w
, 
r
);

21 
	s_°©e
 {

22 
	mpid
;

23 
	mp1
[2];

24 
	mp2
[2];

25 } 
	t°©e_t
;

28 
	$maö
(
ac
, **
av
)

30 
°©e_t
 
°©e
;

31 
∑øŒñ
 = 1;

32 
w¨mup
 = 0;

33 
ª≥tôi⁄s
 = -1;

34 
c
;

35 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

37 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

38 
c
) {

40 
∑øŒñ
 = 
	`©oi
(
›èrg
);

41 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

44 
w¨mup
 = 
	`©oi
(
›èrg
);

47 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

50 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

54 i‡(
›töd
 < 
ac
) {

55 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

58 
°©e
.
pid
 = 0;

60 
	`bíchmp
(
öôülize
, 
doô
, 
˛ónup
, 
SHORT
, 
∑øŒñ
,

61 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

62 
	`mi¸o
("Pùêœãncy", 
	`gë_n
());

64 
	}
}

67 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

69 
c
;

70 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

72 i‡(
ôî©i⁄s
) ;

74 i‡(
	`pùe
(
°©e
->
p1
) == -1) {

75 
	`≥º‹
("pipe");

76 
	`exô
(1);

78 i‡(
	`pùe
(
°©e
->
p2
) == -1) {

79 
	`≥º‹
("pipe");

80 
	`exô
(1);

82 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

83 
°©e
->
pid
 = 
	`f‹k
()) {

85 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

86 
	`sig«l
(
SIGTERM
, 
exô
);

87 
	`˛o£
(
°©e
->
p1
[1]);

88 
	`˛o£
(
°©e
->
p2
[0]);

89 
	`wrôî
(
°©e
->
p2
[1], sèã->
p1
[0]);

93 
	`≥º‹
("fork");

97 
	`˛o£
(
°©e
->
p1
[0]);

98 
	`˛o£
(
°©e
->
p2
[1]);

105 i‡(
	`wrôe
(
°©e
->
p1
[1], &
c
, 1Ë!1 || 
	`ªad
(°©e->
p2
[0], &c, 1) != 1){

106 
	`≥º‹
("(i)Ñead/write onÖipe");

107 
	`exô
(1);

109 
	}
}

112 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

114 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

116 i‡(
ôî©i⁄s
) ;

118 i‡(
°©e
->
pid
) {

119 
	`kûl
(
°©e
->
pid
, 
SIGKILL
);

120 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

121 
°©e
->
pid
 = 0;

123 
	}
}

126 
	$doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

128 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

129 
c
;

130 
w
 = 
°©e
->
p1
[1];

131 
r
 = 
°©e
->
p2
[0];

132 *
˝å
 = &
c
;

134 
ôî©i⁄s
-- > 0) {

135 i‡(
	`wrôe
(
w
, 
˝å
, 1) != 1 ||

136 
	`ªad
(
r
, 
˝å
, 1) != 1) {

137 
	`≥º‹
("(r)Ñead/write onÖipe");

138 
	`exô
(1);

141 
	}
}

144 
	$wrôî
(
w
, 
r
)

146 
c
;

147 *
˝å
 = &
c
;

150 i‡(
	`ªad
(
r
, 
˝å
, 1) != 1 ||

151 
	`wrôe
(
w
, 
˝å
, 1) != 1) {

152 
	`≥º‹
("(w)Ñead/write onÖipe");

155 
	}
}

	@lat_pmake.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

17 
£tup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

18 
bích
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

19 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

20 
w‹k
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

22 
	s_°©e
 {

23 
	mjobs
;

24 
ôî_t
 
	môî©i⁄s
;

25 * 
	mx
;

26 ** 
	mp
;

27 
pid_t
* 
	mpids
;

28 } 
	t°©e_t
;

31 
	$maö
(
ac
, **
av
)

33 
°©e_t
 
°©e
;

34 
∑øŒñ
 = 1;

35 
w¨mup
 = 0;

36 
ª≥tôi⁄s
 = -1;

37 
c
;

38 
time
;

39 
uöt64
 
u£cs
;

40 
buf
[1024];

41 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>] Njobs usecs...\n";

43 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

44 
c
) {

46 
∑øŒñ
 = 
	`©oi
(
›èrg
);

47 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

50 
w¨mup
 = 
	`©oi
(
›èrg
);

53 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

56 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

60 i‡(
ac
 < 
›töd
 + 2) {

61 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

63 
°©e
.
jobs
 = 
	`©oi
(
av
[
›töd
]);

64 
°©e
.
pids
 = 
NULL
;

65 
	`Ârötf
(
°dîr
, "\"pmakêjobs=%d\n", 
°©e
.
jobs
);

66 ++
›töd
 < 
ac
) {

67 
u£cs
 = 
	`byãs
(
av
[
›töd
]);

68 
	`bíchmp
(
£tup
, 
w‹k
, 
NULL
, 0, 1, 0, 
TRIES
, &
°©e
);

69 i‡(
	`gëtime
(Ë=0Ë
	`exô
(1);

70 
°©e
.
ôî©i⁄s
 = (
ôî_t
)((
u£cs
 * 
	`gë_n
()Ë/ 
	`gëtime
());

72 
	`bíchmp
(
£tup
, 
bích
, 
NULL
, 0, 
∑øŒñ
,

73 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

74 
time
 = 
	`gëtime
();

75 
time
 /
	`gë_n
();

76 i‡(
time
 > 0.0)

77 
	`Ârötf
(
°dîr
, "%Œu %.2f\n", 
u£cs
, 
time
);

80 
	}
}

83 
	$£tup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

85 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

87 i‡(
ôî©i⁄s
) ;

89 
°©e
->
x
 = (*)
	`mÆloc
((*));

90 i‡(!
°©e
->
x
) {

91 
	`≥º‹
("malloc");

92 
	`exô
(1);

94 *(**)
°©e
->
x
 = state->x;

95 
°©e
->
p
 = (**)°©e->
x
;

97 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 
°©e
->
jobs
);

98 
	}
}

101 
	$bích
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

103 
i
;

104 
°©us
;

105 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

107 
°©e
->
pids
 = (
pid_t
*)
	`mÆloc
(°©e->
jobs
 * (pid_t));

108 i‡(!
°©e
->
pids
) {

109 
	`≥º‹
("malloc");

110 
	`exô
(2);

119 
ôî©i⁄s
-- > 0) {

120 
i
 = 0; i < 
°©e
->
jobs
; ++i) {

121 i‡((
°©e
->
pids
[
i
] = 
	`f‹k
()) == 0) {

122 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 
i
+1, 
°©e
->
jobs
);

123 
	`w‹k
(
°©e
->
ôî©i⁄s
, state);

124 
	`exô
(0);

127 
i
 = 0; i < 
°©e
->
jobs
; ++i) {

128 
	`waôpid
(
°©e
->
pids
[
i
], &
°©us
, 0);

129 
°©e
->
pids
[
i
] = -1;

132 i‡(!
	`WIFEXITED
(
°©us
)) {

133 
	`˛ónup
(0, 
cookõ
);

134 
	`exô
(1);

138 
	}
}

141 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

143 
i
;

144 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

146 
i
 = 0; i < 
°©e
->
jobs
; ++i) {

147 i‡(
°©e
->
pids
[
i
] > 0) {

148 
	`kûl
(
°©e
->
pids
[
i
], 
SIGKILL
);

149 
	`waôpid
(
°©e
->
pids
[
i
], 
NULL
, 0);

150 
°©e
->
pids
[
i
] = -1;

153 
	}
}

156 
	$w‹k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

158 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

159 ** 
p
 = 
°©e
->p;

161 
	#WORK_TEN
(
⁄e
Ë⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê
	)
one

162 
ôî©i⁄s
-- > 0) {

163 
	`WORK_TEN
(
p
 = (**) *p;);

165 
°©e
->
p
 =Ö;

166 
	}
}

	@lat_proc.c

14 *
	gid
 = "$Id$\n";

16 
	~"bích.h
"

19 #ifde‡
STATIC


20 
	#PROG
 "/tmp/hñlo-s"

	)

21 
	#STATIC_PREFIX
 "Sèti¯"

	)

23 
	#PROG
 "/tmp/hñlo"

	)

24 
	#STATIC_PREFIX
 ""

	)

27 
do_shñl
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

28 
do_f‹kexec
(
ôî_t
 
ôî©i⁄s
,* 
cookõ
);

29 
do_f‹k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

30 
do_¥o˚duª
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

32 
pid_t
 
	gchûd_pid
;

36 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

38 i‡(
ôî©i⁄s
) ;

40 i‡(
chûd_pid
) {

41 
	`kûl
(
chûd_pid
, 
SIGKILL
);

42 
	`waôpid
(
chûd_pid
, 
NULL
, 0);

43 
chûd_pid
 = 0;

45 
	}
}

48 
	$maö
(
ac
, **
av
)

50 
∑øŒñ
 = 1;

51 
w¨mup
 = 0;

52 
ª≥tôi⁄s
 = -1;

53 
c
;

54 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]Örocedure|fork|exec|shell\n";

56 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

57 
c
) {

59 
∑øŒñ
 = 
	`©oi
(
›èrg
);

60 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

63 
w¨mup
 = 
	`©oi
(
›èrg
);

66 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

69 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

74 i‡(
›töd
 + 1 !
ac
) {

75 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

78 i‡(!
	`°rcmp
("¥o˚duª", 
av
[
›töd
])) {

79 
	`bíchmp
(
NULL
, 
do_¥o˚duª
, 
˛ónup
, 0, 
∑øŒñ
,

80 
w¨mup
, 
ª≥tôi⁄s
, &
ac
);

81 
	`mi¸o
("Pro˚duª cÆl", 
	`gë_n
());

82 } i‡(!
	`°rcmp
("f‹k", 
av
[
›töd
])) {

83 
	`bíchmp
(
NULL
, 
do_f‹k
, 
˛ónup
, 0, 
∑øŒñ
,

84 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

85 
	`mi¸o
(
STATIC_PREFIX
 "Pro˚s†f‹k+exô", 
	`gë_n
());

86 } i‡(!
	`°rcmp
("exec", 
av
[
›töd
])) {

87 
	`bíchmp
(
NULL
, 
do_f‹kexec
, 
˛ónup
, 0, 
∑øŒñ
,

88 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

89 
	`mi¸o
(
STATIC_PREFIX
 "Pro˚s†f‹k+execve", 
	`gë_n
());

90 } i‡(!
	`°rcmp
("shñl", 
av
[
›töd
])) {

91 
	`bíchmp
(
NULL
, 
do_shñl
, 
˛ónup
, 0, 
∑øŒñ
,

92 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

93 
	`mi¸o
(
STATIC_PREFIX
 "Pro˚s†f‹k+/bö/sh -c", 
	`gë_n
());

95 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

98 
	}
}

101 
	$do_shñl
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

103 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

104 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

105 
ôî©i⁄s
-- > 0) {

106 
chûd_pid
 = 
	`f‹k
()) {

108 
	`≥º‹
("fork");

109 
	`exô
(1);

112 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

113 
	`˛o£
(1);

114 
	`exe˛p
("/bö/sh", "sh", "-c", 
PROG
, 0);

115 
	`exô
(1);

118 
	`waôpid
(
chûd_pid
, 
NULL
,0);

120 
chûd_pid
 = 0;

122 
	}
}

125 
	$do_f‹kexec
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

127 *
«v
[2];

129 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

130 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

131 
ôî©i⁄s
-- > 0) {

132 
«v
[0] = 
PROG
;

133 
«v
[1] = 0;

134 
chûd_pid
 = 
	`f‹k
()) {

136 
	`≥º‹
("fork");

137 
	`exô
(1);

140 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

141 
	`˛o£
(1);

142 
	`execve
(
PROG
, 
«v
, 0);

143 
	`exô
(1);

146 
	`waôpid
(
chûd_pid
, 
NULL
,0);

148 
chûd_pid
 = 0;

150 
	}
}

153 
	$do_f‹k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

155 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

156 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

157 
ôî©i⁄s
-- > 0) {

158 
chûd_pid
 = 
	`f‹k
()) {

160 
	`≥º‹
("fork");

161 
	`exô
(1);

164 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

165 
	`exô
(1);

168 
	`waôpid
(
chûd_pid
, 
NULL
,0);

170 
chûd_pid
 = 0;

172 
	}
}

175 
	$do_¥o˚duª
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

177 
r
 = *(*Ë
cookõ
;

178 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

179 
ôî©i⁄s
-- > 0) {

180 
	`u£_öt
(
r
);

182 
	}
}

	@lat_rand.c

12 *
	gid
 = "$Id$\n";

14 
	~"bích.h
"

16 #ifde‡
HAVE_DRAND48


17 
bích_dønd48
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

18 
bích_Ã™d48
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

20 #ifde‡
HAVE_RAND


21 
bích_ønd
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

23 #ifde‡
HAVE_RANDOM


24 
bích_øndom
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

27 
	$maö
(
ac
, **
av
)

29 
∑øŒñ
 = 1;

30 
w¨mup
 = 0;

31 
ª≥tôi⁄s
 = -1;

32 
c
;

33 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

35 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

36 
c
) {

38 
∑øŒñ
 = 
	`©oi
(
›èrg
);

39 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

42 
w¨mup
 = 
	`©oi
(
›èrg
);

45 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

48 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

52 i‡(
›töd
 < 
ac
) {

53 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

56 #ifde‡
HAVE_DRAND48


57 
	`bíchmp
(
NULL
, 
bích_dønd48
, NULL,

58 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

59 
	`«no
("dønd48Ü©ícy", 
	`gë_n
());

61 
	`bíchmp
(
NULL
, 
bích_Ã™d48
, NULL,

62 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

63 
	`«no
("Ã™d48Ü©ícy", 
	`gë_n
());

65 #ifde‡
HAVE_RAND


66 
	`bíchmp
(
NULL
, 
bích_ønd
, NULL,

67 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

68 
	`«no
("øndÜ©ícy", 
	`gë_n
());

70 #ifde‡
HAVE_RANDOM


71 
	`bíchmp
(
NULL
, 
bích_øndom
, NULL,

72 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

73 
	`«no
("øndomÜ©ícy", 
	`gë_n
());

76 
	}
}

78 #ifde‡
HAVE_DRAND48


80 
	$bích_dønd48
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

82 
v
 = 0.0;

83 
ôî©i⁄s
-- > 0) {

84 
v
 +
	`dønd48
();

86 
	`u£_öt
(()
v
);

87 
	}
}

90 
	$bích_Ã™d48
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

92 
v
 = 0.0;

93 
ôî©i⁄s
-- > 0) {

94 
v
 +
	`Ã™d48
();

96 
	`u£_öt
(()
v
);

97 
	}
}

99 #ifde‡
HAVE_RAND


101 
	$bích_ønd
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

103 
v
 = 0.0;

104 
ôî©i⁄s
-- > 0) {

105 
v
 +
	`ønd
();

107 
	`u£_öt
(()
v
);

108 
	}
}

110 #ifde‡
HAVE_RANDOM


112 
	$bích_øndom
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

114 
v
 = 0.0;

115 
ôî©i⁄s
-- > 0) {

116 
v
 +
	`øndom
();

118 
	`u£_öt
(()
v
);

119 
	}
}

	@lat_rpc.c

18 *
	gid
 = "$Id$\n";

19 
	~"bích.h
"

21 
˛õ¡_maö
(
ac
, **
av
);

22 
£rvî_maö
();

23 
bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
_°©e
);

24 *
˛õ¡_Ωc_xa˘_1
(*
¨gp
, 
CLIENT
 *
˛¡
);

27 
	$doô
(
CLIENT
 *
˛
, *
£rvî
)

29 
c
 = 1;

30 *
ª•
;

32 
ª•
 = 
	`˛õ¡_Ωc_xa˘_1
(&
c
, 
˛
);

33 i‡(!
ª•
) {

34 
	`˛¡_≥º‹
(
˛
, 
£rvî
);

35 
	`exô
(1);

37 i‡(*
ª•
 != 123) {

38 
	`Ârötf
(
°dîr
, "lat_rpc: got bad data\n");

39 
	`exô
(1);

41 
	}
}

45 
timevÆ
 
	gTIMEOUT
 = { 0, 25000 };

47 *
	g¥Ÿo
[] = { "tcp", "udp", 0 };

49 
	s°©e_
 {

50 
	mmsize
;

51 *
	m£rvî
;

52 *
	m¥Ÿocﬁ
;

53 
CLIENT
 *
	m˛
;

54 } 
	t°©e_t
;

57 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

59 
timevÆ
 
tv
;

60 
°©e_t
 *
°©e
 = (°©e_t*)
cookõ
;

62 i‡(
ôî©i⁄s
) ;

64 
°©e
->
˛
 = 
	`˛¡_¸óã
(°©e->
£rvî
, 
XACT_PROG
, 
XACT_VERS
,

65 
°©e
->
¥Ÿocﬁ
);

66 i‡(!
°©e
->
˛
) {

67 
	`˛¡_p¸óãîr‹
(
°©e
->
£rvî
);

68 
	`exô
(1);

70 i‡(
	`°rˇ£cmp
(
°©e
->
¥Ÿocﬁ
, 
¥Ÿo
[1]) == 0) {

71 
tv
.
tv_£c
 = 0;

72 
tv
.
tv_u£c
 = 2500;

73 i‡(!
	`˛¡_c⁄åﬁ
(
°©e
->
˛
, 
CLSET_RETRY_TIMEOUT
, (*)&
tv
)) {

74 
	`˛¡_≥º‹
(
°©e
->
˛
, "settingÅimeout");

75 
	`exô
(1);

78 
	}
}

81 
	$bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
_°©e
)

83 
°©e_t
* 
°©e
 = (°©e_t*)
_°©e
;

85 
ôî©i⁄s
-- > 0) {

86 
	`doô
(
°©e
->
˛
, sèã->
£rvî
);

88 
	}
}

91 
	$maö
(
ac
, **
av
)

93 
c
;

94 
∑øŒñ
 = 1;

95 
w¨mup
 = 0;

96 
ª≥tôi⁄s
 = -1;

97 
°©e_t
 
°©e
;

98 
CLIENT
 *
˛
;

99 
buf
[1024];

100 *
¥Ÿocﬁ
 = 
NULL
;

101 *
ußge
 = "-s\n OR [-p <tcp|udp>] [-PÖarallel] [-W <warmup>] [-N <repetitions>] serverhost\n OR -S serverhost\n";

103 
°©e
.
msize
 = 1;

105 –
c
 = 
	`gë›t
(
ac
, 
av
, "sS:m:p:P:W:N:")Ë!
EOF
) {

106 
c
) {

108 i‡(
	`f‹k
() == 0) {

109 
	`£rvî_maö
();

111 
	`exô
(0);

114 
˛
 = 
	`˛¡_¸óã
(
›èrg
, 
XACT_PROG
, 
XACT_VERS
, "udp");

115 i‡(!
˛
) {

116 
	`˛¡_p¸óãîr‹
(
°©e
.
£rvî
);

117 
	`exô
(1);

119 
	`˛¡_ˇŒ
(
˛
, 
RPC_EXIT
, (
xdΩroc_t
)
xdr_void
, 0,

120 (
xdΩroc_t
)
xdr_void
, 0, 
TIMEOUT
);

121 
	`exô
(0);

124 
°©e
.
msize
 = 
	`©oi
(
›èrg
);

127 
¥Ÿocﬁ
 = 
›èrg
;

130 
∑øŒñ
 = 
	`©oi
(
›èrg
);

131 i‡(
∑øŒñ
 <= 0)

132 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

135 
w¨mup
 = 
	`©oi
(
›èrg
);

138 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

141 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

146 i‡(
›töd
 !
ac
 - 1) {

147 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

150 
°©e
.
£rvî
 = 
av
[
›töd
++];

152 i‡(
¥Ÿocﬁ
 =
NULL
 || !
	`°rˇ£cmp
’rŸocﬁ, 
¥Ÿo
[0])) {

153 
°©e
.
¥Ÿocﬁ
 = 
¥Ÿo
[0];

154 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
NULL
, 
MEDIUM
, 
∑øŒñ
,

155 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

156 
	`•rötf
(
buf
, "RPC/%†œãncy usög %s", 
¥Ÿo
[0], 
°©e
.
£rvî
);

157 
	`mi¸o
(
buf
, 
	`gë_n
());

160 i‡(
¥Ÿocﬁ
 =
NULL
 || !
	`°rˇ£cmp
’rŸocﬁ, 
¥Ÿo
[1])) {

161 
°©e
.
¥Ÿocﬁ
 = 
¥Ÿo
[1];

162 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
NULL
, 
MEDIUM
, 
∑øŒñ
,

163 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

164 
	`•rötf
(
buf
, "RPC/%†œãncy usög %s", 
¥Ÿo
[1], 
°©e
.
£rvî
);

165 
	`mi¸o
(
buf
, 
	`gë_n
());

168 
	`exô
(0);

169 
	}
}

172 
	$˛õ¡_Ωc_xa˘_1
(*
¨gp
, 
CLIENT
 *
˛¡
)

174 
ªs
;

176 
	`bzîo
((*)&
ªs
, (res));

177 i‡(
	`˛¡_ˇŒ
(
˛¡
, 
RPC_XACT
, (
xdΩroc_t
)
xdr_ch¨
,

178 
¨gp
, (
xdΩroc_t
)
xdr_ch¨
, &
ªs
, 
TIMEOUT
Ë!
RPC_SUCCESS
) {

179  (
NULL
);

181  (&
ªs
);

182 
	}
}

189 
	$Ωc_xa˘_1
(
msg
, 
å™•
)

190 *
msg
;

191 
SVCXPRT
 *
å™•
;

193 
r
 = 123;

195  &
r
;

196 
	}
}

198 
xa˘_¥og_1
();

201 
	$£rvî_maö
()

203 
SVCXPRT
 *
å™•
;

205 
GO_AWAY
;

207 (Ë
	`pm≠_un£t
(
XACT_PROG
, 
XACT_VERS
);

209 
å™•
 = 
	`svcudp_¸óã
(
RPC_ANYSOCK
);

210 i‡(
å™•
 =
NULL
) {

211 
	`Ârötf
(
°dîr
, "cannot create udp service.\n");

212 
	`exô
(1);

214 i‡(!
	`svc_ªgi°î
(
å™•
, 
XACT_PROG
, 
XACT_VERS
, 
xa˘_¥og_1
, 
IPPROTO_UDP
)) {

215 
	`Ârötf
(
°dîr
, "unableÅoÑegister (XACT_PROG, XACT_VERS, udp).\n");

216 
	`exô
(1);

219 
å™•
 = 
	`sv˘˝_¸óã
(
RPC_ANYSOCK
, 0, 0);

220 i‡(
å™•
 =
NULL
) {

221 
	`Ârötf
(
°dîr
, "cannot createÅcp service.\n");

222 
	`exô
(1);

224 i‡(!
	`svc_ªgi°î
(
å™•
, 
XACT_PROG
, 
XACT_VERS
, 
xa˘_¥og_1
, 
IPPROTO_TCP
)) {

225 
	`Ârötf
(
°dîr
, "unableÅoÑegister (XACT_PROG, XACT_VERS,Åcp).\n");

226 
	`exô
(1);

229 
	`svc_run
();

230 
	`Ârötf
(
°dîr
, "svc_runÑeturned\n");

231 
	`exô
(1);

233 
	}
}

236 
	$xa˘_¥og_1
(
rq°p
, 
å™•
)

237 
svc_ªq
 *
rq°p
;

238 
SVCXPRT
 *
å™•
;

241 
Ωc_xa˘_1_¨g
;

242 } 
¨gumít
;

243 *
ªsu…
;

244 
	`boﬁ_t
 (*
xdr_¨gumít
)(), (*
xdr_ªsu…
)();

245 *(*
loˇl
)();

247 
rq°p
->
rq_¥oc
) {

248 
NULLPROC
:

249 (Ë
	`svc_£ndª∂y
(
å™•
, (
xdΩroc_t
)
xdr_void
, (*)
NULL
);

252 
RPC_XACT
:

253 
xdr_¨gumít
 = 
xdr_ch¨
;

254 
xdr_ªsu…
 = 
xdr_ch¨
;

255 
loˇl
 = (*(*)()Ë
Ωc_xa˘_1
;

258 
RPC_EXIT
:

259 (Ë
	`svc_£ndª∂y
(
å™•
, (
xdΩroc_t
)
xdr_void
, (*)
NULL
);

260 (Ë
	`pm≠_un£t
(
XACT_PROG
, 
XACT_VERS
);

261 
	`exô
(0);

264 
	`sv˚º_n›roc
(
å™•
);

267 
	`bzîo
((*)&
¨gumít
, (argument));

268 i‡(!
	`svc_gë¨gs
(
å™•
, (
xdΩroc_t
)
xdr_¨gumít
, (*)&
¨gumít
)) {

269 
	`sv˚º_decode
(
å™•
);

272 
ªsu…
 = (*
loˇl
)(&
¨gumít
, 
rq°p
);

273 i‡(
ªsu…
 !
NULL
 && !
	`svc_£ndª∂y
(
å™•
, (
xdΩroc_t
)
xdr_ªsu…
,Ñesult)) {

274 
	`sv˚º_sy°emîr
(
å™•
);

276 i‡(!
	`svc_‰ì¨gs
(
å™•
, (
xdΩroc_t
)
xdr_¨gumít
, (*)&
¨gumít
)) {

277 
	`Ârötf
(
°dîr
, "unableÅo freeárguments\n");

278 
	`exô
(1);

281 
	}
}

	@lat_select.c

11 *
	gid
 = "$Id$\n";

13 
	~"bích.h
"

15 
öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

16 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

17 
doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

18 
wrôî
(
w
, 
r
);

19 
£rvî
(* 
cookõ
);

21 (*
	t›í_f
)(* 
	tcookõ
);

22 
	`›í_fûe
(* 
cookõ
);

23 
	`›í_sockë
(* 
cookõ
);

25 
	s_°©e
 {

26 
‚ame
[
L_tm≤am
];

27 
›í_f
 
fid_f
;

28 
pid_t
 
pid
;

29 
sock
;

30 
fid
;

31 
num
;

32 
max
;

33 
fd_£t
 
£t
;

34 } 
	t°©e_t
;

37 
	$maö
(
ac
, **
av
)

39 
°©e_t
 
°©e
;

40 
∑øŒñ
 = 1;

41 
w¨mup
 = 0;

42 
ª≥tôi⁄s
 = -1;

43 
c
;

44 * 
ußge
 = "[-n <#descriptors>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] file|tcp\n";

45 
buf
[256];

47 
	`m‹efds
();

48 
°©e
.
num
 = 200;

49 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:n:")Ë!
EOF
) {

50 
c
) {

52 
∑øŒñ
 = 
	`©oi
(
›èrg
);

53 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

56 
w¨mup
 = 
	`©oi
(
›èrg
);

59 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

62 
°©e
.
num
 = 
	`byãs
(
›èrg
);

65 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

70 i‡(
›töd
 + 1 !
ac
) {

71 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

74 i‡(
	`°ªq
("t˝", 
av
[
›töd
])) {

75 
°©e
.
fid_f
 = 
›í_sockë
;

76 
	`£rvî
(&
°©e
);

77 
	`bíchmp
(
öôülize
, 
doô
, 
˛ónup
, 0, 
∑øŒñ
,

78 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

79 
	`•rötf
(
buf
, "Sñe˘ o¿%dÅ˝ fd's", 
°©e
.
num
);

80 
	`kûl
(
°©e
.
pid
, 
SIGKILL
);

81 
	`waôpid
(
°©e
.
pid
, 
NULL
, 0);

82 
	`mi¸o
(
buf
, 
	`gë_n
());

83 } i‡(
	`°ªq
("fûe", 
av
[
›töd
])) {

84 
°©e
.
fid_f
 = 
›í_fûe
;

85 
	`£rvî
(&
°©e
);

86 
	`bíchmp
(
öôülize
, 
doô
, 
˛ónup
, 0, 
∑øŒñ
,

87 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

88 
	`u∆ök
(
°©e
.
‚ame
);

89 
	`•rötf
(
buf
, "Sñe˘ o¿%d fd's", 
°©e
.
num
);

90 
	`mi¸o
(
buf
, 
	`gë_n
());

92 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

95 
	`exô
(0);

96 
	}
}

99 
	$£rvî
(* 
cookõ
)

101 
pid
;

102 
°©e_t
* 
°©e
 = (°©e_t*)
cookõ
;

104 
pid
 = 
	`gëpid
();

105 
°©e
->
pid
 = 0;

107 i‡(
°©e
->
fid_f
 =
›í_fûe
) {

109 
	`•rötf
(
°©e
->
‚ame
, "lat_selectXXXXXX");

110 
°©e
->
fid
 = 
	`mk°emp
(°©e->
‚ame
);

111 i‡(
°©e
->
fid
 <= 0) {

112 
buf
[
L_tm≤am
+128];

113 
	`•rötf
(
buf
, "œt_£À˘: CouldÇŸ cª©êãm∞fûê%s", 
°©e
->
‚ame
);

114 
	`≥º‹
(
buf
);

115 
	`exô
(1);

117 
	`˛o£
(
°©e
->
fid
);

122 
°©e
->
sock
 = 
	`t˝_£rvî
(
TCP_SELECT
, 
SOCKOPT_REUSE
);

123 i‡(
°©e
->
sock
 <= 0) {

124 
	`≥º‹
("lat_select: CouldÇot openÅcp server socket");

125 
	`exô
(1);

129 
°©e
->
pid
 = 
	`f‹k
()) {

132 
pid
 =
	`gëµid
()) {

133 
√wsock
 = 
	`t˝_ac˚±
(
°©e
->
sock
, 
SOCKOPT_NONE
);

134 
	`ªad
(
√wsock
, &
°©e
->
fid
, 1);

135 
	`˛o£
(
√wsock
);

137 
	`exô
(0);

140 
	`≥º‹
("lat_select::server(): fork() failed");

141 
	`exô
(1);

145 
	}
}

148 
	$›í_sockë
(* 
cookõ
)

150  
	`t˝_c⁄√˘
("loˇlho°", 
TCP_SELECT
, 
SOCKOPT_NONE
);

151 
	}
}

154 
	$›í_fûe
(* 
cookõ
)

156 
°©e_t
* 
°©e
 = (°©e_t*)
cookõ
;

158  
	`›í
(
°©e
->
‚ame
, 
O_RDONLY
);

159 
	}
}

162 
	$doô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

164 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

165 
fd_£t
 
noßve
;

166 
timevÆ
 
tv
;

168 
tv
.
tv_£c
 = 0;

169 
tv
.
tv_u£c
 = 0;

171 
ôî©i⁄s
-- > 0) {

172 
noßve
 = 
°©e
->
£t
;

173 
	`£À˘
(
°©e
->
num
, 0, &
noßve
, 0, &
tv
);

175 
	}
}

178 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

180 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

181 
n
;

182 
N
 = 
°©e
->
num
, 
fid
, 
fd
;

184 i‡(
ôî©i⁄s
) ;

186 
fid
 = (*
°©e
->
fid_f
)(
cookõ
);

187 i‡(
fid
 <= 0) {

188 
	`≥º‹
("CouldÇot open device");

189 
	`exô
(1);

191 
°©e
->
max
 = 0;

192 
	`FD_ZERO
(&(
°©e
->
£t
));

193 
n
 = 0;Ç < 
N
;Ç++) {

194 
fd
 = 
	`dup
(
fid
);

195 i‡(
fd
 == -1) ;

196 i‡(
fd
 > 
°©e
->
max
)

197 
°©e
->
max
 = 
fd
;

198 
	`FD_SET
(
fd
, &(
°©e
->
£t
));

200 
°©e
->
max
++;

201 
	`˛o£
(
fid
);

202 i‡(
n
 !
N
)

203 
	`exô
(1);

204 
	}
}

207 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

209 
i
;

210 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

212 i‡(
ôî©i⁄s
) ;

214 
i
 = 0; i <
°©e
->
max
; ++i) {

215 i‡(
	`FD_ISSET
(
i
, &(
°©e
->
£t
)))

216 
	`˛o£
(
i
);

218 
	`FD_ZERO
(&(
°©e
->
£t
));

219 
	}
}

	@lat_sem.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

16 
	~<sys/£m.h
>

18 
öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

19 
˛ónup
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

20 
doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
);

21 
wrôî
(
sid
);

23 
	s_°©e
 {

24 
	mpid
;

25 
	m£mid
;

26 } 
	t°©e_t
;

29 
	$maö
(
ac
, **
av
)

31 
°©e_t
 
°©e
;

32 
∑øŒñ
 = 1;

33 
w¨mup
 = 0;

34 
ª≥tôi⁄s
 = -1;

35 
c
;

36 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

38 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

39 
c
) {

41 
∑øŒñ
 = 
	`©oi
(
›èrg
);

42 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

45 
w¨mup
 = 
	`©oi
(
›èrg
);

48 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

51 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

55 i‡(
›töd
 < 
ac
) {

56 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

59 
°©e
.
pid
 = 0;

61 
	`bíchmp
(
öôülize
, 
doô
, 
˛ónup
, 
SHORT
, 
∑øŒñ
,

62 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

63 
	`mi¸o
("Sem≠h‹êœãncy", 
	`gë_n
() * 2);

65 
	}
}

68 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

70 
c
;

71 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

73 i‡(
ôî©i⁄s
) ;

75 
°©e
->
£mid
 = 
	`£mgë
(
IPC_PRIVATE
, 2, 
IPC_CREAT
 | 
IPC_EXCL
 | 0600);

76 
	`£m˘l
(
°©e
->
£mid
, 0, 
SETVAL
, 0);

77 
	`£m˘l
(
°©e
->
£mid
, 1, 
SETVAL
, 0);

79 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

80 
°©e
->
pid
 = 
	`f‹k
()) {

82 
	`sig«l
(
SIGTERM
, 
exô
);

83 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

84 
	`wrôî
(
°©e
->
£mid
);

88 
	`≥º‹
("fork");

94 
	}
}

97 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

99 
°©e_t
 * 
°©e
 = (°©e_à*)
cookõ
;

101 i‡(
ôî©i⁄s
) ;

103 i‡(
°©e
->
pid
) {

104 
	`kûl
(
°©e
->
pid
, 
SIGKILL
);

105 
	`waôpid
(
°©e
->
pid
, 
NULL
, 0);

106 
°©e
->
pid
 = 0;

109 
	`£m˘l
(
°©e
->
£mid
, 0, 
IPC_RMID
);

110 
	}
}

113 
	$doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

115 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

116 
£mbuf
 
s›
[2];

118 
s›
[0].
£m_num
 = 1;

119 
s›
[0].
£m_›
 = -1;

120 
s›
[0].
£m_Êg
 = 0;

122 
s›
[1].
£m_num
 = 0;

123 
s›
[1].
£m_›
 = 1;

124 
s›
[1].
£m_Êg
 = 0;

126 
ôî©i⁄s
-- > 0) {

127 i‡(
	`£m›
(
°©e
->
£mid
, 
s›
, 2) < 0) {

128 
	`≥º‹
("(r)Érror on semaphore");

129 
	`exô
(1);

132 
	}
}

135 
	$wrôî
(
sid
)

137 
£mbuf
 
s›
[2];

139 
s›
[0].
£m_num
 = 1;

140 
s›
[0].
£m_›
 = 1;

141 
s›
[0].
£m_Êg
 = 0;

143 i‡(
	`£m›
(
sid
, 
s›
, 1) < 0) {

144 
	`≥º‹
("(w)Érror on initial semaphore");

145 
	`exô
(1);

148 
s›
[0].
£m_num
 = 0;

149 
s›
[0].
£m_›
 = -1;

150 
s›
[0].
£m_Êg
 = 0;

152 
s›
[1].
£m_num
 = 1;

153 
s›
[1].
£m_›
 = 1;

154 
s›
[1].
£m_Êg
 = 0;

157 i‡(
	`£m›
(
sid
, 
s›
, 2) < 0) {

158 
	`≥º‹
("(w)Érror on semaphore");

159 
	`exô
(1);

162 
	}
}

	@lat_sig.c

16 *
	gid
 = "$Id$\n";

18 
	~"bích.h
"

19 
	~<£tjmp.h
>

21 
uöt64
 
	gˇught
, 
	gn
;

22 
	gadj
;

23 
	$h™dÀr
(
s
Ë{ 
	}
}

24 
jmp_buf
 
	g¥Ÿ_ív
;

27 
	$do_£nd
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

29 
me
 = 
	`gëpid
();

31 --
ôî©i⁄s
 > 0) {

32 
	`kûl
(
me
, 0);

34 
	}
}

37 
	$do_ö°Æl
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

39 
siga˘i⁄
 
ß
, 
ﬁd
;

41 
ôî©i⁄s
-- > 0) {

42 
ß
.
ß_h™dÀr
 = 
h™dÀr
;

43 
	`sigem±y£t
(&
ß
.
ß_mask
);

44 
ß
.
ß_Êags
 = 0;

45 
	`siga˘i⁄
(
SIGUSR1
, &
ß
, &
ﬁd
);

47 
	}
}

50 
	$do_ˇtch
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

52 
me
 = 
	`gëpid
();

53 
siga˘i⁄
 
ß
, 
ﬁd
;

55 
ß
.
ß_h™dÀr
 = 
h™dÀr
;

56 
	`sigem±y£t
(&
ß
.
ß_mask
);

57 
ß
.
ß_Êags
 = 0;

58 
	`siga˘i⁄
(
SIGUSR1
, &
ß
, &
ﬁd
);

60 --
ôî©i⁄s
 > 0) {

61 
	`kûl
(
me
, 
SIGUSR1
);

63 
	}
}

65 
	s_°©e
 {

66 * 
	m‚ame
;

67 * 
	mwhîe
;

71 
	$¥Ÿ
(
s
)

73 i‡(++
ˇught
 =
n
) {

74 
ˇught
 = 0;

75 
n
 = 
	`bíchmp_öãrvÆ
(
	`bíchmp_gë°©e
());

77 
	}
}

80 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

82 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

83 
fd
;

84 
siga˘i⁄
 
ß
;

86 i‡(
ôî©i⁄s
) ;

88 
fd
 = 
	`›í
(
°©e
->
‚ame
, 0);

89 
°©e
->
whîe
 = 
	`mm≠
(0, 4096, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0);

90 i‡(()
°©e
->
whîe
 == -1) {

91 
	`≥º‹
("mmap");

92 
	`exô
(1);

95 
ß
.
ß_h™dÀr
 = 
¥Ÿ
;

96 
	`sigem±y£t
(&
ß
.
ß_mask
);

97 
ß
.
ß_Êags
 = 0;

98 
	`siga˘i⁄
(
SIGSEGV
, &
ß
, 0);

99 
	`siga˘i⁄
(
SIGBUS
, &
ß
, 0);

100 
	}
}

103 
	$do_¥Ÿ
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

105 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

107 
n
 = 
ôî©i⁄s
;

108 
ˇught
 = 0;

111 
	`°¨t
(0);

114 *
°©e
->
whîe
 = 1;

115 
	}
}

121 
	$bích_ˇtch
(
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
)

123 
uöt64
 
£nd_u£cs
, 
£nd_n
;

126 
	`bíchmp
(
NULL
, 
do_£nd
, NULL, 0, 
∑øŒñ
,

127 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

128 
£nd_u£cs
 = 
	`gëtime
();

129 
£nd_n
 = 
	`gë_n
();

132 
	`bíchmp
(
NULL
, 
do_ˇtch
, NULL, 0, 
∑øŒñ
,

133 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

136 i‡(
	`gëtime
(Ë> (
£nd_u£cs
 * 
	`gë_n
()Ë/ 
£nd_n
) {

137 
	`£âime
(
	`gëtime
(Ë- (
£nd_u£cs
 * 
	`gë_n
()Ë/ 
£nd_n
);

139 
	`£âime
(0);

141 
	}
}

144 
	$bích_¥Ÿ
(* 
‚ame
, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
)

146 
uöt64
 
ˇtch_u£cs
, 
ˇtch_n
;

147 
_°©e
 
°©e
;

149 
°©e
.
‚ame
 = fname;

155 
	`bích_ˇtch
(
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
);

156 
ˇtch_u£cs
 = 
	`gëtime
();

157 
ˇtch_n
 = 
	`gë_n
();

159 
	`bíchmp
(
öôülize
, 
do_¥Ÿ
, 
NULL
, 0, 
∑øŒñ
,

160 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

161 i‡(
	`gëtime
(Ë> (
ˇtch_u£cs
 * 
	`gë_n
()Ë/ 
ˇtch_n
) {

162 
	`£âime
(
	`gëtime
(Ë- (
ˇtch_u£cs
 * 
	`gë_n
()Ë/ 
ˇtch_n
);

164 
	`£âime
(0);

166 
	}
}

170 
	$maö
(
ac
, **
av
)

172 
∑øŒñ
 = 1;

173 
w¨mup
 = 0;

174 
ª≥tôi⁄s
 = -1;

175 
c
;

176 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>] install|catch|prot [file]\n";

178 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

179 
c
) {

181 
∑øŒñ
 = 
	`©oi
(
›èrg
);

182 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

185 
w¨mup
 = 
	`©oi
(
›èrg
);

188 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

191 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

195 i‡(
›töd
 !
ac
 - 1 && optind !=ác - 2) {

196 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

199 i‡(!
	`°rcmp
("ö°Æl", 
av
[
›töd
])) {

200 
	`bíchmp
(
NULL
, 
do_ö°Æl
, NULL, 0, 
∑øŒñ
,

201 
w¨mup
, 
ª≥tôi⁄s
, 
NULL
);

202 
	`mi¸o
("Sig«»h™dÀ∏ö°Æœti⁄", 
	`gë_n
());

203 } i‡(!
	`°rcmp
("ˇtch", 
av
[
›töd
])) {

204 
	`bích_ˇtch
(
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
);

205 
	`mi¸o
("Sig«»h™dÀ∏ovîhód", 
	`gë_n
());

206 } i‡(!
	`°rcmp
("¥Ÿ", 
av
[
›töd
]Ë&& o±öd =
ac
 - 2) {

207 
	`bích_¥Ÿ
(
av
[
›töd
+1], 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
);

208 
	`mi¸o
("PrŸe˘i⁄ fau…", 
	`gë_n
());

210 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

213 
	}
}

	@lat_syscall.c

9 *
	gid
 = "$Id: s.lat_syscall.c 1.11 97/06/15 22:38:58-07:00Üm $\n";

11 
	~"bích.h
"

12 
	#FNAME
 "/u§/ö˛ude/sys/ty≥s.h"

	)

14 
	s_°©e
 {

15 
	mfd
;

16 * 
	mfûe
;

20 
	$do_gëµid
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

22 
ôî©i⁄s
-- > 0) {

23 
	`gëµid
();

25 
	}
}

28 
	$do_wrôe
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

30 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

31 
c
;

33 
ôî©i⁄s
-- > 0) {

34 i‡(
	`wrôe
(
pSèã
->
fd
, &
c
, 1) != 1) {

35 
	`≥º‹
("/dev/null");

39 
	}
}

42 
	$do_ªad
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

44 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

45 
c
;

47 
ôî©i⁄s
-- > 0) {

48 i‡(
	`ªad
(
pSèã
->
fd
, &
c
, 1) != 1) {

49 
	`≥º‹
("/dev/zero");

53 
	}
}

56 
	$do_°©
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

58 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

59 
°©
 
sbuf
;

61 
ôî©i⁄s
-- > 0) {

62 i‡(
	`°©
(
pSèã
->
fûe
, &
sbuf
) == -1) {

63 
	`≥º‹
(
pSèã
->
fûe
);

67 
	}
}

70 
	$do_f°©
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

72 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

73 
°©
 
sbuf
;

75 
ôî©i⁄s
-- > 0) {

76 i‡(
	`f°©
(
pSèã
->
fd
, &
sbuf
) == -1) {

77 
	`≥º‹
("fstat");

81 
	}
}

84 
	$do_›í˛o£
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

86 
_°©e
 *
pSèã
 = (_°©e*)
cookõ
;

87 
fd
;

89 
ôî©i⁄s
-- > 0) {

90 
fd
 = 
	`›í
(
pSèã
->
fûe
, 0);

91 i‡(
fd
 == -1) {

92 
	`≥º‹
(
pSèã
->
fûe
);

95 
	`˛o£
(
fd
);

97 
	}
}

100 
	$maö
(
ac
, **
av
)

102 
∑øŒñ
 = 1;

103 
w¨mup
 = 0;

104 
ª≥tôi⁄s
 = -1;

105 
c
;

106 
_°©e
 
°©e
;

107 * 
ußge
 = "[-P <parallelism>] [-W <warmup>] [-N <repetitions>]Çull|read|write|stat|fstat|open [file]\n";

109 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

110 
c
) {

112 
∑øŒñ
 = 
	`©oi
(
›èrg
);

113 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

116 
w¨mup
 = 
	`©oi
(
›èrg
);

119 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

122 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

126 i‡(
›töd
 !
ac
 - 1 && optind !=ác - 2 ) {

127 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

130 
°©e
.
fûe
 = 
FNAME
;

131 i‡(
›töd
 =
ac
 - 2)

132 
°©e
.
fûe
 = 
av
[
›töd
 + 1];

134 i‡(!
	`°rcmp
("nuŒ", 
av
[
›töd
])) {

135 
	`bíchmp
(
NULL
, 
do_gëµid
, NULL, 0, 
∑øŒñ
,

136 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

137 
	`mi¸o
("Sim∂êsysˇŒ", 
	`gë_n
());

138 } i‡(!
	`°rcmp
("wrôe", 
av
[
›töd
])) {

139 
°©e
.
fd
 = 
	`›í
("/dev/null", 1);

140 
	`bíchmp
(
NULL
, 
do_wrôe
, NULL, 0, 
∑øŒñ
,

141 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

142 
	`mi¸o
("Sim∂êwrôe", 
	`gë_n
());

143 
	`˛o£
(
°©e
.
fd
);

144 } i‡(!
	`°rcmp
("ªad", 
av
[
›töd
])) {

145 
°©e
.
fd
 = 
	`›í
("/dev/zero", 0);

146 i‡(
°©e
.
fd
 == -1) {

147 
	`Ârötf
(
°dîr
, "SimpleÑead: -1\n");

150 
	`bíchmp
(
NULL
, 
do_ªad
, NULL, 0, 
∑øŒñ
,

151 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

152 
	`mi¸o
("Sim∂êªad", 
	`gë_n
());

153 
	`˛o£
(
°©e
.
fd
);

154 } i‡(!
	`°rcmp
("°©", 
av
[
›töd
])) {

155 
	`bíchmp
(
NULL
, 
do_°©
, NULL, 0, 
∑øŒñ
,

156 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

157 
	`mi¸o
("Sim∂ê°©", 
	`gë_n
());

158 } i‡(!
	`°rcmp
("f°©", 
av
[
›töd
])) {

159 
°©e
.
fd
 = 
	`›í
(°©e.
fûe
, 0);

160 
	`bíchmp
(
NULL
, 
do_f°©
, NULL, 0, 
∑øŒñ
,

161 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

162 
	`mi¸o
("Sim∂êf°©", 
	`gë_n
());

163 
	`˛o£
(
°©e
.
fd
);

164 } i‡(!
	`°rcmp
("›í", 
av
[
›töd
])) {

165 
	`bíchmp
(
NULL
, 
do_›í˛o£
, NULL, 0, 
∑øŒñ
,

166 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

167 
	`mi¸o
("Sim∂ê›í/˛o£", 
	`gë_n
());

169 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

172 
	}
}

	@lat_tcp.c

15 *
	gid
 = "$Id$\n";

17 
	~"bích.h
"

19 
	s_°©e
 {

20 
	mmsize
;

21 
	msock
;

22 *
	m£rvî
;

23 *
	mbuf
;

24 } 
	t°©e_t
;

26 
öô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

27 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

28 
do˛õ¡
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

29 
£rvî_maö
();

30 
do£rvî
(
sock
);

33 
	$maö
(
ac
, **
av
)

35 
°©e_t
 
°©e
;

36 
∑øŒñ
 = 1;

37 
w¨mup
 = 0;

38 
ª≥tôi⁄s
 = -1;

39 
c
;

40 
buf
[256];

41 *
ußge
 = "-s\n OR [-m <message size>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] server\n OR -S server\n";

43 
°©e
.
msize
 = 1;

45 –
c
 = 
	`gë›t
(
ac
, 
av
, "sS:m:P:W:N:")Ë!
EOF
) {

46 
c
) {

48 i‡(
	`f‹k
() == 0) {

49 
	`£rvî_maö
();

51 
	`exô
(0);

53 
°©e
.
sock
 = 
	`t˝_c⁄√˘
(
›èrg
,

54 
TCP_XACT
,

55 
SOCKOPT_NONE
);

56 
	`˛o£
(
°©e
.
sock
);

57 
	`exô
(0);

59 
°©e
.
msize
 = 
	`©oi
(
›èrg
);

62 
∑øŒñ
 = 
	`©oi
(
›èrg
);

63 i‡(
∑øŒñ
 <= 0)

64 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

67 
w¨mup
 = 
	`©oi
(
›èrg
);

70 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

73 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

78 i‡(
›töd
 !
ac
 - 1) {

79 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

82 
°©e
.
£rvî
 = 
av
[
›töd
];

83 
	`bíchmp
(
öô
, 
do˛õ¡
, 
˛ónup
, 
MEDIUM
, 
∑øŒñ
,

84 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

86 
	`•rötf
(
buf
, "TCPÜ©ícy usög %s", 
°©e
.
£rvî
);

87 
	`mi¸o
(
buf
, 
	`gë_n
());

89 
	`exô
(0);

90 
	}
}

93 
	$öô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

95 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

96 
msize
 = 
	`ht⁄l
(
°©e
->msize);

98 i‡(
ôî©i⁄s
) ;

100 
°©e
->
sock
 = 
	`t˝_c⁄√˘
(°©e->
£rvî
, 
TCP_XACT
, 
SOCKOPT_NONE
);

101 
°©e
->
buf
 = 
	`mÆloc
(°©e->
msize
);

102 i‡(!
°©e
->
buf
) {

103 
	`≥º‹
("malloc");

104 
	`exô
(1);

107 
	`wrôe
(
°©e
->
sock
, &
msize
, ());

108 
	}
}

111 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

113 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

115 i‡(
ôî©i⁄s
) ;

117 
	`˛o£
(
°©e
->
sock
);

118 
	`‰ì
(
°©e
->
buf
);

119 
	}
}

122 
	$do˛õ¡
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

124 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

125 
sock
 = 
°©e
->sock;

127 
ôî©i⁄s
-- > 0) {

128 
	`wrôe
(
sock
, 
°©e
->
buf
, sèã->
msize
);

129 
	`ªad
(
sock
, 
°©e
->
buf
, sèã->
msize
);

131 
	}
}

134 
	$£rvî_maö
()

136 
√wsock
, 
sock
;

138 
GO_AWAY
;

139 
	`sig«l
(
SIGCHLD
, 
sigchld_waô_h™dÀr
);

140 
sock
 = 
	`t˝_£rvî
(
TCP_XACT
, 
SOCKOPT_REUSE
);

142 
√wsock
 = 
	`t˝_ac˚±
(
sock
, 
SOCKOPT_NONE
);

143 
	`f‹k
()) {

145 
	`≥º‹
("fork");

148 
	`do£rvî
(
√wsock
);

149 
	`exô
(0);

151 
	`˛o£
(
√wsock
);

156 
	}
}

159 
	$do£rvî
(
sock
)

161 
n
;

163 i‡(
	`ªad
(
sock
, &
n
, ()) == ()) {

164 
msize
 = 
	`¡ohl
(
n
);

165 * 
buf
 = (*)
	`mÆloc
(
msize
);

167 i‡(!
buf
) {

168 
	`≥º‹
("malloc");

169 
	`exô
(4);

171 
n
 = 0; 
	`ªad
(
sock
, 
buf
, 
msize
) > 0;Ç++) {

172 
	`wrôe
(
sock
, 
buf
, 
msize
);

174 
	`‰ì
(
buf
);

179 
	`t˝_d⁄e
(
TCP_XACT
);

180 
	`kûl
(
	`gëµid
(), 
SIGTERM
);

181 
	`exô
(0);

183 
	}
}

	@lat_udp.c

15 *
	gid
 = "$Id$\n";

16 
	~"bích.h
"

18 
	#MAX_MSIZE
 (10 * 1024 * 1024)

	)

20 
˛õ¡_maö
(
ac
, **
av
);

21 
£rvî_maö
();

22 
timeout
();

23 
öô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

24 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

25 
doô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

27 
	s_°©e
 {

28 
	msock
;

29 
	m£q
;

30 
	mmsize
;

31 *
	m£rvî
;

32 *
	mbuf
;

33 } 
	t°©e_t
;

37 
	$maö
(
ac
, **
av
)

39 
°©e_t
 
°©e
;

40 
c
;

41 
∑øŒñ
 = 1;

42 
w¨mup
 = 0;

43 
ª≥tôi⁄s
 = -1;

44 
msize
 = 4;

45 
buf
[256];

46 *
ußge
 = "-s\n OR [-S] [-m <message size>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] server\n NOTE: message size must be >= 4\n";

49 
	`Ârötf
(
°dîr
, "lat_udp: Wrong sequence size\n");

53 –
c
 = 
	`gë›t
(
ac
, 
av
, "sS:m:P:W:N:")Ë!
EOF
) {

54 
c
) {

56 i‡(
	`f‹k
() == 0) {

57 
	`£rvî_maö
();

59 
	`exô
(0);

62 
£q
, 
n
;

63 
sock
 = 
	`udp_c⁄√˘
(
›èrg
,

64 
UDP_XACT
,

65 
SOCKOPT_NONE
);

66 
n
 = -1;Ç > -5; --n) {

67 
£q
 = 
	`ht⁄l
(
n
);

68 (Ë
	`£nd
(
sock
, &
£q
, (), 0);

70 
	`˛o£
(
sock
);

71 
	`exô
 (0);

74 
msize
 = 
	`©oi
(
›èrg
);

75 i‡(
msize
 < ()) {

76 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

77 
msize
 = 4;

79 i‡(
msize
 > 
MAX_MSIZE
) {

80 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

81 
msize
 = 
MAX_MSIZE
;

85 
∑øŒñ
 = 
	`©oi
(
›èrg
);

86 i‡(
∑øŒñ
 <= 0)

87 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

90 
w¨mup
 = 
	`©oi
(
›èrg
);

93 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

96 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

101 i‡(
›töd
 + 1 !
ac
) {

102 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

105 
°©e
.
£rvî
 = 
av
[
›töd
];

106 
°©e
.
msize
 = msize;

107 
	`bíchmp
(
öô
, 
doô
, 
˛ónup
, 
SHORT
, 
∑øŒñ
,

108 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

109 
	`•rötf
(
buf
, "UDPÜ©ícy usög %s", 
°©e
.
£rvî
);

110 
	`mi¸o
(
buf
, 
	`gë_n
());

111 
	`exô
(0);

112 
	}
}

115 
	$öô
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

117 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

119 i‡(
ôî©i⁄s
) ;

121 
°©e
->
sock
 = 
	`udp_c⁄√˘
(°©e->
£rvî
, 
UDP_XACT
, 
SOCKOPT_NONE
);

122 
°©e
->
£q
 = 0;

123 
°©e
->
buf
 = (*)
	`mÆloc
(°©e->
msize
);

124 i‡(!
°©e
->
buf
) {

125 
	`≥º‹
("malloc");

126 
	`exô
(1);

129 
	`sig«l
(
SIGALRM
, 
timeout
);

130 
	`Æ¨m
(15);

131 
	}
}

134 
	$doô
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

136 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

137 
£q
 = 
°©e
->seq;

138 
sock
 = 
°©e
->sock;

140 
	`Æ¨m
(15);

141 
ôî©i⁄s
-- > 0) {

142 *(*)
°©e
->
buf
 = 
	`ht⁄l
(
£q
++);

143 i‡(
	`£nd
(
sock
, 
°©e
->
buf
, sèã->
msize
, 0) != state->msize) {

144 
	`≥º‹
("lat_udp client: send failed");

145 
	`exô
(5);

147 i‡(
	`ªcv
(
sock
, 
°©e
->
buf
, sèã->
msize
, 0) != state->msize) {

148 
	`≥º‹
("lat_udp client:Ñecv failed");

149 
	`exô
(5);

152 
°©e
->
£q
 = seq;

153 
	}
}

156 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

158 
°©e_t
 *
°©e
 = (°©e_à*Ë
cookõ
;

160 i‡(
ôî©i⁄s
) ;

162 
	`˛o£
(
°©e
->
sock
);

163 
	`‰ì
(
°©e
->
buf
);

164 
	}
}

167 
	$timeout
()

169 
	`Ârötf
(
°dîr
, "RecvÅimed out\n");

170 
	`exô
(1);

171 
	}
}

174 
	$£rvî_maö
()

176 *
buf
 = (*)
	`vÆloc
(
MAX_MSIZE
);

177 
sock
, 
£¡
, 
£q
 = 0;

178 
sockÀn_t
 
«mñí
;

179 
sockaddr_ö
 
ô
;

181 i‡(!
buf
) {

182 
	`≥º‹
("malloc");

183 
	`exô
(4);

186 
GO_AWAY
;

188 
sock
 = 
	`udp_£rvî
(
UDP_XACT
, 
SOCKOPT_REUSE
);

191 
nbyãs
;

192 
«mñí
 = (
ô
);

193 i‡((
nbyãs
 = 
	`ªcv‰om
(
sock
, (*)
buf
, 
MAX_MSIZE
, 0,

194 (
sockaddr
*)&
ô
, &
«mñí
)) < 0) {

195 
	`Ârötf
(
°dîr
, "lat_udp server:Ñecvfrom: got wrong size\n");

196 
	`exô
(9);

198 
£¡
 = 
	`¡ohl
(*(*)
buf
);

199 i‡(
£¡
 < 0) {

200 
	`udp_d⁄e
(
UDP_XACT
);

201 
	`exô
(0);

203 i‡(
£¡
 !++
£q
) {

204 
£q
 = 
£¡
;

206 *(*)
buf
 = 
	`ht⁄l
(
£q
);

207 i‡(
	`£ndto
(
sock
, (*)
buf
, 
nbyãs
, 0,

208 (
sockaddr
*)&
ô
, (it)) < 0) {

209 
	`≥º‹
("lat_udp sendto");

210 
	`exô
(9);

213 
	}
}

	@lat_unix.c

13 *
	gid
 = "$Id$\n";

14 
	~"bích.h
"

16 
	s_°©e
 {

17 
	msv
[2];

18 
	mpid
;

19 
	mmsize
;

20 * 
	mbuf
;

22 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

23 
bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

24 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

27 
	$maö
(
ac
, **
av
)

29 
∑øŒñ
 = 1;

30 
w¨mup
 = 0;

31 
ª≥tôi⁄s
 = -1;

32 
_°©e
 
°©e
;

33 
c
;

34 * 
ußge
 = "[-m <message size>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

36 
°©e
.
msize
 = 1;

37 
°©e
.
pid
 = 0;

39 –
c
 = 
	`gë›t
(
ac
, 
av
, "m:P:W:N:")Ë!
EOF
) {

40 
c
) {

42 
°©e
.
msize
 = 
	`©oi
(
›èrg
);

45 
∑øŒñ
 = 
	`©oi
(
›èrg
);

46 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

49 
w¨mup
 = 
	`©oi
(
›èrg
);

52 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

55 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

59 i‡(
›töd
 < 
ac
) {

60 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

63 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
˛ónup
, 0, 
∑øŒñ
,

64 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

66 
	`mi¸o
("AF_UNIX sock såómÜ©ícy", 
	`gë_n
());

68 
	}
}

71 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

73 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

75 i‡(
ôî©i⁄s
) ;

77 i‡(
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
pSèã
->
sv
) == -1) {

78 
	`≥º‹
("socketpair");

81 
pSèã
->
buf
 = 
	`mÆloc
’Sèã->
msize
);

82 i‡(
pSèã
->
buf
 =
NULL
) {

83 
	`Ârötf
(
°dîr
, "bufferállocation\n");

84 
	`exô
(1);

86 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 0, 1);

88 i‡(
pSèã
->
pid
 = 
	`f‹k
())

91 
	`h™dÀ_scheduÀr
(
	`bíchmp_chûdid
(), 1, 1);

94 
	`sig«l
(
SIGTERM
, 
exô
);

95 
	`ªad
(
pSèã
->
sv
[0],ÖSèã->
buf
,ÖSèã->
msize
) ==ÖState->msize) {

96 
	`wrôe
(
pSèã
->
sv
[0],ÖSèã->
buf
,ÖSèã->
msize
);

98 
	`exô
(0);

99 
	}
}

102 
	$bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

104 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

106 
ôî©i⁄s
-- > 0) {

107 i‡(
	`wrôe
(
pSèã
->
sv
[1],ÖSèã->
buf
,ÖSèã->
msize
) !=ÖState->msize

108 || 
	`ªad
(
pSèã
->
sv
[1],ÖSèã->
buf
,ÖSèã->
msize
) !=ÖState->msize) {

110 
	`˛ónup
(0, 
cookõ
);

111 
	`exô
(0);

114 
	}
}

117 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

119 
_°©e
* 
pSèã
 = (_°©e*)
cookõ
;

121 i‡(
ôî©i⁄s
) ;

123 i‡(
pSèã
->
pid
) {

124 
	`kûl
(
pSèã
->
pid
, 
SIGKILL
);

125 
	`waôpid
(
pSèã
->
pid
, 
NULL
, 0);

126 
pSèã
->
pid
 = 0;

128 
	}
}

	@lat_unix_connect.c

15 *
	gid
 = "$Id$\n";

16 
	~"bích.h
"

18 
	#CONNAME
 "/tmp/af_unix"

	)

20 
£rvî_maö
();

22 
	$bíchm¨k
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

24 
ôî©i⁄s
-- > 0) {

25 
sock
 = 
	`unix_c⁄√˘
(
CONNAME
);

26 i‡(
sock
 <= 0)

27 
	`¥ötf
("îr‹ o¿ôî©i⁄ %lu\n",
ôî©i⁄s
);

28 
	`˛o£
(
sock
);

30 
	}
}

32 
	$maö
(
ac
, **
av
)

34 
∑øŒñ
 = 1;

35 
w¨mup
 = 0;

36 
ª≥tôi⁄s
 = -1;

37 *
ußge
 = "-s\n OR [-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n OR -S\n";

38 
c
;

41 i‡(
ac
 == 2) {

42 i‡(!
	`°rcmp
(
av
[1], "-s")) {

43 i‡(
	`f‹k
() == 0) {

44 
	`£rvî_maö
();

46 
	`exô
(0);

48 i‡(!
	`°rcmp
(
av
[1], "-S")) {

49 
sock
 = 
	`unix_c⁄√˘
(
CONNAME
);

50 
	`wrôe
(
sock
, "0", 1);

51 
	`˛o£
(
sock
);

52 
	`exô
(0);

59 –
c
 = 
	`gë›t
(
ac
, 
av
, "P:W:N:")Ë!
EOF
) {

60 
c
) {

62 
∑øŒñ
 = 
	`©oi
(
›èrg
);

63 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

66 
w¨mup
 = 
	`©oi
(
›èrg
);

69 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

72 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

77 i‡(
›töd
 !
ac
) {

78 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

81 
	`bíchmp
(
NULL
, 
bíchm¨k
, NULL, 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, NULL);

82 
	`mi¸o
("UNIX c⁄√˘i⁄ co°", 
	`gë_n
());

83 
	}
}

85 
	$£rvî_maö
()

87 
√wsock
, 
sock
;

88 
c
;

90 
GO_AWAY
;

91 
sock
 = 
	`unix_£rvî
(
CONNAME
);

93 
√wsock
 = 
	`unix_ac˚±
(
sock
);

94 
c
 = 0;

95 
	`ªad
(
√wsock
, &
c
, 1);

96 i‡(
c
 && c == '0') {

97 
	`unix_d⁄e
(
sock
, 
CONNAME
);

98 
	`exô
(0);

100 
	`˛o£
(
√wsock
);

102 
	}
}

	@lat_usleep.c

30 *
	gid
 = "$Id$\n";

32 
	~"bích.h
"

33 
	~<sched.h
>

35 íum {
	mUSLEEP
, 
	mNANOSLEEP
, 
	mSELECT
, 
	mPSELECT
, 
	mITIMER
} 
	ttimî_e
;

37 
uöt64
 
	gˇught
,

38 
	gn
;

39 
ôimîvÆ
 
	gvÆue
;

41 
	s_°©e
 {

42 
	mu£cs
;

43 } 
	t°©e_t
;

46 
	$bích_u¶ìp
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

48 
°©e_t
 *
°©e
 = (°©e_t*)
cookõ
;

50 
ôî©i⁄s
-- > 0) {

51 
	`u¶ìp
(
°©e
->
u£cs
);

53 
	}
}

56 
	$bích_«no¶ìp
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

58 
°©e_t
 *
°©e
 = (°©e_t*)
cookõ
;

59 
time•ec
 
ªq
;

60 
time•ec
 
ªm
;

62 
ªq
.
tv_£c
 = 0;

63 
ªq
.
tv_n£c
 = 
°©e
->
u£cs
 * 1000;

65 
ôî©i⁄s
-- > 0) {

66 i‡(
	`«no¶ìp
(&
ªq
, &
ªm
) < 0) {

67 
	`«no¶ìp
(&
ªm
, &rem) < 0)

71 
	}
}

74 
	$bích_£À˘
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

76 
°©e_t
 *
°©e
 = (°©e_t*)
cookõ
;

77 
timevÆ
 
tv
;

79 
ôî©i⁄s
-- > 0) {

80 
tv
.
tv_£c
 = 0;

81 
tv
.
tv_u£c
 = 
°©e
->
u£cs
;

82 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tv
);

84 
	}
}

86 #ifde‡
_POSIX_SELECT


88 
	$bích_p£À˘
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

90 
°©e_t
 *
°©e
 = (°©e_t*)
cookõ
;

91 
time•ec
 
ts
;

93 
ôî©i⁄s
-- > 0) {

94 
ts
.
tv_£c
 = 0;

95 
ts
.
tv_n£c
 = 
°©e
->
u£cs
 * 1000;

96 
	`p£À˘
(0, 
NULL
, NULL, NULL, &
ts
, NULL);

98 
	}
}

102 
	$öãrvÆ
(
x
)

104 i‡(++
ˇught
 =
n
) {

105 
ˇught
 = 0;

106 
n
 = 
	`bíchmp_öãrvÆ
(
	`bíchmp_gë°©e
());

109 
	`£tôimî
(
ITIMER_REAL
, &
vÆue
, 
NULL
);

110 
	}
}

113 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

115 
°©e_t
 *
°©e
 = (°©e_t*)
cookõ
;

116 
siga˘i⁄
 
ß
;

118 i‡(
ôî©i⁄s
) ;

120 
vÆue
.
ô_öãrvÆ
.
tv_£c
 = 0;

121 
vÆue
.
ô_öãrvÆ
.
tv_u£c
 = 
°©e
->
u£cs
;

122 
vÆue
.
ô_vÆue
.
tv_£c
 = 0;

123 
vÆue
.
ô_vÆue
.
tv_u£c
 = 
°©e
->
u£cs
;

125 
ß
.
ß_h™dÀr
 = 
öãrvÆ
;

126 
	`sigem±y£t
(&
ß
.
ß_mask
);

127 
ß
.
ß_Êags
 = 0;

128 
	`siga˘i⁄
(
SIGALRM
, &
ß
, 0);

129 
	}
}

132 
	$bích_ôimî
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

134 
n
 = 
ôî©i⁄s
;

135 
ˇught
 = 0;

140 
	`°¨t
(0);

145 
	`£tôimî
(
ITIMER_REAL
, &
vÆue
, 
NULL
);

148 
	`¶ìp
(100000);

150 
	}
}

153 
	$£t_ªÆtime
()

155 
sched_∑øm
 
•
;

157 
•
.
sched_¥i‹ôy
 = 
	`sched_gë_¥i‹ôy_max
(
SCHED_RR
);

158 i‡(
	`sched_£tscheduÀr
(0, 
SCHED_RR
, &
•
Ë>0Ë 
TRUE
;

159 
	`≥º‹
("sched_setscheduler");

160  
FALSE
;

161 
	}
}

164 
	$maö
(
ac
, **
av
)

166 
ªÆtime
 = 0;

167 
∑øŒñ
 = 1;

168 
w¨mup
 = 0;

169 
ª≥tôi⁄s
 = -1;

170 
c
;

171 
buf
[512];

172 
timî_e
 
wh©
 = 
USLEEP
;

173 
°©e_t
 
°©e
;

174 *
scheduÀr
 = "";

175 *
mech™ism
 = "usleep";

176 *
ußge
 = "[-r] [-u <method>] [-P <parallelism>] [-W <warmup>] [-N <repetitions>] usecs\nmethod=usleep|nanosleep|select|pselect|itimer\n";

178 
ªÆtime
 = 0;

180 (
c
 = 
	`gë›t
(
ac
, 
av
, "ru:W:N:")Ë!
EOF
) {

181 
c
) {

183 
ªÆtime
 = 1;

186 i‡(
	`°rcmp
(
›èrg
, "usleep") == 0) {

187 
wh©
 = 
USLEEP
;

188 
mech™ism
 = "usleep";

189 } i‡(
	`°rcmp
(
›èrg
, "nanosleep") == 0) {

190 
wh©
 = 
NANOSLEEP
;

191 
mech™ism
 = "nanosleep";

192 } i‡(
	`°rcmp
(
›èrg
, "select") == 0) {

193 
wh©
 = 
SELECT
;

194 
mech™ism
 = "select";

195 #ifde‡
_POSIX_SELECT


196 } i‡(
	`°rcmp
(
›èrg
, "pselect") == 0) {

197 
wh©
 = 
PSELECT
;

198 
mech™ism
 = "pselect";

200 } i‡(
	`°rcmp
(
›èrg
, "itimer") == 0) {

201 
wh©
 = 
ITIMER
;

202 
mech™ism
 = "itimer";

204 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

208 
∑øŒñ
 = 
	`©oi
(
›èrg
);

209 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

212 
w¨mup
 = 
	`©oi
(
›èrg
);

215 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

218 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

222 i‡(
›töd
 !
ac
 - 1) {

223 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

226 
°©e
.
u£cs
 = 
	`byãs
(
av
[
›töd
]);

227 i‡(
ªÆtime
 && 
	`£t_ªÆtime
()Ë
scheduÀr
 = "realtime ";

229 
wh©
) {

230 
USLEEP
:

231 
	`bíchmp
(
NULL
, 
bích_u¶ìp
, NULL,

232 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

234 
NANOSLEEP
:

235 
	`bíchmp
(
NULL
, 
bích_«no¶ìp
, NULL,

236 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

238 
SELECT
:

239 
	`bíchmp
(
NULL
, 
bích_£À˘
, NULL,

240 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

242 #ifde‡
_POSIX_SELECT


243 
PSELECT
:

244 
	`bíchmp
(
NULL
, 
bích_p£À˘
, NULL,

245 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

248 
ITIMER
:

249 
	`bíchmp
(
öôülize
, 
bích_ôimî
, 
NULL
,

250 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

253 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

256 
	`•rötf
(
buf
, "%s%†%lu mi¸o£c⁄ds", 
scheduÀr
, 
mech™ism
, 
°©e
.
u£cs
);

257 
	`mi¸o
(
buf
, 
	`gë_n
());

259 
	}
}

	@lib_debug.c

1 
	~"bích.h
"

2 
	~"lib_debug.h
"

18 
	$≥r˚¡_poöt
(
‰a˘i⁄
)

20 
t
, 
r
;

21 
ªsu…_t
* 
ªsu…s
 = 
	`gë_ªsu…s
();

23 
t
 = (1.0 - 
‰a˘i⁄
Ë* (
ªsu…s
->
N
 - 1);

24 i‡(
t
 =
	`Êo‹
(t)) {

26 
r
 = 
ªsu…s
->
v
[()
t
].
u
 / (Ïesu…s->v[(È].
n
;

29 
r
 = 
ªsu…s
->
v
[()
t
].
u
 / (Ïesu…s->v[(È].
n
;

30 
r
 +
ªsu…s
->
v
[()
t
+1].
u
 / (Ïesu…s->v[(È+1].
n
;

31 
r
 /= 2.0;

34  
r
;

35 
	}
}

38 
	$¥öt_ªsu…s
(
dëaûs
)

40 
i
;

41 
ªsu…_t
* 
ªsu…s
 = 
	`gë_ªsu…s
();

43 
	`Ârötf
(
°dîr
, "N=%d,Å={", 
ªsu…s
->
N
);

44 
i
 = 0; i < 
ªsu…s
->
N
; ++i) {

45 
	`Ârötf
(
°dîr
, "%.2f", ()
ªsu…s
->
v
[
i
].
u
/ªsu…s->v[i].
n
);

46 i‡(
i
 < 
ªsu…s
->
N
 - 1)

47 
	`Ârötf
(
°dîr
, ", ");

49 
	`Ârötf
(
°dîr
, "}\n");

50 i‡(
dëaûs
) {

51 
	`Ârötf
(
°dîr
, "\t/* %d {", 
ªsu…s
->
N
);

52 
i
 = 0; i < 
ªsu…s
->
N
; ++i) {

53 
	`Ârötf
(
°dîr
,

54 "%Œu/%Œu", 
ªsu…s
->
v
[
i
].
u
,Ñesu…s->v[i].
n
);

55 i‡(
i
 < 
ªsu…s
->
N
 - 1)

56 
	`Ârötf
(
°dîr
, ", ");

58 
	`Ârötf
(
°dîr
, "} */\n");

61 
	}
}

69 
	$bw_qu¨tûe
(
uöt64
 
byãs
)

71 
	`Ârötf
(
°dîr
, "%lu\t%e\t%e\t%e\t%e\t%e\n",

72 ()
	`gë_n
(),

73 ()
byãs
 / (1000000. * 
	`≥r˚¡_poöt
(0.00)),

74 ()
byãs
 / (1000000. * 
	`≥r˚¡_poöt
(0.25)),

75 ()
byãs
 / (1000000. * 
	`≥r˚¡_poöt
(0.50)),

76 ()
byãs
 / (1000000. * 
	`≥r˚¡_poöt
(0.75)),

77 ()
byãs
 / (1000000. * 
	`≥r˚¡_poöt
(1.00)));

78 
	}
}

86 
	$«no_qu¨tûe
(
uöt64
 
n
)

88 
	`Ârötf
(
°dîr
, "%lu\t%e\t%e\t%e\t%e\t%e\n",

89 ()
	`gë_n
(),

90 
	`≥r˚¡_poöt
(0.00Ë* 1000. / ()
n
,

91 
	`≥r˚¡_poöt
(0.25Ë* 1000. / ()
n
,

92 
	`≥r˚¡_poöt
(0.50Ë* 1000. / ()
n
,

93 
	`≥r˚¡_poöt
(0.75Ë* 1000. / ()
n
,

94 
	`≥r˚¡_poöt
(1.00Ë* 1000. / ()
n
);

95 
	}
}

101 
	$¥öt_mem
(* 
addr
, 
size_t
 
size
, size_à
löe
)

103 * 
p
;

104 
uöt64
 
ba£
, 
off
;

105 
size_t
 
∑gesize
 = 
	`gë∑gesize
();

107 
ba£
 = (
uöt64
)
addr
;

108 
p
 = 
addr
; *(**)p !=áddr;Ö = *(**)p) {

109 
off
 = (
uöt64
)
p
 - 
ba£
;

110 
	`Ârötf
(
°dîr
, "\t%lu\t%lu\t%lu\n",

111 ()(
off
 / 
∑gesize
),

112 ()((
off
 % 
∑gesize
Ë/ 
löe
),

113 ()((
off
 % 
löe
) / (*)));

115 
	}
}

118 
	$check_mem
(* 
addr
, 
size_t
 
size
)

120 * 
p
;

121 
size_t
 
i
;

122 
size_t
 
max
 = 
size
 / (*) + 1;

124 
p
=
addr
, 
i
=0; *(**Ì !add∏&& i < 
max
;Ö = *(**)p, i++) {

125 i‡(
p
 < 
addr
 ||ádd∏+ 
size
 <=Ö) {

126 
	`Ârötf
(
°dîr
, "check_mem:Öointer out ofÑange!\n");

129 i‡(*(**)
p
 !
addr
) {

130 
	`Ârötf
(
°dîr
, "check_mem:Öointer chain doesn'tÜoop\n");

132 
	}
}

	@lib_debug.h

1 #i‚de‡
_LIB_DEBUG_H


2 
	#_LIB_DEBUG_H


	)

4 
¥öt_ªsu…s
(
dëaûs
);

5 
bw_qu¨tûe
(
uöt64
 
byãs
);

6 
«no_qu¨tûe
(
uöt64
 
n
);

7 
¥öt_mem
(* 
addr
, 
size_t
 
size
, size_à
löe
);

8 
check_mem
(* 
addr
, 
size_t
 
size
);

	@lib_mem.c

15 
	~"bích.h
"

17 
	#FIVE
(
m
Ëm m m m 
	)
m

18 
	#TEN
(
m
Ë
	`FIVE
(mËFIVE(m)

	)

19 
	#FIFTY
(
m
Ë
	`TEN
(mËTEN(mËTEN(mËTEN(mËTEN(m)

	)

20 
	#HUNDRED
(
m
Ë
	`FIFTY
(mËFIFTY(m)

	)

22 
	#DEREF
(
N
Ë
p
##N = (**)*p##N;

	)

23 
	#DECLARE
(
N
Ë**
•
##N; **
p
##N;

	)

24 
	#INIT
(
N
Ë
p
##N = (
mem_bíchm¨k_ªrun
 && 
addr_ßve
==
°©e
->
addr
Ë? 
•
##N : (**)°©e->p[N];

	)

25 
	#SAVE
(
N
Ë
•
##N = 
p
##N;

	)

27 
	#MEM_BENCHMARK_F
(
N
Ë
mem_bíchm¨k_
##N,

	)

28 
bíchmp_f
 
	gmem_bíchm¨ks
[] = {
REPEAT_15
(
MEM_BENCHMARK_F
)};

30 
	gmem_bíchm¨k_ªrun
 = 0;

32 
	#MEM_BENCHMARK_DEF
(
N
,
ª≥©
,
body
) \

34 
mem_bíchm¨k_
##
	`N
(
ôî_t
 
ôî©i⁄s
, *
cookõ
) \

36 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
; \

37 *
addr_ßve
 = 
NULL
; \

38 
	`ª≥©
(
DECLARE
); \

40 
	`ª≥©
(
INIT
); \

41 
ôî©i⁄s
-- > 0) { \

42 
	`HUNDRED
(
	`ª≥©
(
body
)); \

45 
	`ª≥©
(
SAVE
); \

46 
addr_ßve
 = 
°©e
->
addr
; \

47 
mem_bíchm¨k_ªrun
 = 1; \

48 }

	)

50 
	$MEM_BENCHMARK_DEF
(0, 
REPEAT_0
, 
DEREF
)

51 
	$MEM_BENCHMARK_DEF
(1, 
REPEAT_1
, 
DEREF
)

52 
	$MEM_BENCHMARK_DEF
(2, 
REPEAT_2
, 
DEREF
)

53 
	$MEM_BENCHMARK_DEF
(3, 
REPEAT_3
, 
DEREF
)

54 
	$MEM_BENCHMARK_DEF
(4, 
REPEAT_4
, 
DEREF
)

55 
	$MEM_BENCHMARK_DEF
(5, 
REPEAT_5
, 
DEREF
)

56 
	$MEM_BENCHMARK_DEF
(6, 
REPEAT_6
, 
DEREF
)

57 
	$MEM_BENCHMARK_DEF
(7, 
REPEAT_7
, 
DEREF
)

58 
	$MEM_BENCHMARK_DEF
(8, 
REPEAT_8
, 
DEREF
)

59 
	$MEM_BENCHMARK_DEF
(9, 
REPEAT_9
, 
DEREF
)

60 
	$MEM_BENCHMARK_DEF
(10, 
REPEAT_10
, 
DEREF
)

61 
	$MEM_BENCHMARK_DEF
(11, 
REPEAT_11
, 
DEREF
)

62 
	$MEM_BENCHMARK_DEF
(12, 
REPEAT_12
, 
DEREF
)

63 
	$MEM_BENCHMARK_DEF
(13, 
REPEAT_13
, 
DEREF
)

64 
	$MEM_BENCHMARK_DEF
(14, 
REPEAT_14
, 
DEREF
)

65 
	$MEM_BENCHMARK_DEF
(15, 
REPEAT_15
, 
DEREF
)

68 
size_t
* 
	`w‹ds_öôülize
(size_à
max
, 
sˇÀ
);

72 
	$mem_ª£t
()

74 
mem_bíchm¨k_ªrun
 = 0;

75 
	}
}

78 
	$mem_˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

80 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

82 i‡(
ôî©i⁄s
) ;

84 i‡(
°©e
->
addr
) {

85 
	`‰ì
(
°©e
->
addr
);

86 
°©e
->
addr
 = 
NULL
;

88 i‡(
°©e
->
löes
) {

89 
	`‰ì
(
°©e
->
löes
);

90 
°©e
->
löes
 = 
NULL
;

92 i‡(
°©e
->
∑ges
) {

93 
	`‰ì
(
°©e
->
∑ges
);

94 
°©e
->
∑ges
 = 
NULL
;

96 i‡(
°©e
->
w‹ds
) {

97 
	`‰ì
(
°©e
->
w‹ds
);

98 
°©e
->
w‹ds
 = 
NULL
;

100 
	}
}

103 
	$éb_˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

105 
size_t
 
i
;

106 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

107 **
addr
 = (**)
°©e
->addr;

109 i‡(
ôî©i⁄s
) ;

111 i‡(
addr
) {

112 
i
 = 0; i < 
°©e
->
≈ages
; ++i) {

113 i‡(
addr
[
i
]Ë
	`‰ì
(addr[i]);

115 
	`‰ì
(
addr
);

116 
°©e
->
addr
 = 
NULL
;

118 i‡(
°©e
->
∑ges
) {

119 
	`‰ì
(
°©e
->
∑ges
);

120 
°©e
->
∑ges
 = 
NULL
;

122 i‡(
°©e
->
löes
) {

123 
	`‰ì
(
°©e
->
löes
);

124 
°©e
->
löes
 = 
NULL
;

126 
	}
}

129 
	$ba£_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

131 
size_t
 
nw‹ds
, 
∆öes
, 
nbyãs
, 
≈ages
, 
nm∑ges
;

132 
size_t
 *
∑ges
;

133 
size_t
 *
löes
;

134 
size_t
 *
w‹ds
;

135 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

136 *
p
 = 0 ;

138 i‡(
ôî©i⁄s
) ;

140 
°©e
->
öôülized
 = 0;

142 
nbyãs
 = 
°©e
->
Àn
;

143 
nw‹ds
 = 
°©e
->
löe
 / (*);

144 
∆öes
 = 
°©e
->
∑gesize
 / sèã->
löe
;

145 
≈ages
 = (
nbyãs
 + 
°©e
->
∑gesize
 - 1) / state->pagesize;

146 
nm∑ges
(
°©e
->
maxÀn
 + sèã->
∑gesize
 - 1) / state->pagesize;

148 
	`§™d
(
	`gëpid
());

150 
w‹ds
 = 
NULL
;

151 
löes
 = 
NULL
;

152 
∑ges
 = 
	`≥rmuèti⁄
(
nm∑ges
, 
°©e
->
∑gesize
);

153 
p
 = 
°©e
->
addr
 = (*)
	`mÆloc
(°©e->
maxÀn
 + 2 * sèã->
∑gesize
);

154 i‡(!
p
) {

155 
	`≥º‹
("base_initialize: malloc");

156 
	`exô
(1);

159 
°©e
->
nw‹ds
 =Çwords;

160 
°©e
->
∆öes
 =Çlines;

161 
°©e
->
≈ages
 =Çpages;

162 
°©e
->
löes
 =Üines;

163 
°©e
->
∑ges
 =Öages;

164 
°©e
->
w‹ds
 = words;

166 i‡(
°©e
->
addr
 =
NULL
 || 
∑ges
 == NULL)

169 i‡(()
p
 % 
°©e
->
∑gesize
) {

170 
p
 +
°©e
->
∑gesize
 - ()p % state->pagesize;

172 
°©e
->
ba£
 = 
p
;

173 
°©e
->
öôülized
 = 1;

174 
	`mem_ª£t
();

175 
	}
}

186 
	$°ride_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

188 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

189 
size_t
 
i
;

190 
size_t
 
ønge
 = 
°©e
->
Àn
;

191 
size_t
 
°ride
 = 
°©e
->
löe
;

192 * 
addr
;

194 
	`ba£_öôülize
(
ôî©i⁄s
, 
cookõ
);

195 i‡(!
°©e
->
öôülized
) ;

196 
addr
 = 
°©e
->
ba£
;

198 
i
 = 
°ride
; i < 
ønge
; i += stride) {

199 *(**)&
addr
[
i
 - 
°ride
] = (*)&addr[i];

201 *(**)&
addr
[
i
 - 
°ride
] = (*)&addr[0];

202 
°©e
->
p
[0] = 
addr
;

203 
	`mem_ª£t
();

204 
	}
}

207 
	$thøsh_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

209 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

210 
size_t
 
i
;

211 
size_t
 
j
;

212 
size_t
 
cur
;

213 
size_t
 
√xt
;

214 
size_t
 
˝age
;

215 
size_t
 
≈age
;

216 * 
addr
;

218 
	`ba£_öôülize
(
ôî©i⁄s
, 
cookõ
);

219 i‡(!
°©e
->
öôülized
) ;

220 
addr
 = 
°©e
->
ba£
;

235 i‡(
°©e
->
Àn
 % sèã->
∑gesize
) {

236 
°©e
->
nw‹ds
 = sèã->
Àn
 / sèã->
löe
;

237 
°©e
->
w‹ds
 = 
	`w‹ds_öôülize
(°©e->
nw‹ds
, sèã->
löe
);

238 i‡(!
°©e
->
w‹ds
) {

239 
	`≥º‹
("thrash_initialize: malloc");

240 
	`exô
(1);

242 
i
 = 0; i < 
°©e
->
nw‹ds
 - 1; ++i) {

243 *(**)&
addr
[
°©e
->
w‹ds
[
i
]] = (*)&addr[state->words[i+1]];

245 *(**)&
addr
[
°©e
->
w‹ds
[
i
]] =áddr;

246 
°©e
->
p
[0] = 
addr
;

248 
°©e
->
nw‹ds
 = sèã->
∑gesize
 / sèã->
löe
;

249 
°©e
->
w‹ds
 = 
	`w‹ds_öôülize
(°©e->
nw‹ds
, sèã->
löe
);

250 i‡(!
°©e
->
w‹ds
) {

251 
	`≥º‹
("thrash_initialize: malloc");

252 
	`exô
(2);

254 
i
 = 0; i < 
°©e
->
≈ages
 - 1; ++i) {

255 
˝age
 = 
°©e
->
∑ges
[
i
];

256 
≈age
 = 
°©e
->
∑ges
[
i
 + 1];

257 
j
 = 0; j < 
°©e
->
nw‹ds
; ++j) {

258 
cur
 = 
˝age
 + 
°©e
->
w‹ds
[(
i
 + 
j
Ë% sèã->
nw‹ds
];

259 
√xt
 = 
≈age
 + 
°©e
->
w‹ds
[(
i
 + 
j
 + 1Ë% sèã->
nw‹ds
];

260 *(**)&
addr
[
cur
] = (*)&addr[
√xt
];

263 
˝age
 = 
°©e
->
∑ges
[
i
];

264 
≈age
 = 
°©e
->
∑ges
[0];

265 
j
 = 0; j < 
°©e
->
nw‹ds
; ++j) {

266 
cur
 = 
˝age
 + 
°©e
->
w‹ds
[(
i
 + 
j
Ë% sèã->
nw‹ds
];

267 
√xt
 = 
≈age
 + 
°©e
->
w‹ds
[(
j
 + 1Ë% sèã->
nw‹ds
];

268 *(**)&
addr
[
cur
] = (*)&addr[
√xt
];

270 
°©e
->
p
[0] = (*)&
addr
[°©e->
∑ges
[0]];

272 
	`mem_ª£t
();

273 
	}
}

292 
	$mem_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

294 
i
, 
j
, 
k
, 
l
, 
nw
, 
nw‹ds
, 
∆öes
, 
≈ages
, 
≈oöãrs
;

295 
size_t
 *
∑ges
;

296 
size_t
 *
löes
;

297 
size_t
 *
w‹ds
;

298 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

299 *
p
 = 0 ;

301 i‡(
ôî©i⁄s
) ;

303 
	`ba£_öôülize
(
ôî©i⁄s
, 
cookõ
);

304 i‡(!
°©e
->
öôülized
) ;

305 
°©e
->
öôülized
 = 0;

307 
≈oöãrs
 = 
°©e
->
Àn
 / sèã->
löe
;

308 
nw‹ds
 = 
°©e
->nwords;

309 
∆öes
 = 
°©e
->nlines;

310 
≈ages
 = 
°©e
->npages;

311 
w‹ds
 = 
°©e
->w‹d†
	`w‹ds_öôülize
(
nw‹ds
, (*));

312 
löes
 = 
°©e
->löe†
	`w‹ds_öôülize
(
∆öes
, sèã->
löe
);

313 
∑ges
 = 
°©e
->pages;

314 
p
 = 
°©e
->
ba£
;

316 i‡(
°©e
->
addr
 =
NULL
 \

317 || 
∑ges
 =
NULL
 || 
löes
 =NULL || 
w‹ds
 == NULL) {

318 
	`≥º‹
("mem_initialize: malloc");

319 
	`exô
(1);

323 
l
 = 0;

324 
j
 = 
∆öes
 - 1;

325 
i
 = 0; i < 
≈ages
; ++i) {

326 
j
 = 0; j < 
∆öes
 - 1 && 
l
 < 
≈oöãrs
 - 1; ++j, ++l) {

327 
k
 = 0; k < 
°©e
->
löe
; k += (*)) {

328 *(**)(
p
 + 
∑ges
[
i
] + 
löes
[
j
] + 
k
) =

329 
p
 + 
∑ges
[
i
] + 
löes
[
j
+1] + 
k
;

331 i‡(
l
 % (
≈oöãrs
/
°©e
->
width
) == 0

332 && 
l
 / (
≈oöãrs
/
°©e
->
width
Ë< 
MAX_MEM_PARALLELISM
) {

333 
k
 = 
l
 / (
≈oöãrs
/
°©e
->
width
);

334 
°©e
->
p
[
k
] =Ö + 
∑ges
[
i
] + 
löes
[
j
] + 
w‹ds
[k % 
nw‹ds
];

338 i‡(
i
 < 
≈ages
 - 1) {

339 
k
 = 0; k < 
nw‹ds
; ++k)

340 *(**)(
p
 + 
∑ges
[
i
] + 
löes
[
j
] + 
w‹ds
[
k
]) =

341 
p
 + 
∑ges
[
i
+1] + 
löes
[0] + 
w‹ds
[
k
];

344 
k
 = 0; k < 
nw‹ds
; ++k) {

345 
nw
 = (
k
 =
nw‹ds
 - 1) ? 0 : k + 1;

346 *(**)(
p
 + 
∑ges
[
≈ages
-1] + 
löes
[
j
] + 
w‹ds
[
k
]) =

347 
p
 + 
∑ges
[0] + 
löes
[0] + 
w‹ds
[
nw
];

351 
	`mem_ª£t
();

352 (*
mem_bíchm¨ks
[
°©e
->
width
-1])((
nw‹ds
 * 
≈oöãrs
 + 100) / 100, state);

354 
°©e
->
öôülized
 = 1;

355 
	}
}

365 
	$löe_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

367 
i
, 
j
, 
∆öes
, 
≈ages
;

368 
size_t
 *
∑ges
;

369 
size_t
 *
löes
;

370 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

371 *
p
 = 0 ;

373 i‡(
ôî©i⁄s
) ;

375 
	`ba£_öôülize
(
ôî©i⁄s
, 
cookõ
);

376 i‡(!
°©e
->
öôülized
) ;

377 
°©e
->
öôülized
 = 0;

379 
∆öes
 = 
°©e
->nlines;

380 
≈ages
 = 
°©e
->npages;

381 
löes
 = 
°©e
->löe†
	`w‹ds_öôülize
(
∆öes
, sèã->
löe
);

382 
∑ges
 = 
°©e
->pages;

383 
p
 = 
°©e
->
ba£
;

385 
°©e
->
width
 = 1;

387 i‡(
°©e
->
addr
 =
NULL
 || 
löes
 =NULL || 
∑ges
 == NULL)

391 
i
 = 0; i < 
≈ages
; ++i) {

393 
j
 = 0; j < 
∆öes
 - 1; ++j) {

394 *(**)(
p
 + 
∑ges
[
i
] + 
löes
[
j
]) =

395 
p
 + 
∑ges
[
i
] + 
löes
[
j
+1];

399 *(**)(
p
 + 
∑ges
[
i
] + 
löes
[
j
]) =

400 
p
 + 
∑ges
[(
i
 < 
≈ages
-1Ë? i+1 : 0] + 
löes
[0];

402 
°©e
->
p
[0] =Ö + 
∑ges
[0] + 
löes
[0];

405 
	`mem_ª£t
();

406 
	`mem_bíchm¨k_0
((
∆öes
 * 
≈ages
 + 100Ë/ 100, 
°©e
);

408 
°©e
->
öôülized
 = 1;

409 
	}
}

430 
	$éb_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

432 
i
, 
∆öes
, 
≈ages
, 
∑gesize
;

433 
r
;

434 **
∑ges
 = 
NULL
;

435 **
addr
 = 
NULL
;

436 
size_t
 *
löes
 = 
NULL
;

437 
mem_°©e
* 
°©e
 = (mem_°©e*)
cookõ
;

438 *
p
 = 0 ;

440 i‡(
ôî©i⁄s
) ;

442 
°©e
->
öôülized
 = 0;

444 
∑gesize
 = 
°©e
->pagesize;

445 
∆öes
 = 
∑gesize
 / (*);

446 
≈ages
 = 
°©e
->
Àn
 / 
∑gesize
;

448 
	`§™d
(
	`gëpid
(Ë^ (
	`gëµid
()<<7));

450 
löes
 = 
	`w‹ds_öôülize
(
∆öes
, (*));

451 
∑ges
 = (**)
	`mÆloc
(
≈ages
 * (**));

452 
addr
 = (**)
	`mÆloc
(
≈ages
 * (**));

453 i‡(!
löes
 || !
∑ges
 || !
addr
) {

454 
	`≥º‹
("tlb_initialize: malloc");

455 
	`exô
(1);

458 
°©e
->
nw‹ds
 = 1;

459 
°©e
->
∆öes
 =Çlines;

460 
°©e
->
≈ages
 =Çpages;

461 
°©e
->
w‹ds
 = 
NULL
;

462 
°©e
->
löes
 =Üines;

463 
°©e
->
∑ges
 = (
size_t
*)pages;

464 
°©e
->
addr
 = (*)addr;

465 i‡(
addr
Ë
	`bzîo
◊ddr, 
≈ages
 * (**));

466 i‡(
∑ges
Ë
	`bzîo
’ages, 
≈ages
 * (**));

468 i‡(
addr
 =
NULL
 || 
∑ges
 =NULL || 
löes
 == NULL) {

473 
i
 = 0; i < 
≈ages
; ++i) {

474 
p
 = 
addr
[
i
] = (*)
	`vÆloc
(
∑gesize
);

475 i‡(!
p
) {

476 
	`≥º‹
("tlb_initialize: valloc");

477 
	`exô
(4);

479 i‡(()
p
 % 
∑gesize
) {

480 
	`‰ì
(
p
);

481 
p
 = 
addr
[
i
] = (*)
	`vÆloc
(2 * 
∑gesize
);

482 i‡(!
p
) {

483 
	`≥º‹
("tlb_initialize: valloc");

484 
	`exô
(5);

486 
p
 +
∑gesize
 - ()p %Öagesize;

488 
∑ges
[
i
] = (*)
p
;

492 
r
 = (
	`ønd
() << 15) ^Ñand();

493 
i
 = 
≈ages
 - 2; i > 0; --i) {

494 * 
l
;

495 
r
 = (∏<< 1Ë^ (
	`ønd
() >> 4);

496 
l
 = 
∑ges
[(
r
 % 
i
) + 1];

497 
∑ges
[(
r
 % 
i
) + 1] =Öages[i + 1];

498 
∑ges
[
i
 + 1] = 
l
;

502 
i
 = 0; i < 
≈ages
 - 1; ++i) {

503 *(**)(
∑ges
[
i
] + 
löes
[i%
∆öes
]) =

504 
∑ges
[
i
+1] + 
löes
[(i+1)%
∆öes
];

506 *(**)(
∑ges
[
i
] + 
löes
[i%
∆öes
]) =Öages[0] +Üines[0];

507 
°©e
->
p
[0] = 
∑ges
[0] + 
löes
[0];

510 
	`mem_ª£t
();

511 
	`mem_bíchm¨k_0
((
≈ages
 + 100Ë/ 100, 
°©e
);

513 
°©e
->
öôülized
 = 1;

514 
	}
}

525 
size_t
*

526 
	$w‹ds_öôülize
(
size_t
 
max
, 
sˇÀ
)

528 
size_t
 
i
, 
j
, 
nbôs
;

529 
size_t
* 
w‹ds
 = (size_t*)
	`mÆloc
(
max
 * (size_t));

531 i‡(!
w‹ds
Ë 
NULL
;

533 
	`bzîo
(
w‹ds
, 
max
 * (
size_t
));

534 
i
 = 
max
>>1, 
nbôs
 = 0; i != 0; i >>= 1,Çbits++)

536 
i
 = 0; i < 
max
; ++i) {

538 
j
 = 0; j < 
nbôs
; j++) {

539 i‡(
i
 & (1<<
j
)) {

540 
w‹ds
[
i
] |(1<<(
nbôs
-
j
-1));

543 
w‹ds
[
i
] *
sˇÀ
;

545  
w‹ds
;

546 
	}
}

549 
ssize_t


550 
	$löe_föd
(
size_t
 
Àn
, 
w¨mup
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
)

552 
size_t
 
i
, 
big_jump
, 
löe
;

553 
size_t
 
maxlöe
 = 
	`gë∑gesize
() / 16;

554 
ba£löe
 = 0.0, 
t
;

556 
big_jump
 = 0;

557 
löe
 = 0;

558 i‡(
ª≥tôi⁄s
 < 0)

559 
ª≥tôi⁄s
 = 
TRIES
;

565 
°©e
->
width
 = 1;

566 
°©e
->
löe
 = (*);

567 
°©e
->
addr
 = 
NULL
; !°©e->add∏&& 
Àn
; ) {

568 
°©e
->
Àn
 = sèã->
maxÀn
 =Üen;

569 
	`löe_öôülize
(0, 
°©e
);

570 i‡(
°©e
->
addr
 =
NULL
Ë
Àn
 >>= 1;

572 i‡(
°©e
->
addr
 =
NULL
)  -1;

574 
i
 = (*); i <
maxlöe
; i<<=1) {

575 
t
 = 
	`löe_ã°
(
i
, 
w¨mup
, 
ª≥tôi⁄s
, 
°©e
);

577 i‡(
t
 == 0.0) ;

579 i‡(
i
 > (*)) {

580 i‡(
t
 > 1.3 * 
ba£löe
) {

581 
big_jump
 = 1;

582 } i‡(
big_jump
 && 
t
 < 1.15 * 
ba£löe
) {

583 
löe
 = (
i
>>1);

587 
ba£löe
 = 
t
;

589 
	`mem_˛ónup
(0, 
°©e
);

593  
löe
;

594 
	}
}

597 
	$löe_ã°
(
size_t
 
löe
, 
w¨mup
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
)

599 
size_t
 
i
;

600 
size_t
 
≈ages
 = 
°©e
->npages;

601 
size_t
 
∆öes
 = 
°©e
->
∑gesize
 / 
löe
;

602 
t
;

603 * 
p
 = 
°©e
->
ba£
;

604 * 
fú°
 = 
p
 + 
°©e
->
∑ges
[0] + sèã->
löes
[0];

605 
ªsu…_t
 *
r
, *
r_ßve
;

607 i‡(
ª≥tôi⁄s
 < 0)

608 
ª≥tôi⁄s
 = 
TRIES
;

611 i‡(
∆öes
 < 
°©e
->nlines) {

612 
p
 = 
°©e
->
ba£
;

613 
i
 = 0; i < 
≈ages
 - 1; ++i) {

614 *(**)(
p
 + 
°©e
->
∑ges
[
i
] + sèã->
löes
[
∆öes
-1]) =

615 
p
 + 
°©e
->
∑ges
[
i
+1] + sèã->
löes
[0];

617 *(**)(
p
 + 
°©e
->
∑ges
[
≈ages
-1] + sèã->
löes
[
∆öes
-1]) =

618 
p
 + 
°©e
->
∑ges
[0] + sèã->
löes
[0];

621 
r_ßve
 = 
	`gë_ªsu…s
();

622 
r
 = (
ªsu…_t
*)
	`mÆloc
(
	`sizeof_ªsu…
(
ª≥tôi⁄s
));

623 i‡(!
r
) {

624 
	`≥º‹
("line_test: malloc");

625 
	`exô
(1);

627 
	`ö£πöô
(
r
);

628 
p
 = 
fú°
;

629 
i
 = 0; i < 
ª≥tôi⁄s
; ++i) {

630 
	`BENCH1
(
	`HUNDRED
(
p
 = *(**)p;),0);

634 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), 
r
);

636 
	`u£_poöãr
(
p
);

637 
	`£t_ªsu…s
(
r
);

638 
t
 = 10. * ()
	`gëtime
(Ë/ ()
	`gë_n
();

639 
	`£t_ªsu…s
(
r_ßve
);

640 
	`‰ì
(
r
);

647 i‡(
∆öes
 < 
°©e
->nlines) {

648 
p
 = 
°©e
->
ba£
;

649 
i
 = 0; i < 
≈ages
 - 1; ++i) {

650 *(**)(
p
 +

651 
°©e
->
∑ges
[
i
] +

652 
°©e
->
löes
[
∆öes
-1]) =

653 
p
 +

654 
°©e
->
∑ges
[
i
] +

655 
°©e
->
löes
[
∆öes
];

657 *(**)(
p
 +

658 
°©e
->
∑ges
[
≈ages
-1] +

659 
°©e
->
löes
[
∆öes
-1]) =

660 
p
 +

661 
°©e
->
∑ges
[
≈ages
-1] +

662 
°©e
->
löes
[
∆öes
];

665  (
t
);

666 
	}
}

669 
	$∑r_mem
(
size_t
 
Àn
, 
w¨mup
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
)

671 
i
, 
j
;

672 
ôî_t
 
__n
 = 1;

673 
ba£löe
, 
max_∑r
, 
∑r
;

675 
°©e
->
width
 = 1;

676 
max_∑r
 = 1.;

677 i‡(
ª≥tôi⁄s
 < 0)

678 
ª≥tôi⁄s
 = 
TRIES
;

680 
°©e
->
addr
 = 
NULL
; !°©e->add∏&& 
Àn
; ) {

681 
°©e
->
Àn
 = sèã->
maxÀn
 =Üen;

682 
	`mem_öôülize
(0, 
°©e
);

683 i‡(
°©e
->
addr
 =
NULL
Ë
Àn
 >>= 1;

685 i‡(
°©e
->
addr
 =
NULL
)  -1.;

687 
i
 = 0; i < 
MAX_MEM_PARALLELISM
; ++i) {

688 
j
 = 0; j <
i
; j++) {

689 
size_t
 
∆öes
 = 
Àn
 / 
°©e
->
löe
;

690 
size_t
 
löes_≥r_chunk
 = 
∆öes
 / (
i
 + 1);

691 
size_t
 
löes_≥r_∑ge
 = 
°©e
->
∑gesize
 / sèã->
löe
;

692 
size_t
 
löe
 = 
j
 * 
löes_≥r_chunk
;

693 
size_t
 
w‹d
 = (
j
 * 
°©e
->
nw‹ds
Ë/ (
i
 + 1);

700 
°©e
->
p
[
j
] = sèã->
ba£
 +

701 
°©e
->
∑ges
[
löe
 / 
löes_≥r_∑ge
] +

702 
°©e
->
löes
[
löe
 % 
löes_≥r_∑ge
] +

703 
°©e
->
w‹ds
[
w‹d
 % sèã->
nw‹ds
];

705 
	`mem_ª£t
();

706 (*
mem_bíchm¨ks
[
i
])((
Àn
 / (*Ë+ 100Ë/ 100, 
°©e
);

707 
	`BENCH
((*
mem_bíchm¨ks
[
i
])(
__n
, 
°©e
); __n = 1;, 0);

708 i‡(
i
 == 0) {

709 
ba£löe
 = ()
	`gëtime
(Ë/ ()
	`gë_n
();

710 } i‡(
	`gëtime
() > 0) {

711 
∑r
 = 
ba£löe
;

712 
∑r
 /()
	`gëtime
(Ë/ ()((
i
 + 1Ë* 
	`gë_n
());

716 i‡(
∑r
 > 
max_∑r
) {

717 
max_∑r
 = 
∑r
;

719 i‡(4.0 * 
max_∑r
 < 
i
)

723 
	`mem_˛ónup
(0, 
°©e
);

725  
max_∑r
;

726 
	}
}

	@lib_mem.h

1 #i‚de‡
LMBENCH_MEM_H


2 
	#LMBENCH_MEM_H


	)

5 
	#MAX_MEM_PARALLELISM
 16

	)

6 
	#MEM_BENCHMARK_DECL
(
N
) \

7 
mem_bíchm¨k_
##
	`N
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

	)

9 
	#REPEAT_0
(
m
Ë
	`m
(0)

	)

10 
	#REPEAT_1
(
m
Ë
	`REPEAT_0
(mË
	`m
(1)

	)

11 
	#REPEAT_2
(
m
Ë
	`REPEAT_1
(mË
	`m
(2)

	)

12 
	#REPEAT_3
(
m
Ë
	`REPEAT_2
(mË
	`m
(3)

	)

13 
	#REPEAT_4
(
m
Ë
	`REPEAT_3
(mË
	`m
(4)

	)

14 
	#REPEAT_5
(
m
Ë
	`REPEAT_4
(mË
	`m
(5)

	)

15 
	#REPEAT_6
(
m
Ë
	`REPEAT_5
(mË
	`m
(6)

	)

16 
	#REPEAT_7
(
m
Ë
	`REPEAT_6
(mË
	`m
(7)

	)

17 
	#REPEAT_8
(
m
Ë
	`REPEAT_7
(mË
	`m
(8)

	)

18 
	#REPEAT_9
(
m
Ë
	`REPEAT_8
(mË
	`m
(9)

	)

19 
	#REPEAT_10
(
m
Ë
	`REPEAT_9
(mË
	`m
(10)

	)

20 
	#REPEAT_11
(
m
Ë
	`REPEAT_10
(mË
	`m
(11)

	)

21 
	#REPEAT_12
(
m
Ë
	`REPEAT_11
(mË
	`m
(12)

	)

22 
	#REPEAT_13
(
m
Ë
	`REPEAT_12
(mË
	`m
(13)

	)

23 
	#REPEAT_14
(
m
Ë
	`REPEAT_13
(mË
	`m
(14)

	)

24 
	#REPEAT_15
(
m
Ë
	`REPEAT_14
(mË
	`m
(15)

	)

26 
	smem_°©e
 {

27 * 
	maddr
;

28 * 
	mba£
;

29 * 
	mp
[
MAX_MEM_PARALLELISM
];

30 
	möôülized
;

31 
	mwidth
;

32 
size_t
 
	mÀn
;

33 
size_t
 
	mmaxÀn
;

34 
size_t
 
	mlöe
;

35 
size_t
 
	m∑gesize
;

36 
size_t
 
	m∆öes
;

37 
size_t
 
	m≈ages
;

38 
size_t
 
	mnw‹ds
;

39 
size_t
* 
	m∑ges
;

40 
size_t
* 
	mlöes
;

41 
size_t
* 
	mw‹ds
;

44 
°ride_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

45 
thøsh_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

46 
mem_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

47 
löe_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

48 
éb_öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

49 
mem_˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

50 
éb_˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

52 
	$REPEAT_15
(
MEM_BENCHMARK_DECL
)

53 
bíchmp_f
 
mem_bíchm¨ks
[];

55 
ssize_t
 
	`löe_föd
(
size_t
 
l
, 
w¨mup
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
);

56 
	`löe_ã°
(
size_t
 
l
, 
w¨mup
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
);

57 
	`∑r_mem
(
size_t
 
l
, 
w¨mup
, 
ª≥tôi⁄s
, 
mem_°©e
* 
°©e
);

	@lib_sched.c

1 
	~"bích.h
"

5 #i‡
deföed
(
HAVE_SYSMP
)

6 
	~<sys/sysmp.h
>

7 
	~<sys/sysöfo.h
>

10 #i‡
deföed
(
HAVE_MPCTL
)

11 
	~<sys/mp˘l.h
>

14 #i‡
deföed
(
HAVE_BINDPROCESSOR
)

15 
	~<sys/¥o˚ss‹.h
>

18 #i‡
deföed
(
HAVE_PROCESSOR_BIND
)

19 
	~<sys/ty≥s.h
>

20 
	~<sys/¥o˚ss‹.h
>

21 
	~<sys/¥oc£t.h
>

24 #i‡
deföed
(
HAVE_SCHED_SETAFFINITY
)

25 
	~<sched.h
>

28 
cu°om
(* 
°r
, 
˝u
);

29 
ªvî£_bôs
(
˝u
);

30 
sched_n˝us
();

31 
sched_pö
(
˝u
);

46 
	$h™dÀ_scheduÀr
(
chûdno
, 
bích¥oc
, 
nbích¥ocs
)

48 
˝u
 = 0;

49 * 
sched
 = 
	`gëív
("LMBENCH_SCHED");

51 i‡(!
sched
 || 
	`°rˇ£cmp
(sched, "DEFAULT") == 0) {

54 } i‡(
	`°rˇ£cmp
(
sched
, "SINGLE") == 0) {

56 
˝u
 = 0;

57 } i‡(
	`°rˇ£cmp
(
sched
, "BALANCED") == 0) {

62 
˝u
 = 
chûdno
;

63 } i‡(
	`°rˇ£cmp
(
sched
, "BALANCED_SPREAD") == 0) {

71 
˝u
 = 
	`ªvî£_bôs
(
chûdno
);

72 } i‡(
	`°rˇ£cmp
(
sched
, "UNIQUE") == 0) {

77 
˝u
 = 
chûdno
 * (
nbích¥ocs
 + 1Ë+ 
bích¥oc
;

78 } i‡(
	`°rˇ£cmp
(
sched
, "UNIQUE_SPREAD") == 0) {

86 
˝u
 = 
	`ªvî£_bôs
(
chûdno
 * (
nbích¥ocs
 + 1Ë+ 
bích¥oc
);

87 } i‡(
	`°∫ˇ£cmp
(
sched
, "CUSTOM ", 
	`°æí
("CUSTOM ")) == 0) {

88 
˝u
 = 
	`cu°om
(
sched
 + 
	`°æí
("CUSTOM"), 
chûdno
);

89 } i‡(
	`°∫ˇ£cmp
(
sched
, "CUSTOM_SPREAD ", 
	`°æí
("CUSTOM_SPREAD ")) == 0) {

90 
˝u
 = 
	`cu°om
(
sched
 + 
	`°æí
("CUSTOM_SPREAD"),

91 
chûdno
 * (
nbích¥ocs
 + 1Ë+ 
bích¥oc
);

97  
	`sched_pö
(
˝u
 % 
	`sched_n˝us
());

98 
	}
}

107 
	$ªvî£_bôs
(
˝u
)

109 
i
;

110 
nbôs
;

111 
max
 = 
	`sched_n˝us
() - 1;

112 
˝u_ªvî£
 = 0;

114 
i
 = 
max
>>1, 
nbôs
 = 1; i > 0; i >>= 1,Çbits++)

117 
i
 = 0; i < 
nbôs
; i++) {

118 i‡(
˝u
 & (1<<
i
))

119 
˝u_ªvî£
 |(1<<(
nbôs
-
i
-1));

121  
˝u_ªvî£
;

122 
	}
}

128 
	$cu°om
(* 
°r
, 
˝u
)

130 
nvÆues
 = -1;

131 * 
vÆues
 = 
NULL
;

133 i‡(
vÆues
 =
NULL
) {

134 
nvÆues
 = 0;

135 
vÆues
 = (*)
	`mÆloc
(());

137 *
°r
) {

138 * 
q
;

139 *
°r
 && !
	`isdigô
(*str)) str++;

140 
q
 = 
°r
;

141 *
°r
 && 
	`isdigô
(*str)) str++;

142 i‡(
°r
 =
q
) ;

143 *
°r
++ = 0;

144 
	`ssˇnf
(
q
, "%d", &
vÆues
[
nvÆues
++]);

145 
vÆues
 = (*)
	`ªÆloc
((*)vÆues, (
nvÆues
 + 1) * ());

148 i‡(
nvÆues
 == 0)  0;

149  
vÆues
[
˝u
 % 
nvÆues
];

150 
	}
}

156 
	$sched_n˝us
()

158 #ifde‡
MP_NPROCS


160  
	`sysmp
(
MP_NPROCS
);

161 #ñi‡
	`deföed
(
HAVE_MPCTL
)

163  
	`mp˘l
(
MPC_GETNUMSPUS_SYS
, 0, 0);

164 #ñi‡
	`deföed
(
_SC_NPROCESSORS_ONLN
)

166  
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
);

170 
	}
}

179 
	$sched_pö
(
˝u
)

181 
ªtvÆ
 = -1;

183 #ifde‡
HAVE_SYSMP


185 
ªtvÆ
 = 
	`sysmp
(
MP_MUSTRUN
, 
˝u
);

186 #ñi‡
	`deföed
(
HAVE_MPCTL
)

188 
ªtvÆ
 = 
	`mp˘l
(
MPC_SET_PROCESS
, 
˝u
, 
MPC_SELFPID
);

189 #ñi‡
	`deföed
(
HAVE_BINDPROCESSOR
)

191 
ªtvÆ
 = 
	`böd¥o˚ss‹
(
BINDPROCESS
, 
	`gëpid
(), 
˝u
);

192 #ñi‡
	`deföed
(
HAVE_PROCESSOR_BIND
)

194 
ªtvÆ
 = 
	`¥o˚ss‹_böd
(
P_PID
, 
P_MYPID
, 
˝u
, 
NULL
);

195 #ñi‡
	`deföed
(
HAVE_SCHED_SETAFFINITY
)

197 * 
mask
 = 
NULL
;

198 * 
˝umask
 = 
NULL
;

199 
sz
 = 0;

200 
n˝us
 = 0;

201 
i
;

202 
j
;

204 i‡(
˝umask
 =
NULL
) {

205 
sz
 = 1 + (2 * 
	`sched_n˝us
()) / (8 * ());

206 
mask
 = (*)
	`mÆloc
(
sz
 * ());

207 
˝umask
 = (*)
	`mÆloc
(
sz
 * ());

208 
ªtvÆ
 = 
	`sched_gëafföôy
(0, 
sz
 * (), 
˝umask
);

209 i‡(
ªtvÆ
 < 0Ë
	`≥º‹
("sched_getaffinity:");

210 i‡(
ªtvÆ
 < 0) Ñetval;

212 
i
 = 0; i < 
sz
 * 8 * (); ++i) {

213 
w‹d
 = 
i
 / (8 * ());

214 
bô
 = 
i
 % (8 * ());

215 i‡(
˝umask
[
w‹d
] & (1 << 
bô
)Ë
n˝us
++;

218 
˝u
 %
n˝us
;

220 
	`bzîo
(
mask
, 
sz
 * ());

221 
i
 = 0, 
j
 = 0; i < 
sz
 * 8 * (); ++i) {

222 
w‹d
 = 
i
 / (8 * ());

223 
bô
 = 
i
 % (8 * ());

224 i‡(
˝umask
[
w‹d
] & (1 << 
bô
)) {

225 i‡(
j
 >
˝u
) {

226 
mask
[
w‹d
] |(1 << 
bô
);

229 
j
++;

232 
ªtvÆ
 = 
	`sched_£èfföôy
(0, 
sz
 * (), 
mask
);

233 i‡(
ªtvÆ
 < 0Ë
	`≥º‹
("sched_setaffinity:");

234 #ifde‡
_DEBUG


235 
	`Ârötf
(
°dîr
, "sched_pö(%d):Öid=%d,Ñëu∫ög %d\n", 
˝u
, ()
	`gëpid
(), 
ªtvÆ
);

239  
ªtvÆ
;

240 
	}
}

	@lib_stats.c

1 
	~<m©h.h
>

2 
	~"bích.h
"

4 
	#BOOTSTRAP_COUNT
 200

	)

10 
	$öt_com∑ª
(c⁄° *
a
, c⁄° *
b
)

12 i‡(*(*)
a
 < *(*)
b
)  -1;

13 i‡(*(*)
a
 > *(*)
b
)  1;

15 
	}
}

21 
	$uöt64_com∑ª
(c⁄° *
a
, c⁄° *
b
)

23 i‡(*(
uöt64
*)
a
 < *(uöt64*)
b
)  -1;

24 i‡(*(
uöt64
*)
a
 > *(uöt64*)
b
)  1;

26 
	}
}

32 
	$doubÀ_com∑ª
(c⁄° *
a
, c⁄° *
b
)

34 i‡(*(*)
a
 < *(*)
b
)  -1;

35 i‡(*(*)
a
 > *(*)
b
)  1;

37 
	}
}

43 
	$öt_medün
(*
vÆues
, 
size
)

45 
	`qs‹t
(
vÆues
, 
size
, (), 
öt_com∑ª
);

47 i‡(
size
 == 0)  0.;

49 i‡(
size
 % 2) {

50  
vÆues
[
size
/2];

53  (
vÆues
[
size
/2 - 1] + values[size/2]) / 2;

54 
	}
}

59 
uöt64


60 
	$uöt64_medün
(
uöt64
 *
vÆues
, 
size
)

62 
	`qs‹t
(
vÆues
, 
size
, (
uöt64
), 
uöt64_com∑ª
);

64 i‡(
size
 == 0)  0.;

66 i‡(
size
 % 2) {

67  
vÆues
[
size
/2];

70  (
vÆues
[
size
/2 - 1] + values[size/2]) / 2;

71 
	}
}

77 
	$doubÀ_medün
(*
vÆues
, 
size
)

79 
	`qs‹t
(
vÆues
, 
size
, (), 
doubÀ_com∑ª
);

81 i‡(
size
 == 0)  0.;

83 i‡(
size
 % 2) {

84  
vÆues
[
size
/2];

87  (
vÆues
[
size
/2 - 1] + values[size/2]) / 2.0;

88 
	}
}

94 
	$öt_món
(*
vÆues
, 
size
)

96 
i
;

97 
sum
 = 0;

99 
i
 = 0; i < 
size
; ++i)

100 
sum
 +
vÆues
[
i
];

102  
sum
 / 
size
;

103 
	}
}

108 
uöt64


109 
	$uöt64_món
(
uöt64
 *
vÆues
, 
size
)

111 
i
;

112 
uöt64
 
sum
 = 0;

114 
i
 = 0; i < 
size
; ++i)

115 
sum
 +
vÆues
[
i
];

117  
sum
 / 
size
;

118 
	}
}

124 
	$doubÀ_món
(*
vÆues
, 
size
)

126 
i
;

127 
sum
 = 0.0;

129 
i
 = 0; i < 
size
; ++i)

130 
sum
 +
vÆues
[
i
];

132  
sum
 / ()
size
;

133 
	}
}

139 
	$öt_mö
(*
vÆues
, 
size
)

141 
i
;

142 
mö
 = 
vÆues
[0];

144 
i
 = 1; i < 
size
; ++i)

145 i‡(
vÆues
[
i
] < 
mö
) min = values[i];

147  
mö
;

148 
	}
}

153 
uöt64


154 
	$uöt64_mö
(
uöt64
 *
vÆues
, 
size
)

156 
i
;

157 
uöt64
 
mö
 = 
vÆues
[0];

159 
i
 = 1; i < 
size
; ++i)

160 i‡(
vÆues
[
i
] < 
mö
) min = values[i];

162  
mö
;

163 
	}
}

169 
	$doubÀ_mö
(*
vÆues
, 
size
)

171 
i
;

172 
mö
 = 
vÆues
[0];

174 
i
 = 1; i < 
size
; ++i)

175 i‡(
vÆues
[
i
] < 
mö
) min = values[i];

177  
mö
;

178 
	}
}

184 
	$öt_max
(*
vÆues
, 
size
)

186 
i
;

187 
max
 = 
vÆues
[0];

189 
i
 = 1; i < 
size
; ++i)

190 i‡(
vÆues
[
i
] > 
max
) max = values[i];

192  
max
;

193 
	}
}

198 
uöt64


199 
	$uöt64_max
(
uöt64
 *
vÆues
, 
size
)

201 
i
;

202 
uöt64
 
max
 = 
vÆues
[0];

204 
i
 = 1; i < 
size
; ++i)

205 i‡(
vÆues
[
i
] > 
max
) max = values[i];

207  
max
;

208 
	}
}

214 
	$doubÀ_max
(*
vÆues
, 
size
)

216 
i
;

217 
max
 = 
vÆues
[0];

219 
i
 = 1; i < 
size
; ++i)

220 i‡(
vÆues
[
i
] > 
max
) max = values[i];

222  
max
;

223 
	}
}

231 
	$öt_v¨ün˚
(*
vÆues
, 
size
)

233 
i
;

234 
sum
 = 0.0;

235 
món
 = 
	`öt_món
(
vÆues
, 
size
);

237 
i
 = 0; i < 
size
; ++i)

238 
sum
 +()((
vÆues
[
i
] - 
món
) * (values[i] - mean));

240  
sum
 / ()(
size
 - 1);

241 
	}
}

246 
	$uöt64_v¨ün˚
(
uöt64
 *
vÆues
, 
size
)

248 
i
;

249 
sum
 = 0.0;

250 
uöt64
 
món
 = 
	`uöt64_món
(
vÆues
, 
size
);

252 
i
 = 0; i < 
size
; ++i)

253 
sum
 +()((
vÆues
[
i
] - 
món
) * (values[i] - mean));

254  
sum
 / ()(
size
 - 1);

255 
	}
}

260 
	$doubÀ_v¨ün˚
(*
vÆues
, 
size
)

262 
i
;

263 
sum
 = 0.0;

264 
món
 = 
	`doubÀ_món
(
vÆues
, 
size
);

266 
i
 = 0; i < 
size
; ++i)

267 
sum
 +()((
vÆues
[
i
] - 
món
) * (values[i] - mean));

269  
sum
 / ()(
size
 - 1);

270 
	}
}

278 
	$öt_momít
(
momít
, *
vÆues
, 
size
)

280 
i
, 
j
;

281 
sum
 = 0.0;

282 
món
 = 
	`öt_món
(
vÆues
, 
size
);

284 
i
 = 0; i < 
size
; ++i) {

285 
diff
 = 
vÆues
[
i
] - 
món
;

286 
m
 = 
diff
;

287 
j
 = 1; j < 
momít
; ++j)

288 
m
 *
diff
;

289 
sum
 +
m
;

292  
sum
 / ()
size
;

293 
	}
}

298 
	$uöt64_momít
(
momít
, 
uöt64
 *
vÆues
, 
size
)

300 
i
, 
j
;

301 
sum
 = 0.0;

302 
uöt64
 
món
 = 
	`uöt64_món
(
vÆues
, 
size
);

304 
i
 = 0; i < 
size
; ++i) {

305 
diff
 = 
vÆues
[
i
] - 
món
;

306 
m
 = 
diff
;

307 
j
 = 1; j < 
momít
; ++j)

308 
m
 *
diff
;

309 
sum
 +
m
;

312  
sum
 / ()
size
;

313 
	}
}

318 
	$doubÀ_momít
(
momít
, *
vÆues
, 
size
)

320 
i
, 
j
;

321 
sum
 = 0.0;

322 
món
 = 
	`doubÀ_món
(
vÆues
, 
size
);

324 
i
 = 0; i < 
size
; ++i) {

325 
diff
 = 
vÆues
[
i
] - 
món
;

326 
m
 = 
diff
;

327 
j
 = 1; j < 
momít
; ++j)

328 
m
 *
diff
;

329 
sum
 +
m
;

332  
sum
 / ()
size
;

333 
	}
}

341 
	$öt_°dîr
(*
vÆues
, 
size
)

343  
	`sqπ
(
	`öt_v¨ün˚
(
vÆues
, 
size
));

344 
	}
}

349 
	$uöt64_°dîr
(
uöt64
 *
vÆues
, 
size
)

351  
	`sqπ
(
	`uöt64_v¨ün˚
(
vÆues
, 
size
));

352 
	}
}

357 
	$doubÀ_°dîr
(*
vÆues
, 
size
)

359  
	`sqπ
(
	`doubÀ_v¨ün˚
(
vÆues
, 
size
));

360 
	}
}

366 
	$öt_skew
(*
vÆues
, 
size
)

368 
sigma
 = 
	`öt_°dîr
(
vÆues
, 
size
);

369 
momít3
 = 
	`öt_momít
(3, 
vÆues
, 
size
);

371  
momít3
 / (
sigma
 * sigma * sigma);

372 
	}
}

377 
	$uöt64_skew
(
uöt64
 *
vÆues
, 
size
)

379 
sigma
 = 
	`uöt64_°dîr
(
vÆues
, 
size
);

380 
momít3
 = 
	`uöt64_momít
(3, 
vÆues
, 
size
);

382  
momít3
 / (
sigma
 * sigma * sigma);

383 
	}
}

388 
	$doubÀ_skew
(*
vÆues
, 
size
)

390 
sigma
 = 
	`doubÀ_°dîr
(
vÆues
, 
size
);

391 
momít3
 = 
	`doubÀ_momít
(3, 
vÆues
, 
size
);

393  
momít3
 / (
sigma
 * sigma * sigma);

394 
	}
}

402 
	$öt_kuπosis
(*
vÆues
, 
size
)

404 
v¨ün˚
 = 
	`öt_v¨ün˚
(
vÆues
, 
size
);

405 
momít4
 = 
	`öt_momít
(4, 
vÆues
, 
size
);

407  
momít4
 / (
v¨ün˚
 * variance) - 3;

408 
	}
}

413 
	$uöt64_kuπosis
(
uöt64
 *
vÆues
, 
size
)

415 
v¨ün˚
 = 
	`uöt64_v¨ün˚
(
vÆues
, 
size
);

416 
momít4
 = 
	`uöt64_momít
(4, 
vÆues
, 
size
);

418  
momít4
 / (
v¨ün˚
 * variance) - 3;

419 
	}
}

424 
	$doubÀ_kuπosis
(*
vÆues
, 
size
)

426 
v¨ün˚
 = 
	`doubÀ_v¨ün˚
(
vÆues
, 
size
);

427 
momít4
 = 
	`doubÀ_momít
(4, 
vÆues
, 
size
);

429  
momít4
 / (
v¨ün˚
 * variance) - 3;

430 
	}
}

445 
	$öt_boŸ°øp_°dîr
(*
vÆues
, 
size
, 
öt_°©
 
f
)

447 
i
, 
j
;

448 *
ßm∂es
 = (*)
	`mÆloc
(
size
 * ());

449 *
s
 = (*)
	`mÆloc
(
BOOTSTRAP_COUNT
 * ());

450 
s_sum
 = 0;

451 
sum
 = 0;

454 
i
 = 0; i < 
BOOTSTRAP_COUNT
; ++i) {

455 
j
 = 0; j < 
size
; ++j)

456 
ßm∂es
[
j
] = 
vÆues
[
	`ønd
(Ë% 
size
];

457 
s
[
i
] = ()(*
f
)(
ßm∂es
, 
size
);

458 
s_sum
 +
s
[
i
];

460 
s_sum
 /()
BOOTSTRAP_COUNT
;

462 
i
 = 0; i < 
BOOTSTRAP_COUNT
; ++i)

463 
sum
 +(
s
[
i
] - 
s_sum
) * (s[i] - s_sum);

465 
sum
 /()(
BOOTSTRAP_COUNT
 - 1);

467 
	`‰ì
(
ßm∂es
);

468 
	`‰ì
(
s
);

470  
	`sqπ
(
sum
);

471 
	}
}

477 
	$uöt64_boŸ°øp_°dîr
(
uöt64
 *
vÆues
, 
size
, 
uöt64_°©
 
f
)

479 
i
, 
j
;

480 
uöt64
 *
ßm∂es
 = (uöt64*)
	`mÆloc
(
size
 * (uint64));

481 *
s
 = (*)
	`mÆloc
(
BOOTSTRAP_COUNT
 * ());

482 
s_sum
;

483 
sum
;

486 
i
 = 0, 
s_sum
 = 0.0; i < 
BOOTSTRAP_COUNT
; ++i) {

487 
j
 = 0; j < 
size
; ++j)

488 
ßm∂es
[
j
] = 
vÆues
[
	`ønd
(Ë% 
size
];

489 
s
[
i
] = ()(*
f
)(
ßm∂es
, 
size
);

490 
s_sum
 +
s
[
i
];

492 
s_sum
 /()
BOOTSTRAP_COUNT
;

494 
i
 = 0, 
sum
 = 0.0; i < 
BOOTSTRAP_COUNT
; ++i)

495 
sum
 +(
s
[
i
] - 
s_sum
) * (s[i] - s_sum);

497 
	`‰ì
(
ßm∂es
);

498 
	`‰ì
(
s
);

500  
	`sqπ
(
sum
/()(
BOOTSTRAP_COUNT
 - 1));

501 
	}
}

507 
	$doubÀ_boŸ°øp_°dîr
(*
vÆues
, 
size
, 
doubÀ_°©
 
f
)

509 
i
, 
j
;

510 *
ßm∂es
 = (*)
	`mÆloc
(
size
 * ());

511 *
s
 = (*)
	`mÆloc
(
BOOTSTRAP_COUNT
 * ());

512 
s_sum
 = 0;

513 
sum
 = 0;

516 
i
 = 0; i < 
BOOTSTRAP_COUNT
; ++i) {

517 
j
 = 0; j < 
size
; ++j)

518 
ßm∂es
[
j
] = 
vÆues
[
	`ønd
(Ë% 
size
];

519 
s
[
i
] = (*
f
)(
ßm∂es
, 
size
);

520 
s_sum
 +()
s
[
i
];

522 
s_sum
 /()
BOOTSTRAP_COUNT
;

524 
i
 = 0; i < 
BOOTSTRAP_COUNT
; ++i)

525 
sum
 +(
s
[
i
] - 
s_sum
) * (s[i] - s_sum);

527 
sum
 /()(
BOOTSTRAP_COUNT
 - 1);

529 
	`‰ì
(
ßm∂es
);

530 
	`‰ì
(
s
);

532  
	`sqπ
(
sum
);

533 
	}
}

551 
	$ªgªssi⁄
(*
x
, *
y
, *
sig
, 
n
,

552 *
a
, *
b
, *
sig_a
, *
sig_b
,

553 *
chi2
)

555 
i
;

556 
S
 = 0.0, 
Sx
 = 0.0, 
Sy
 = 0.0, 
Sâ
 = 0.0, 
Sx_S
;

559 
i
 = 0; i < 
n
; ++i) {

561 
weight
 = 1.0 / (
sig
 ? sig[
i
] * sig[i] : 1.0);

562 
S
 +
weight
;

563 
Sx
 +
weight
 * 
x
[
i
];

564 
Sy
 +
weight
 * 
y
[
i
];

567 *
b
 = 0.0;

568 
Sx_S
 = 
Sx
 / 
S
;

569 
i
 = 0; i < 
n
; ++i) {

576 
t_i
 = (
x
[
i
] - 
Sx_S
Ë/ (
sig
 ? sig[i] : 1.0);

577 
Sâ
 +
t_i
 *Å_i;

578 *
b
 +
t_i
 * 
y
[
i
] / (
sig
 ? sig[i] : 1.0);

587 *
b
 /
Sâ
;

588 *
a
 = (
Sy
 - *
b
 * 
Sx
Ë/ 
S
;

589 *
sig_a
 = 
	`sqπ
((1.0 + (
Sx
 * SxË/ (
S
 * 
Sâ
)) / S);

590 *
sig_b
 = 
	`sqπ
(1.0 / 
Sâ
);

593 *
chi2
 = 0.0;

594 
i
 = 0; i < 
n
; ++i) {

595 
mîô
 = (
y
[
i
] - ((*
a
Ë+ (*
b
Ë* 
x
[i])Ë/ (
sig
 ? sig[i] : 1.0);

596 *
chi2
 +
mîô
 * merit;

598 i‡(
sig
 =
NULL
) {

599 *
sig_a
 *
	`sqπ
((*
chi2
Ë/ (
n
 - 2));

600 *
sig_b
 *
	`sqπ
((*
chi2
Ë/ (
n
 - 2));

602 
	}
}

	@lib_tcp.c

8 
	#_LIB


	)

9 
	~"bích.h
"

18 
	$t˝_£rvî
(
¥og
, 
rdwr
)

20 
sock
;

21 
sockaddr_ö
 
s
;

23 #ifdef 
LIBTCP_VERBOSE


24 
	`Ârötf
(
°dîr
, "t˝_£rvî(%u, %u)\n", 
¥og
, 
rdwr
);

26 i‡((
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) < 0) {

27 
	`≥º‹
("socket");

28 
	`exô
(1);

30 
	`sock_›timize
(
sock
, 
rdwr
);

31 
	`bzîo
((*)&
s
, (s));

32 
s
.
sö_Ámûy
 = 
AF_INET
;

33 i‡(
¥og
 < 0) {

34 
s
.
sö_p‹t
 = 
	`ht⁄s
(-
¥og
);

36 i‡(
	`böd
(
sock
, (
sockaddr
*)&
s
, (s)) < 0) {

37 
	`≥º‹
("bind");

38 
	`exô
(2);

40 i‡(
	`li°í
(
sock
, 100) < 0) {

41 
	`≥º‹
("listen");

42 
	`exô
(4);

44 i‡(
¥og
 > 0) {

45 #ifdef 
LIBTCP_VERBOSE


46 
	`Ârötf
(
°dîr
, "SîvîÖ‹à%d\n", 
	`sockp‹t
(
sock
));

48 ()
	`pm≠_un£t
((
u_l⁄g
)
¥og
, (u_long)1);

49 i‡(!
	`pm≠_£t
((
u_l⁄g
)
¥og
, (u_l⁄g)1, (u_l⁄g)
IPPROTO_TCP
,

50 ()
	`sockp‹t
(
sock
))) {

51 
	`≥º‹
("pmap_set");

52 
	`exô
(5);

55  (
sock
);

56 
	}
}

62 
	$t˝_d⁄e
(
¥og
)

64 i‡(
¥og
 > 0) {

65 
	`pm≠_un£t
((
u_l⁄g
)
¥og
, (u_long)1);

68 
	}
}

74 
	$t˝_ac˚±
(
sock
, 
rdwr
)

76 
sockaddr_ö
 
s
;

77 
√wsock
;

78 
sockÀn_t
 
«mñí
;

80 
«mñí
 = (
s
);

81 
	`bzîo
((*)&
s
, 
«mñí
);

83 
ªåy
:

84 i‡((
√wsock
 = 
	`ac˚±
(
sock
, (
sockaddr
*)&
s
, &
«mñí
)) < 0) {

85 i‡(
î∫o
 =
EINTR
)

86 
ªåy
;

87 
	`≥º‹
("accept");

88 
	`exô
(6);

90 #ifdef 
LIBTCP_VERBOSE


91 
	`Ârötf
(
°dîr
, "SîvîÇewsockÖ‹à%d\n", 
	`sockp‹t
(
√wsock
));

93 
	`sock_›timize
(
√wsock
, 
rdwr
);

94  (
√wsock
);

95 
	}
}

106 
	$t˝_c⁄√˘
(*
ho°
, 
¥og
, 
rdwr
)

108 
ho°ít
 *
h
;

109 
sockaddr_ö
 
s
;

110 
u_sh‹t
 
ßve_p‹t
;

111 
u_l⁄g
 
ßve_¥og
;

112 *
ßve_ho°
;

113 
sock
;

114 
åõs
 = 0;

116 i‡((
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) < 0) {

117 
	`≥º‹
("socket");

118 
	`exô
(1);

120 i‡(
rdwr
 & 
SOCKOPT_PID
) {

121 
p‹t
;

122 
sockaddr_ö
 
sö
;

124 i‡(!
p‹t
) {

125 
p‹t
 = ()(
	`gëpid
() << 4);

126 i‡(
p‹t
 < 1024) {

127 
p‹t
 += 1024;

131 
p‹t
++;

132 
	`bzîo
((*)&
sö
, (sin));

133 
sö
.
sö_Ámûy
 = 
AF_INET
;

134 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

135 } 
	`böd
(
sock
, (
sockaddr
*)&
sö
, (sin)) == -1);

137 #ifdef 
LIBTCP_VERBOSE


139 
sockaddr_ö
 
sö
;

141 
	`bzîo
((*)&
sö
, (sin));

142 
sö
.
sö_Ámûy
 = 
AF_INET
;

143 i‡(
	`böd
(
sock
, (
sockaddr
*)&
sö
, (sin)) < 0) {

144 
	`≥º‹
("bind");

145 
	`exô
(2);

148 
	`Ârötf
(
°dîr
, "Clõ¡Ö‹à%d\n", 
	`sockp‹t
(
sock
));

150 
	`sock_›timize
(
sock
, 
rdwr
);

151 i‡(!
h
 || 
ho°
 !
ßve_ho°
 || 
¥og
 !
ßve_¥og
) {

152 
ßve_ho°
 = 
ho°
;

155 
ßve_¥og
 = 
¥og
;

156 i‡(!(
h
 = 
	`gëho°by«me
(
ho°
))) {

157 
	`≥º‹
(
ho°
);

158 
	`exô
(2);

160 
	`bzîo
((*Ë&
s
, (s));

161 
s
.
sö_Ámûy
 = 
AF_INET
;

162 
	`bc›y
((*)
h
->
h_addr
, (*)&
s
.
sö_addr
, h->
h_Àngth
);

163 i‡(
¥og
 > 0) {

164 
ßve_p‹t
 = 
	`pm≠_gëp‹t
(&
s
, 
¥og
,

165 (
u_l⁄g
)1, 
IPPROTO_TCP
);

166 i‡(!
ßve_p‹t
) {

167 
	`≥º‹
("lib TCP: NoÖort found");

168 
	`exô
(3);

170 #ifdef 
LIBTCP_VERBOSE


171 
	`Ârötf
(
°dîr
, "SîvîÖ‹à%d\n", 
ßve_p‹t
);

173 
s
.
sö_p‹t
 = 
	`ht⁄s
(
ßve_p‹t
);

175 
s
.
sö_p‹t
 = 
	`ht⁄s
(-
¥og
);

178 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
*)&
s
, (s)) < 0) {

179 i‡(
î∫o
 =
ECONNRESET


180 || 
î∫o
 =
ECONNREFUSED


181 || 
î∫o
 =
EAGAIN
) {

182 
	`˛o£
(
sock
);

183 i‡(++
åõs
 > 10) (-1);

184  (
	`t˝_c⁄√˘
(
ho°
, 
¥og
, 
rdwr
));

186 
	`≥º‹
("connect");

187 
	`exô
(4);

189 
åõs
 = 0;

190  (
sock
);

191 
	}
}

194 
	$sock_›timize
(
sock
, 
Êags
)

196 i‡(
Êags
 & 
SOCKOPT_READ
) {

197 
sockbuf
 = 
SOCKBUF
;

199 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
sockbuf
,

201 
sockbuf
 >>= 1;

203 #ifdef 
LIBTCP_VERBOSE


204 
	`Ârötf
(
°dîr
, "sock›à%d: RCV: %dK\n", 
sock
, 
sockbuf
>>10);

207 i‡(
Êags
 & 
SOCKOPT_WRITE
) {

208 
sockbuf
 = 
SOCKBUF
;

210 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
sockbuf
,

212 
sockbuf
 >>= 1;

214 #ifdef 
LIBTCP_VERBOSE


215 
	`Ârötf
(
°dîr
, "sock›à%d: SND: %dK\n", 
sock
, 
sockbuf
>>10);

218 i‡(
Êags
 & 
SOCKOPT_REUSE
) {

219 
vÆ
 = 1;

220 i‡(
	`£tsock›t
(
sock
, 
SOL_SOCKET
,

221 
SO_REUSEADDR
, &
vÆ
, (val)) == -1) {

222 
	`≥º‹
("SO_REUSEADDR");

225 
	}
}

228 
	$sockp‹t
(
s
)

230 
sockÀn_t
 
«mñí
;

231 
sockaddr_ö
 
sö
;

233 
«mñí
 = (
sö
);

234 i‡(
	`gësock«me
(
s
, (
sockaddr
 *)&
sö
, &
«mñí
) < 0) {

235 
	`≥º‹
("getsockname");

238  (()
	`¡ohs
(
sö
.
sö_p‹t
));

239 
	}
}

	@lib_tcp.h

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<√tdb.h
>

5 
	~<¨∑/öë.h
>

7 
t˝_£rvî
(
¥og
, 
rdwr
);

8 
t˝_d⁄e
(
¥og
);

9 
t˝_ac˚±
(
sock
, 
rdwr
);

10 
t˝_c⁄√˘
(*
ho°
, 
¥og
, 
rdwr
);

11 
sock_›timize
(
sock
, 
rdwr
);

12 
sockp‹t
(
s
);

	@lib_timing.c

16 
	#_LIB


	)

17 
	~"bích.h
"

21 
	#nz
(
x
Ë((xË=0 ? 1 : (x))

	)

28 
	#MB
 (1000*1000.0)

	)

29 
	#KB
 (1000.0)

	)

31 
timevÆ
 
	g°¨t_tv
, 
	g°›_tv
;

32 
FILE
 *
	g·imög
;

33 vﬁ©ûê
uöt64
 
	gu£_ªsu…_dummy
;

34 
uöt64
 
	gôî©i⁄s
;

35 
öô_timög
();

37 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

38 
	~<sys/mm™.h
>

41 #ifdef 
RUSAGE


42 
	~<sys/ªsour˚.h
>

43 
	#SECS
(
tv
Ë—v.
tv_£c
 +Åv.
tv_u£c
 / 1000000.0)

	)

44 
	#möe
(
f
Ë()(
ru_°›
.‡- 
ru_°¨t
.f)

	)

46 
rußge
 
	gru_°¨t
, 
	gru_°›
;

49 
	$rußge
()

51 
sys
, 
u£r
, 
idÀ
;

52 
≥r
;

54 
sys
 = 
	`SECS
(
ru_°›
.
ru_°ime
Ë- SECS(
ru_°¨t
.ru_stime);

55 
u£r
 = 
	`SECS
(
ru_°›
.
ru_utime
Ë- SECS(
ru_°¨t
.ru_utime);

56 
idÀ
 = 
	`time•ít
(Ë- (
sys
 + 
u£r
);

57 
≥r
 = 
idÀ
 / 
	`time•ít
() * 100;

58 i‡(!
·imög
Ë·imög = 
°dîr
;

59 
	`Ârötf
(
·imög
, "real=%.2f sys=%.2f user=%.2f idle=%.2f stall=%.0f%% ",

60 
	`time•ít
(), 
sys
, 
u£r
, 
idÀ
, 
≥r
);

61 
	`Ârötf
(
·imög
, "rd=%d wr=%d min=%d maj=%d ctx=%d\n",

62 
	`möe
(
ru_öblock
), möe(
ru_oublock
),

63 
	`möe
(
ru_möÊt
), möe(
ru_majÊt
),

64 
	`möe
(
ru_nvcsw
Ë+ möe(
ru_nivcsw
));

65 
	}
}

70 
	$lmbích_ußge
(
¨gc
, *
¨gv
[], * 
ußge
)

72 
	`Ârötf
(
°dîr
,"Ußge: %†%s", 
¨gv
[0], 
ußge
);

73 
	`exô
(-1);

74 
	}
}

78 
	$sigchld_waô_h™dÀr
(
signo
)

80 
	`waô
(0);

81 
	`sig«l
(
SIGCHLD
, 
sigchld_waô_h™dÀr
);

82 
	}
}

84 
	gbíchmp_sigãrm_ª˚ived
;

85 
	gbíchmp_sigchld_ª˚ived
;

86 
pid_t
 
	gbíchmp_sigÆrm_pid
;

87 
	gbíchmp_sigÆrm_timeout
;

88 (*
bíchmp_sigãrm_h™dÀr
)();

89 (*
bíchmp_sigchld_h™dÀr
)();

90 (*
bíchmp_sigÆrm_h™dÀr
)();

93 
	$bíchmp_sigãrm
(
signo
)

95 
bíchmp_sigãrm_ª˚ived
 = 1;

96 
	}
}

99 
	$bíchmp_sigchld
(
signo
)

101 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

102 
bíchmp_sigchld_ª˚ived
 = 1;

103 #ifde‡
_DEBUG


104 
	`Ârötf
(
°dîr
, "benchmp_sigchld handler\n");

106 
	}
}

109 
	$bíchmp_sigÆrm
(
signo
)

111 
	`sig«l
(
SIGALRM
, 
SIG_IGN
);

112 
	`kûl
(
bíchmp_sigÆrm_pid
, 
SIGTERM
);

118 
bíchmp_sigÆrm_timeout
 = 1;

119 
	}
}

122 
bíchmp_chûd
(
bíchmp_f
 
öôülize
,

123 
bíchmp_f
 
bíchm¨k
,

124 
bíchmp_f
 
˛ónup
,

125 
chûdid
,

126 
ª•⁄£
,

127 
°¨t_sig«l
,

128 
ªsu…_sig«l
,

129 
exô_sig«l
,

130 
∑øŒñ
,

131 
ôî_t
 
ôî©i⁄s
,

132 
ª≥tôi⁄s
,

133 
íough
,

134 * 
cookõ


137 
bíchmp_∑ª¡
(
ª•⁄£
,

138 
°¨t_sig«l
,

139 
ªsu…_sig«l
,

140 
exô_sig«l
,

141 
pid_t
* 
pids
,

142 
∑øŒñ
,

143 
ôî_t
 
ôî©i⁄s
,

144 
w¨mup
,

145 
ª≥tôi⁄s
,

146 
íough


150 
sizeof_ªsu…
(
ª≥tôi⁄s
);

153 
	$bíchmp
(
bíchmp_f
 
öôülize
,

154 
bíchmp_f
 
bíchm¨k
,

155 
bíchmp_f
 
˛ónup
,

156 
íough
,

157 
∑øŒñ
,

158 
w¨mup
,

159 
ª≥tôi⁄s
,

160 * 
cookõ
)

162 
ôî_t
 
ôî©i⁄s
 = 1;

163 
i
;

164 
pid_t
 *
pids
 = 
NULL
;

165 
ª•⁄£
[2];

166 
°¨t_sig«l
[2];

167 
ªsu…_sig«l
[2];

168 
exô_sig«l
[2];

170 #ifde‡
_DEBUG


171 
	`Ârötf
(
°dîr
, "bíchmp(%p, %p, %p, %d, %d, %d, %d, %p):É¡îög\n", 
öôülize
, 
bíchm¨k
, 
˛ónup
, 
íough
, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
);

173 
íough
 = 
	`gë_íough
(enough);

174 #ifde‡
_DEBUG


175 
	`Ârötf
(
°dîr
, "\ãnough=%d\n", 
íough
);

178 i‡(
ª≥tôi⁄s
 < 0)

179 
ª≥tôi⁄s
 = (1 < 
∑øŒñ
 || 1000000 <
íough
 ? 1 : 
TRIES
);

182 
	`£âime
(0);

183 
	`ßve_n
(1);

185 i‡(
∑øŒñ
 > 1) {

187 
	`bíchmp
(
öôülize
, 
bíchm¨k
, 
˛ónup
,

188 
íough
, 1, 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
);

191 i‡(
	`gëtime
() == 0)

195 
ôî©i⁄s
 = 
	`gë_n
();

196 i‡(
íough
 < 
SHORT
) {

197 
tmp
 = ()
SHORT
 * ()
	`gë_n
();

198 
tmp
 /()
	`gëtime
();

199 
ôî©i⁄s
 = (
ôî_t
)
tmp
 + 1;

201 
	`£âime
(0);

202 
	`ßve_n
(1);

206 i‡(
	`pùe
(
ª•⁄£
) < 0

207 || 
	`pùe
(
°¨t_sig«l
) < 0

208 || 
	`pùe
(
ªsu…_sig«l
) < 0

209 || 
	`pùe
(
exô_sig«l
) < 0) {

210 #ifde‡
_DEBUG


211 
	`Ârötf
(
°dîr
, "BENCHMP: CouldÇot create controlÖipes\n");

217 
bíchmp_sigchld_ª˚ived
 = 0;

218 
bíchmp_sigãrm_ª˚ived
 = 0;

219 
bíchmp_sigãrm_h™dÀr
 = 
	`sig«l
(
SIGTERM
, 
bíchmp_sigãrm
);

220 
bíchmp_sigchld_h™dÀr
 = 
	`sig«l
(
SIGCHLD
, 
bíchmp_sigchld
);

221 
pids
 = (
pid_t
*)
	`mÆloc
(
∑øŒñ
 * (pid_t));

222 i‡(!
pids
) ;

223 
	`bzîo
((*)
pids
, 
∑øŒñ
 * (
pid_t
));

225 
i
 = 0; i < 
∑øŒñ
; ++i) {

226 i‡(
bíchmp_sigãrm_ª˚ived
)

227 
îr‹_exô
;

228 #ifde‡
_DEBUG


229 
	`Ârötf
(
°dîr
, "bíchmp(%p, %p, %p, %d, %d, %d, %d, %p): cª©ög chûd %d\n", 
öôülize
, 
bíchm¨k
, 
˛ónup
, 
íough
, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
, 
i
);

231 
pids
[
i
] = 
	`f‹k
()) {

234 #ifde‡
_DEBUG


235 
	`Ârötf
(
°dîr
, "BENCHMP: fork() failed!\n");

237 
îr‹_exô
;

240 
	`˛o£
(
ª•⁄£
[0]);

241 
	`˛o£
(
°¨t_sig«l
[1]);

242 
	`˛o£
(
ªsu…_sig«l
[1]);

243 
	`˛o£
(
exô_sig«l
[1]);

244 
	`h™dÀ_scheduÀr
(
i
, 0, 0);

245 
	`bíchmp_chûd
(
öôülize
,

246 
bíchm¨k
,

247 
˛ónup
,

248 
i
,

249 
ª•⁄£
[1],

250 
°¨t_sig«l
[0],

251 
ªsu…_sig«l
[0],

252 
exô_sig«l
[0],

253 
íough
,

254 
ôî©i⁄s
,

255 
∑øŒñ
,

256 
ª≥tôi⁄s
,

257 
cookõ


259 
	`exô
(0);

264 
	`˛o£
(
ª•⁄£
[1]);

265 
	`˛o£
(
°¨t_sig«l
[0]);

266 
	`˛o£
(
ªsu…_sig«l
[0]);

267 
	`˛o£
(
exô_sig«l
[0]);

268 
	`bíchmp_∑ª¡
(
ª•⁄£
[0],

269 
°¨t_sig«l
[1],

270 
ªsu…_sig«l
[1],

271 
exô_sig«l
[1],

272 
pids
,

273 
∑øŒñ
,

274 
ôî©i⁄s
,

275 
w¨mup
,

276 
ª≥tôi⁄s
,

277 
íough


279 
˛ónup_exô
;

281 
îr‹_exô
:

283 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

284 --
i
 >= 0) {

285 
	`kûl
(
pids
[
i
], 
SIGTERM
);

286 
	`waôpid
(
pids
[
i
], 
NULL
, 0);

289 
˛ónup_exô
:

302 
bíchmp_sigÆrm_timeout
 = ()((2 * 
íough
)/1000000) + 2;

303 i‡(
bíchmp_sigÆrm_timeout
 < 5)

304 
bíchmp_sigÆrm_timeout
 = 5;

305 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

306 
i
-- > 0) {

308 
bíchmp_sigÆrm_pid
 = 
pids
[
i
];

309 
bíchmp_sigÆrm_h™dÀr
 = 
	`sig«l
(
SIGALRM
, 
bíchmp_sigÆrm
);

310 
	`Æ¨m
(
bíchmp_sigÆrm_timeout
);

312 
	`waôpid
(
pids
[
i
], 
NULL
, 0);

314 
	`Æ¨m
(0);

315 
	`sig«l
(
SIGALRM
, 
bíchmp_sigÆrm_h™dÀr
);

318 i‡(
pids
Ë
	`‰ì
(pids);

319 #ifde‡
_DEBUG


320 
	`Ârötf
(
°dîr
, "bíchmp(0x%x, 0x%x, 0x%x, %d, %d, 0x%x):Éxôög\n", ()
öôülize
, ()
bíchm¨k
, ()
˛ónup
, 
íough
, 
∑øŒñ
, ()
cookõ
);

322 
	}
}

325 
	$bíchmp_∑ª¡
–
ª•⁄£
,

326 
°¨t_sig«l
,

327 
ªsu…_sig«l
,

328 
exô_sig«l
,

329 
pid_t
* 
pids
,

330 
∑øŒñ
,

331 
ôî_t
 
ôî©i⁄s
,

332 
w¨mup
,

333 
ª≥tôi⁄s
,

334 
íough


337 
i
, 
j
;

338 
byãs_ªad
;

339 
ªsu…_t
* 
ªsu…s
 = 
NULL
;

340 
ªsu…_t
* 
mîged_ªsu…s
 = 
NULL
;

341 * 
sig«ls
 = 
NULL
;

342 * 
buf
;

343 
fd_£t
 
fds_ªad
, 
fds_îr‹
;

344 
timevÆ
 
timeout
;

346 i‡(
bíchmp_sigchld_ª˚ived
 || 
bíchmp_sigãrm_ª˚ived
) {

347 #ifde‡
_DEBUG


348 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡:É¡îög, bíchmp_sigchld_ª˚ived=%d\n", 
bíchmp_sigchld_ª˚ived
);

350 
îr‹_exô
;

353 
ªsu…s
 = (
ªsu…_t
*)
	`mÆloc
(
	`sizeof_ªsu…
(
ª≥tôi⁄s
));

354 
mîged_ªsu…s
 = (
ªsu…_t
*)
	`mÆloc
(
	`sizeof_ªsu…
(
∑øŒñ
 * 
ª≥tôi⁄s
));

355 
sig«ls
 = (*)
	`mÆloc
(
∑øŒñ
 * ());

356 i‡(!
ªsu…s
 || !
mîged_ªsu…s
 || !
sig«ls
) ;

359 
i
 = 0; i < 
∑øŒñ
 * (); i +
byãs_ªad
) {

360 
byãs_ªad
 = 0;

361 
	`FD_ZERO
(&
fds_ªad
);

362 
	`FD_ZERO
(&
fds_îr‹
);

363 
	`FD_SET
(
ª•⁄£
, &
fds_ªad
);

364 
	`FD_SET
(
ª•⁄£
, &
fds_îr‹
);

366 
timeout
.
tv_£c
 = 1;

367 
timeout
.
tv_u£c
 = 0;

368 
	`£À˘
(
ª•⁄£
+1, &
fds_ªad
, 
NULL
, &
fds_îr‹
, &
timeout
);

369 i‡(
bíchmp_sigchld_ª˚ived


370 || 
bíchmp_sigãrm_ª˚ived


371 || 
	`FD_ISSET
(
ª•⁄£
, &
fds_îr‹
))

373 #ifde‡
_DEBUG


374 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡:Ñódy, bíchmp_sigchld_ª˚ived=%d\n", 
bíchmp_sigchld_ª˚ived
);

376 
îr‹_exô
;

378 i‡(!
	`FD_ISSET
(
ª•⁄£
, &
fds_ªad
)) {

382 
byãs_ªad
 = 
	`ªad
(
ª•⁄£
, 
sig«ls
, 
∑øŒñ
 * (Ë- 
i
);

383 i‡(
byãs_ªad
 < 0) {

384 #ifde‡
_DEBUG


385 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡:Ñódy, byãs_ªad=%d, %s\n", 
byãs_ªad
, 
	`°ªº‹
(
î∫o
));

387 
îr‹_exô
;

392 i‡(
w¨mup
 > 0) {

393 
timevÆ
 
dñay
;

394 
dñay
.
tv_£c
 = 
w¨mup
 / 1000000;

395 
dñay
.
tv_u£c
 = 
w¨mup
 % 1000000;

397 
	`£À˘
(0, 
NULL
, NULL, NULL, &
dñay
);

401 
	`wrôe
(
°¨t_sig«l
, 
sig«ls
, 
∑øŒñ
 * ());

404 
i
 = 0; i < 
∑øŒñ
 * (); i +
byãs_ªad
) {

405 
byãs_ªad
 = 0;

406 
	`FD_ZERO
(&
fds_ªad
);

407 
	`FD_ZERO
(&
fds_îr‹
);

408 
	`FD_SET
(
ª•⁄£
, &
fds_ªad
);

409 
	`FD_SET
(
ª•⁄£
, &
fds_îr‹
);

411 
timeout
.
tv_£c
 = 1;

412 
timeout
.
tv_u£c
 = 0;

413 
	`£À˘
(
ª•⁄£
+1, &
fds_ªad
, 
NULL
, &
fds_îr‹
, &
timeout
);

414 i‡(
bíchmp_sigchld_ª˚ived


415 || 
bíchmp_sigãrm_ª˚ived


416 || 
	`FD_ISSET
(
ª•⁄£
, &
fds_îr‹
))

418 #ifde‡
_DEBUG


419 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡: d⁄e, bíchmp_chûd_dõd=%d\n", 
bíchmp_sigchld_ª˚ived
);

421 
îr‹_exô
;

423 i‡(!
	`FD_ISSET
(
ª•⁄£
, &
fds_ªad
)) {

427 
byãs_ªad
 = 
	`ªad
(
ª•⁄£
, 
sig«ls
, 
∑øŒñ
 * (Ë- 
i
);

428 i‡(
byãs_ªad
 < 0) {

429 #ifde‡
_DEBUG


430 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡: d⁄e, byãs_ªad=%d, %s\n", 
byãs_ªad
, 
	`°ªº‹
(
î∫o
));

432 
îr‹_exô
;

437 
	`ö£πöô
(
mîged_ªsu…s
);

438 
i
 = 0; i < 
∑øŒñ
; ++i) {

439 
n
 = 
	`sizeof_ªsu…
(
ª≥tôi⁄s
);

440 
buf
 = (*)
ªsu…s
;

442 
	`FD_ZERO
(&
fds_ªad
);

443 
	`FD_ZERO
(&
fds_îr‹
);

446 
	`wrôe
(
ªsu…_sig«l
, 
buf
, ());

448 ; 
n
 > 0;Ç -
byãs_ªad
, 
buf
 += bytes_read) {

449 
byãs_ªad
 = 0;

450 
	`FD_SET
(
ª•⁄£
, &
fds_ªad
);

451 
	`FD_SET
(
ª•⁄£
, &
fds_îr‹
);

453 
timeout
.
tv_£c
 = 1;

454 
timeout
.
tv_u£c
 = 0;

455 
	`£À˘
(
ª•⁄£
+1, &
fds_ªad
, 
NULL
, &
fds_îr‹
, &
timeout
);

456 i‡(
bíchmp_sigchld_ª˚ived


457 || 
bíchmp_sigãrm_ª˚ived


458 || 
	`FD_ISSET
(
ª•⁄£
, &
fds_îr‹
))

460 #ifde‡
_DEBUG


461 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡:Ñesu…s, bíchmp_sigchld_ª˚ived=%d\n", 
bíchmp_sigchld_ª˚ived
);

463 
îr‹_exô
;

465 i‡(!
	`FD_ISSET
(
ª•⁄£
, &
fds_ªad
)) {

469 
byãs_ªad
 = 
	`ªad
(
ª•⁄£
, 
buf
, 
n
);

470 i‡(
byãs_ªad
 < 0) {

471 #ifde‡
_DEBUG


472 
	`Ârötf
(
°dîr
, "bíchmp_∑ª¡:Ñesu…s, byãs_ªad=%d, %s\n", 
byãs_ªad
, 
	`°ªº‹
(
î∫o
));

474 
îr‹_exô
;

477 
j
 = 0; j < 
ªsu…s
->
N
; ++j) {

478 
	`ö£πs‹t
(
ªsu…s
->
v
[
j
].
u
,

479 
ªsu…s
->
v
[
j
].
n
, 
mîged_ªsu…s
);

484 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

487 
	`wrôe
(
exô_sig«l
, 
ªsu…s
, 
∑øŒñ
 * ());

490 
	`£t_ªsu…s
(
mîged_ªsu…s
);

492 
˛ónup_exô
;

493 
îr‹_exô
:

494 #ifde‡
_DEBUG


495 
	`Ârötf
(
°dîr
, "benchmp_parent:Érror_exit!\n");

497 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

498 
i
 = 0; i < 
∑øŒñ
; ++i) {

499 
	`kûl
(
pids
[
i
], 
SIGTERM
);

500 
	`waôpid
(
pids
[
i
], 
NULL
, 0);

502 
	`‰ì
(
mîged_ªsu…s
);

503 
˛ónup_exô
:

504 
	`˛o£
(
ª•⁄£
);

505 
	`˛o£
(
°¨t_sig«l
);

506 
	`˛o£
(
ªsu…_sig«l
);

507 
	`˛o£
(
exô_sig«l
);

509 i‡(
ªsu…s
Ë
	`‰ì
(results);

510 i‡(
sig«ls
Ë
	`‰ì
(signals);

511 
	}
}

514 íum { 
	mw¨mup
, 
	mtimög_öãrvÆ
, 
	mcoﬁdown
 } 
	tbíchmp_°©e
;

517 
bíchmp_°©e
 
	m°©e
;

518 
bíchmp_f
 
	möôülize
;

519 
bíchmp_f
 
	mbíchm¨k
;

520 
bíchmp_f
 
	m˛ónup
;

521 
	mchûdid
;

522 
	mª•⁄£
;

523 
	m°¨t_sig«l
;

524 
	mªsu…_sig«l
;

525 
	mexô_sig«l
;

526 
	míough
;

527 
ôî_t
 
	môî©i⁄s
;

528 
	m∑øŒñ
;

529 
	mª≥tôi⁄s
;

530 * 
	mcookõ
;

531 
ôî_t
 
	môî©i⁄s_b©ch
;

532 
	m√ed_w¨mup
;

533 
	mi
;

534 
	mr_size
;

535 
ªsu…_t
* 
	mr
;

536 } 
	tbíchmp_chûd_°©e
;

538 
bíchmp_chûd_°©e
 
	g_bíchmp_chûd_°©e
;

541 
	$bíchmp_chûdid
()

543  
_bíchmp_chûd_°©e
.
chûdid
;

544 
	}
}

547 
	$bíchmp_chûd_sigchld
(
signo
)

549 #ifde‡
_DEBUG


550 
	`Ârötf
(
°dîr
, "benchmp_child_sigchld handler\n");

552 i‡(
_bíchmp_chûd_°©e
.
˛ónup
) {

553 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

554 (*
_bíchmp_chûd_°©e
.
˛ónup
)(0, &_benchmp_child_state);

556 
	`exô
(1);

557 
	}
}

560 
	$bíchmp_chûd_sigãrm
(
signo
)

562 
	`sig«l
(
SIGTERM
, 
SIG_IGN
);

563 i‡(
_bíchmp_chûd_°©e
.
˛ónup
) {

564 (*
sig
)(Ë
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

565 i‡(
sig
 !
bíchmp_chûd_sigchld
 && sig !
SIG_DFL
) {

566 
	`sig«l
(
SIGCHLD
, 
sig
);

568 (*
_bíchmp_chûd_°©e
.
˛ónup
)(0, &_benchmp_child_state);

570 
	`exô
(0);

571 
	}
}

574 
	$bíchmp_gë°©e
()

576  ((*)&
_bíchmp_chûd_°©e
);

577 
	}
}

580 
	$bíchmp_chûd
(
bíchmp_f
 
öôülize
,

581 
bíchmp_f
 
bíchm¨k
,

582 
bíchmp_f
 
˛ónup
,

583 
chûdid
,

584 
ª•⁄£
,

585 
°¨t_sig«l
,

586 
ªsu…_sig«l
,

587 
exô_sig«l
,

588 
íough
,

589 
ôî_t
 
ôî©i⁄s
,

590 
∑øŒñ
,

591 
ª≥tôi⁄s
,

592 * 
cookõ


595 
ôî_t
 
ôî©i⁄s_b©ch
 = (
∑øŒñ
 > 1Ë? 
	`gë_n
() : 1;

597 
_bíchmp_chûd_°©e
.
°©e
 = 
w¨mup
;

598 
_bíchmp_chûd_°©e
.
öôülize
 = initialize;

599 
_bíchmp_chûd_°©e
.
bíchm¨k
 = benchmark;

600 
_bíchmp_chûd_°©e
.
˛ónup
 = cleanup;

601 
_bíchmp_chûd_°©e
.
chûdid
 = childid;

602 
_bíchmp_chûd_°©e
.
ª•⁄£
 =Ñesponse;

603 
_bíchmp_chûd_°©e
.
°¨t_sig«l
 = start_signal;

604 
_bíchmp_chûd_°©e
.
ªsu…_sig«l
 =Ñesult_signal;

605 
_bíchmp_chûd_°©e
.
exô_sig«l
 =Éxit_signal;

606 
_bíchmp_chûd_°©e
.
íough
 =Énough;

607 
_bíchmp_chûd_°©e
.
ôî©i⁄s
 = iterations;

608 
_bíchmp_chûd_°©e
.
ôî©i⁄s_b©ch
 = iterations_batch;

609 
_bíchmp_chûd_°©e
.
∑øŒñ
 =Öarallel;

610 
_bíchmp_chûd_°©e
.
ª≥tôi⁄s
 =Ñepetitions;

611 
_bíchmp_chûd_°©e
.
cookõ
 = cookie;

612 
_bíchmp_chûd_°©e
.
√ed_w¨mup
 = 1;

613 
_bíchmp_chûd_°©e
.
i
 = 0;

614 
_bíchmp_chûd_°©e
.
r_size
 = 
	`sizeof_ªsu…
(
ª≥tôi⁄s
);

615 
_bíchmp_chûd_°©e
.
r
 = (
ªsu…_t
*)
	`mÆloc
(_bíchmp_chûd_°©e.
r_size
);

617 i‡(!
_bíchmp_chûd_°©e
.
r
) ;

618 
	`ö£πöô
(
_bíchmp_chûd_°©e
.
r
);

619 
	`£t_ªsu…s
(
_bíchmp_chûd_°©e
.
r
);

621 i‡(
bíchmp_sigchld_h™dÀr
 !
SIG_DFL
) {

622 
	`sig«l
(
SIGCHLD
, 
bíchmp_sigchld_h™dÀr
);

624 
	`sig«l
(
SIGCHLD
, 
bíchmp_chûd_sigchld
);

627 i‡(
öôülize
)

628 (*
öôülize
)(0, 
cookõ
);

630 i‡(
bíchmp_sigãrm_h™dÀr
 !
SIG_DFL
) {

631 
	`sig«l
(
SIGTERM
, 
bíchmp_sigãrm_h™dÀr
);

633 
	`sig«l
(
SIGTERM
, 
bíchmp_chûd_sigãrm
);

635 i‡(
bíchmp_sigãrm_ª˚ived
)

636 
	`bíchmp_chûd_sigãrm
(
SIGTERM
);

639 
	`ö£πöô
(
_bíchmp_chûd_°©e
.
r
);

642 (*
bíchm¨k
)(
	`bíchmp_öãrvÆ
(&
_bíchmp_chûd_°©e
), 
cookõ
);

644 
	}
}

646 
ôî_t


647 
	$bíchmp_öãrvÆ
(* 
_°©e
)

649 
c
;

650 
ôî_t
 
ôî©i⁄s
;

651 
ªsu…
;

652 
fd_£t
 
fds
;

653 
timevÆ
 
timeout
;

654 
bíchmp_chûd_°©e
* 
°©e
 = (bíchmp_chûd_°©e*)
_°©e
;

656 
ôî©i⁄s
 = (
°©e
->°©ê=
timög_öãrvÆ
 ? sèã->ôî©i⁄†: sèã->
ôî©i⁄s_b©ch
);

658 i‡(
°©e
->
√ed_w¨mup
) {

660 
ªsu…
 = 
°©e
->
íough
;

662 
ªsu…
 = 
	`°›
(0,0);

663 i‡(
°©e
->
˛ónup
) {

664 i‡(
bíchmp_sigchld_h™dÀr
 =
SIG_DFL
)

665 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

666 (*
°©e
->
˛ónup
)(
ôî©i⁄s
, sèã->
cookõ
);

668 
	`ßve_n
(
°©e
->
ôî©i⁄s
);

669 
ªsu…
 -
	`t_ovîhód
(Ë+ 
	`gë_n
(Ë* 
	`l_ovîhód
();

670 
	`£âime
(
ªsu…
 >0. ? (
uöt64
)result : 0.);

674 i‡(
	`gëµid
(Ë=1 && 
°©e
->
˛ónup
) {

675 i‡(
bíchmp_sigchld_h™dÀr
 =
SIG_DFL
)

676 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

677 (*
°©e
->
˛ónup
)(0, sèã->
cookõ
);

678 
	`exô
(0);

681 
timeout
.
tv_£c
 = 0;

682 
timeout
.
tv_u£c
 = 0;

683 
	`FD_ZERO
(&
fds
);

685 
°©e
->state) {

686 
w¨mup
:

687 
ôî©i⁄s
 = 
°©e
->
ôî©i⁄s_b©ch
;

688 
	`FD_SET
(
°©e
->
°¨t_sig«l
, &
fds
);

689 
	`£À˘
(
°©e
->
°¨t_sig«l
+1, &
fds
, 
NULL
,

690 
NULL
, &
timeout
);

691 i‡(
	`FD_ISSET
(
°©e
->
°¨t_sig«l
, &
fds
)) {

692 
°©e
->°©ê
timög_öãrvÆ
;

693 
	`ªad
(
°©e
->
°¨t_sig«l
, &
c
, ());

694 
ôî©i⁄s
 = 
°©e
->iterations;

696 i‡(
°©e
->
√ed_w¨mup
) {

697 
°©e
->
√ed_w¨mup
 = 0;

699 
	`wrôe
(
°©e
->
ª•⁄£
, &
c
, ());

702 
timög_öãrvÆ
:

703 
ôî©i⁄s
 = 
°©e
->iterations;

704 i‡(
°©e
->
∑øŒñ
 > 1 || 
ªsu…
 > 0.95 * sèã->
íough
) {

705 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), 
	`gë_ªsu…s
());

706 
°©e
->
i
++;

708 i‡(
°©e
->
i
 >°©e->
ª≥tôi⁄s
) {

709 
°©e
->°©ê
coﬁdown
;

712 i‡(
°©e
->
∑øŒñ
 == 1

713 && (
ªsu…
 < 0.99 * 
°©e
->
íough
 ||Ñesult > 1.2 * state->enough)) {

714 i‡(
ªsu…
 > 150.) {

715 
tmp
 = 
ôî©i⁄s
 / 
ªsu…
;

716 
tmp
 *1.1 * 
°©e
->
íough
;

717 
ôî©i⁄s
 = (
ôî_t
)(
tmp
 + 1);

719 
ôî©i⁄s
 <<= 3;

720 i‡(
ôî©i⁄s
 > 1<<27

721 || (
ªsu…
 < 0. && 
ôî©i⁄s
 > 1<<20)) {

722 
°©e
->°©ê
coﬁdown
;

726 
°©e
->
ôî©i⁄s
 = iterations;

727 i‡(
°©e
->°©ê=
coﬁdown
) {

729 
	`wrôe
(
°©e
->
ª•⁄£
, (*)&
c
, ());

730 
ôî©i⁄s
 = 
°©e
->
ôî©i⁄s_b©ch
;

733 
coﬁdown
:

734 
ôî©i⁄s
 = 
°©e
->
ôî©i⁄s_b©ch
;

735 
	`FD_SET
(
°©e
->
ªsu…_sig«l
, &
fds
);

736 
	`£À˘
(
°©e
->
ªsu…_sig«l
+1, &
fds
, 
NULL
, NULL, &
timeout
);

737 i‡(
	`FD_ISSET
(
°©e
->
ªsu…_sig«l
, &
fds
)) {

744 
	`ªad
(
°©e
->
ªsu…_sig«l
, (*)&
c
, ());

745 
	`wrôe
(
°©e
->
ª•⁄£
, (*)
	`gë_ªsu…s
(), sèã->
r_size
);

746 i‡(
°©e
->
˛ónup
) {

747 i‡(
bíchmp_sigchld_h™dÀr
 =
SIG_DFL
)

748 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

749 (*
°©e
->
˛ónup
)(0, sèã->
cookõ
);

753 
	`ªad
(
°©e
->
exô_sig«l
, (*)&
c
, ());

754 
	`exô
(0);

757 i‡(
°©e
->
öôülize
) {

758 (*
°©e
->
öôülize
)(
ôî©i⁄s
, sèã->
cookõ
);

760 
	`°¨t
(0);

761  (
ôî©i⁄s
);

762 
	}
}

769 
	$timög
(
FILE
 *
out
)

771 
·imög
 = 
out
;

772 
	}
}

778 
	$°¨t
(
timevÆ
 *
tv
)

780 i‡(
tv
 =
NULL
) {

781 
tv
 = &
°¨t_tv
;

783 #ifdef 
RUSAGE


784 
	`gërußge
(
RUSAGE_SELF
, &
ru_°¨t
);

786 (Ë
	`gëtimeofday
(
tv
, (
timez⁄e
 *) 0);

787 
	}
}

792 
uöt64


793 
	$°›
(
timevÆ
 *
begö
, timevÆ *
íd
)

795 i‡(
íd
 =
NULL
) {

796 
íd
 = &
°›_tv
;

798 (Ë
	`gëtimeofday
(
íd
, (
timez⁄e
 *) 0);

799 #ifdef 
RUSAGE


800 
	`gërußge
(
RUSAGE_SELF
, &
ru_°›
);

803 i‡(
begö
 =
NULL
) {

804 
begö
 = &
°¨t_tv
;

806  (
	`tvdñè
(
begö
, 
íd
));

807 
	}
}

809 
uöt64


810 
	$now
()

812 
timevÆ
 
t
;

813 
uöt64
 
m
;

815 (Ë
	`gëtimeofday
(&
t
, (
timez⁄e
 *) 0);

816 
m
 = 
t
.
tv_£c
;

817 
m
 *= 1000000;

818 
m
 +
t
.
tv_u£c
;

819  (
m
);

820 
	}
}

823 
	$Now
()

825 
timevÆ
 
t
;

827 (Ë
	`gëtimeofday
(&
t
, (
timez⁄e
 *) 0);

828  (
t
.
tv_£c
 * 1000000.0 +Å.
tv_u£c
);

829 
	}
}

831 
uöt64


832 
	$dñè
()

834 
timevÆ
 
œ°
;

835 
timevÆ
 
t
;

836 
timevÆ
 
diff
;

837 
uöt64
 
m
;

839 (Ë
	`gëtimeofday
(&
t
, (
timez⁄e
 *) 0);

840 i‡(
œ°
.
tv_u£c
) {

841 
	`tvsub
(&
diff
, &
t
, &
œ°
);

842 
œ°
 = 
t
;

843 
m
 = 
diff
.
tv_£c
;

844 
m
 *= 1000000;

845 
m
 +
diff
.
tv_u£c
;

846  (
m
);

848 
œ°
 = 
t
;

851 
	}
}

854 
	$Dñè
()

856 
timevÆ
 
t
;

857 
timevÆ
 
diff
;

859 (Ë
	`gëtimeofday
(&
t
, (
timez⁄e
 *) 0);

860 
	`tvsub
(&
diff
, &
t
, &
°¨t_tv
);

861  (
diff
.
tv_£c
 + diff.
tv_u£c
 / 1000000.0);

862 
	}
}

865 
	$ßve_n
(
uöt64
 
n
)

867 
ôî©i⁄s
 = 
n
;

868 
	}
}

870 
uöt64


871 
	$gë_n
()

873  (
ôî©i⁄s
);

874 
	}
}

880 
	$£âime
(
uöt64
 
u£cs
)

882 
	`bzîo
((*)&
°¨t_tv
, (start_tv));

883 
°›_tv
.
tv_£c
 = 
u£cs
 / 1000000;

884 
°›_tv
.
tv_u£c
 = 
u£cs
 % 1000000;

885 
	}
}

888 
	$b™dwidth
(
uöt64
 
byãs
, uöt64 
times
, 
vîbo£
)

890 
timevÆ
 
tdiff
;

891 
mb
, 
£cs
;

893 
	`tvsub
(&
tdiff
, &
°›_tv
, &
°¨t_tv
);

894 
£cs
 = 
tdiff
.
tv_£c
;

895 
£cs
 *= 1000000;

896 
£cs
 +
tdiff
.
tv_u£c
;

897 
£cs
 /= 1000000;

898 
£cs
 /
times
;

899 
mb
 = 
byãs
 / 
MB
;

900 i‡(!
·imög
Ë·imög = 
°dîr
;

901 i‡(
vîbo£
) {

902 (Ë
	`Ârötf
(
·imög
,

904 
mb
, 
£cs
, mb/secs);

906 i‡(
mb
 < 1) {

907 (Ë
	`Ârötf
(
·imög
, "%.6‡", 
mb
);

909 (Ë
	`Ârötf
(
·imög
, "%.2‡", 
mb
);

911 i‡(
mb
 / 
£cs
 < 1) {

912 (Ë
	`Ârötf
(
·imög
, "%.6f\n", 
mb
/
£cs
);

914 (Ë
	`Ârötf
(
·imög
, "%.2f\n", 
mb
/
£cs
);

917 
	}
}

920 
	$kb
(
uöt64
 
byãs
)

922 
timevÆ
 
td
;

923 
s
, 
bs
;

925 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

926 
s
 = 
td
.
tv_£c
 +Åd.
tv_u£c
 / 1000000.0;

927 
bs
 = 
byãs
 / 
	`nz
(
s
);

928 i‡(
s
 == 0.0) ;

929 i‡(!
·imög
Ë·imög = 
°dîr
;

930 (Ë
	`Ârötf
(
·imög
, "%.0‡KB/£c\n", 
bs
 / 
KB
);

931 
	}
}

934 
	$mb
(
uöt64
 
byãs
)

936 
timevÆ
 
td
;

937 
s
, 
bs
;

939 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

940 
s
 = 
td
.
tv_£c
 +Åd.
tv_u£c
 / 1000000.0;

941 
bs
 = 
byãs
 / 
	`nz
(
s
);

942 i‡(
s
 == 0.0) ;

943 i‡(!
·imög
Ë·imög = 
°dîr
;

944 (Ë
	`Ârötf
(
·imög
, "%.2‡MB/£c\n", 
bs
 / 
MB
);

945 
	}
}

948 
	$œãncy
(
uöt64
 
x„rs
, uöt64 
size
)

950 
timevÆ
 
td
;

951 
s
;

953 i‡(!
·imög
Ë·imög = 
°dîr
;

954 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

955 
s
 = 
td
.
tv_£c
 +Åd.
tv_u£c
 / 1000000.0;

956 i‡(
s
 == 0.0) ;

957 i‡(
x„rs
 > 1) {

958 
	`Ârötf
(
·imög
, "%d %dKB xfers in %.2f secs, ",

959 (Ë
x„rs
, (Ë(
size
 / 
KB
), 
s
);

961 
	`Ârötf
(
·imög
, "%.1fKB i¿", 
size
 / 
KB
);

963 i‡((
s
 * 1000 / 
x„rs
) > 100) {

964 
	`Ârötf
(
·imög
, "%.0f millisec%s, ",

965 
s
 * 1000 / 
x„rs
, xfers > 1 ? "/xfer" : "s");

967 
	`Ârötf
(
·imög
, "%.4f millisec%s, ",

968 
s
 * 1000 / 
x„rs
, xfers > 1 ? "/xfer" : "s");

970 i‡(((
x„rs
 * 
size
Ë/ (
MB
 * 
s
)) > 1) {

971 
	`Ârötf
(
·imög
, "%.2‡MB/£c\n", (
x„rs
 * 
size
Ë/ (
MB
 * 
s
));

973 
	`Ârötf
(
·imög
, "%.2‡KB/£c\n", (
x„rs
 * 
size
Ë/ (
KB
 * 
s
));

975 
	}
}

978 
	$c⁄ãxt
(
uöt64
 
x„rs
)

980 
timevÆ
 
td
;

981 
s
;

983 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

984 
s
 = 
td
.
tv_£c
 +Åd.
tv_u£c
 / 1000000.0;

985 i‡(
s
 == 0.0) ;

986 i‡(!
·imög
Ë·imög = 
°dîr
;

987 
	`Ârötf
(
·imög
,

989 ()
x„rs
, 
s
, s * 1000000 / xfers);

990 
	}
}

993 
	$«no
(*
s
, 
uöt64
 
n
)

995 
timevÆ
 
td
;

996 
mi¸o
;

998 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

999 
mi¸o
 = 
td
.
tv_£c
 * 1000000 +Åd.
tv_u£c
;

1000 
mi¸o
 *= 1000;

1001 i‡(
mi¸o
 == 0.0) ;

1002 i‡(!
·imög
Ë·imög = 
°dîr
;

1003 
	`Ârötf
(
·imög
, "%s: %.2‡«no£c⁄ds\n", 
s
, 
mi¸o
 / 
n
);

1004 
	}
}

1007 
	$mi¸o
(*
s
, 
uöt64
 
n
)

1009 
timevÆ
 
td
;

1010 
mi¸o
;

1012 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

1013 
mi¸o
 = 
td
.
tv_£c
 * 1000000 +Åd.
tv_u£c
;

1014 
mi¸o
 /
n
;

1015 i‡(
mi¸o
 == 0.0) ;

1016 i‡(!
·imög
Ë·imög = 
°dîr
;

1017 
	`Ârötf
(
·imög
, "%s: %.4‡mi¸o£c⁄ds\n", 
s
, 
mi¸o
);

1019 i‡(
mi¸o
 >= 100) {

1020 
	`Ârötf
(
·imög
, "%s: %.1‡mi¸o£c⁄ds\n", 
s
, 
mi¸o
);

1021 } i‡(
mi¸o
 >= 10) {

1022 
	`Ârötf
(
·imög
, "%s: %.3‡mi¸o£c⁄ds\n", 
s
, 
mi¸o
);

1024 
	`Ârötf
(
·imög
, "%s: %.4‡mi¸o£c⁄ds\n", 
s
, 
mi¸o
);

1027 
	}
}

1030 
	$mi¸omb
(
uöt64
 
sz
, uöt64 
n
)

1032 
timevÆ
 
td
;

1033 
mb
, 
mi¸o
;

1035 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

1036 
mi¸o
 = 
td
.
tv_£c
 * 1000000 +Åd.
tv_u£c
;

1037 
mi¸o
 /
n
;

1038 
mb
 = 
sz
;

1039 
mb
 /
MB
;

1040 i‡(
mi¸o
 == 0.0) ;

1041 i‡(!
·imög
Ë·imög = 
°dîr
;

1042 i‡(
mi¸o
 >= 10) {

1043 
	`Ârötf
(
·imög
, "%.6‡%.0f\n", 
mb
, 
mi¸o
);

1045 
	`Ârötf
(
·imög
, "%.6‡%.3f\n", 
mb
, 
mi¸o
);

1047 
	}
}

1050 
	$mûli
(*
s
, 
uöt64
 
n
)

1052 
timevÆ
 
td
;

1053 
uöt64
 
mûli
;

1055 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

1056 
mûli
 = 
td
.
tv_£c
 * 1000 +Åd.
tv_u£c
 / 1000;

1057 
mûli
 /
n
;

1058 i‡(
mûli
 == 0.0) ;

1059 i‡(!
·imög
Ë·imög = 
°dîr
;

1060 
	`Ârötf
(
·imög
, "%s: %d mûli£c⁄ds\n", 
s
, ()
mûli
);

1061 
	}
}

1064 
	$±ime
(
uöt64
 
n
)

1066 
timevÆ
 
td
;

1067 
s
;

1069 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

1070 
s
 = 
td
.
tv_£c
 +Åd.
tv_u£c
 / 1000000.0;

1071 i‡(
s
 == 0.0) ;

1072 i‡(!
·imög
Ë·imög = 
°dîr
;

1073 
	`Ârötf
(
·imög
,

1075 ()
n
, 
s
, s * 1000000 /Ç);

1076 
	}
}

1078 
uöt64


1079 
	$tvdñè
(
timevÆ
 *
°¨t
, timevÆ *
°›
)

1081 
timevÆ
 
td
;

1082 
uöt64
 
u£cs
;

1084 
	`tvsub
(&
td
, 
°›
, 
°¨t
);

1085 
u£cs
 = 
td
.
tv_£c
;

1086 
u£cs
 *= 1000000;

1087 
u£cs
 +
td
.
tv_u£c
;

1088  (
u£cs
);

1089 
	}
}

1092 
	$tvsub
(
timevÆ
 * 
tdiff
, timevÆ * 
t1
, timevÆ * 
t0
)

1094 
tdiff
->
tv_£c
 = 
t1
->tv_£¯- 
t0
->tv_sec;

1095 
tdiff
->
tv_u£c
 = 
t1
->tv_u£¯- 
t0
->tv_usec;

1096 i‡(
tdiff
->
tv_u£c
 < 0 &&Ådiff->
tv_£c
 > 0) {

1097 
tdiff
->
tv_£c
--;

1098 
tdiff
->
tv_u£c
 += 1000000;

1099 
	`as£π
(
tdiff
->
tv_u£c
 >= 0);

1103 i‡(
tdiff
->
tv_u£c
 < 0 || 
t1
->
tv_£c
 < 
t0
->tv_sec) {

1104 
tdiff
->
tv_£c
 = 0;

1105 
tdiff
->
tv_u£c
 = 0;

1107 
	}
}

1109 
uöt64


1110 
	$gëtime
()

1112  (
	`tvdñè
(&
°¨t_tv
, &
°›_tv
));

1113 
	}
}

1116 
	$time•ít
()

1118 
timevÆ
 
td
;

1120 
	`tvsub
(&
td
, &
°›_tv
, &
°¨t_tv
);

1121  (
td
.
tv_£c
 +Åd.
tv_u£c
 / 1000000.0);

1122 
	}
}

1124 
	gp64buf
[10][20];

1125 
	gn
;

1128 
	$p64
(
uöt64
 
big
)

1130 *
s
 = 
p64buf
[
n
++];

1132 i‡(
n
 == 10)Ç = 0;

1133 #ifde‡ 
löux


1135 *
a
 = (*)&
big
;

1137 i‡(
a
[1]) {

1138 
	`•rötf
(
s
, "0x%x%08x", 
a
[1],á[0]);

1140 
	`•rötf
(
s
, "0x%x", 
a
[0]);

1144 #ifdef 
__sgi


1145 
	`•rötf
(
s
, "0x%Œx", 
big
);

1147  (
s
);

1148 
	}
}

1151 
	$p64sz
(
uöt64
 
big
)

1153 
d
 = 
big
;

1154 *
ègs
 = " KMGTPE";

1155 
t
 = 0;

1156 *
s
 = 
p64buf
[
n
++];

1158 i‡(
n
 == 10)Ç = 0;

1159 
d
 > 512Ë
t
++, d /= 1024;

1160 i‡(
d
 == 0) {

1163 i‡(
d
 < 100) {

1164 
	`•rötf
(
s
, "%.4f%c", 
d
, 
ègs
[
t
]);

1166 
	`•rötf
(
s
, "%.2f%c", 
d
, 
ègs
[
t
]);

1168  (
s
);

1169 
	}
}

1172 
	$œ°
(*
s
)

1174 *
s
++)

1176  (
s
[-2]);

1177 
	}
}

1179 
uöt64


1180 
	$byãs
(*
s
)

1182 
uöt64
 
n
;

1184 i‡(
	`ssˇnf
(
s
, "%Œu", &
n
) < 1)

1187 
	`œ°
(
s
)) {

1188 'k': 
n
 <<= 10; ;

1189 'K': 
n
 *= 1000; ;

1190 'm': 
n
 <<= 20; ;

1191 'M': 
n
 *= 1000000; ;

1192 'g': 
n
 <<= 30; ;

1193 'G': 
n
 *= 1000000000L; ;

1196  (
n
);

1197 
	}
}

1200 
	$u£_öt
(
ªsu…
Ë{ 
u£_ªsu…_dummy
 +ªsu…; 
	}
}

1203 
	$u£_poöãr
(*
ªsu…
Ë{ 
u£_ªsu…_dummy
 +(Ïesu…; 
	}
}

1206 
	$sizeof_ªsu…
(
ª≥tôi⁄s
)

1208 i‡(
ª≥tôi⁄s
 <
TRIES
)

1209  ((
ªsu…_t
));

1210  ((
ªsu…_t
Ë+ (
ª≥tôi⁄s
 - 
TRIES
Ë* (
vÆue_t
));

1211 
	}
}

1214 
	$ö£πöô
(
ªsu…_t
 *
r
)

1216 
r
->
N
 = 0;

1217 
	}
}

1221 
	$ö£πs‹t
(
uöt64
 
u
, uöt64 
n
, 
ªsu…_t
 *
r
)

1223 
i
, 
j
;

1225 i‡(
u
 == 0) ;

1227 #ifde‡
_DEBUG


1228 
	`Ârötf
(
°dîr
, "\tö£πs‹t(%Œu, %Œu, %p)\n", 
u
, 
n
, 
r
);

1230 
i
 = 0; i < 
r
->
N
; ++i) {

1231 i‡(
u
/()
n
 > 
r
->
v
[
i
].u/()r->v[i].n) {

1232 
j
 = 
r
->
N
; j > 
i
; --j) {

1233 
r
->
v
[
j
] =Ñ->v[j - 1];

1238 
r
->
v
[
i
].
u
 = u;

1239 
r
->
v
[
i
].
n
 =Ç;

1240 
r
->
N
++;

1241 
	}
}

1243 
ªsu…_t
 
	g_ªsu…s
;

1244 
ªsu…_t
* 
	gªsu…s
 = &
_ªsu…s
;

1246 
ªsu…_t
*

1247 
	$gë_ªsu…s
()

1249  (
ªsu…s
);

1250 
	}
}

1253 
	$£t_ªsu…s
(
ªsu…_t
 *
r
)

1255 
ªsu…s
 = 
r
;

1256 
	`ßve_medün
();

1257 
	}
}

1260 
	$ßve_möimum
()

1262 i‡(
ªsu…s
->
N
 == 0) {

1263 
	`ßve_n
(1);

1264 
	`£âime
(0);

1266 
	`ßve_n
(
ªsu…s
->
v
[ªsu…s->
N
 - 1].
n
);

1267 
	`£âime
(
ªsu…s
->
v
[ªsu…s->
N
 - 1].
u
);

1269 
	}
}

1272 
	$ßve_medün
()

1274 
i
 = 
ªsu…s
->
N
 / 2;

1275 
uöt64
 
u
, 
n
;

1277 i‡(
ªsu…s
->
N
 == 0) {

1278 
n
 = 1;

1279 
u
 = 0;

1280 } i‡(
ªsu…s
->
N
 % 2) {

1281 
n
 = 
ªsu…s
->
v
[
i
].n;

1282 
u
 = 
ªsu…s
->
v
[
i
].u;

1284 
n
 = (
ªsu…s
->
v
[
i
].n +Ñesults->v[i-1].n) / 2;

1285 
u
 = (
ªsu…s
->
v
[
i
].u +Ñesults->v[i-1].u) / 2;

1287 #ifde‡
_DEBUG


1288 
	`Ârötf
(
°dîr
, "ßve_medün: N=%d,Ç=%lu, u=%lu\n", 
ªsu…s
->
N
, ()
n
, ()
u
);

1290 
	`ßve_n
(
n
); 
	`£âime
(
u
);

1291 
	}
}

1297 
	$⁄e_›
(*
p
)

1299 
	`BENCH_INNER
(
p
 = (*)*p;, 0);

1300  (
p
);

1301 
	}
}

1304 
	$two_›
(*
p
)

1306 
	`BENCH_INNER
(
p
 = (*)*p;Ö = (*)*p;, 0);

1307  (
p
);

1308 
	}
}

1310 *
	gp
 = (*)&
p
;

1311 *
	gq
 = (*)&
q
;

1314 
	$l_ovîhód
()

1316 
i
;

1317 
uöt64
 
N_ßve
, 
u_ßve
;

1318 
ovîhód
;

1319 
öôülized
 = 0;

1320 
ªsu…_t
 
⁄e
, 
two
, *
r_ßve
;

1322 
	`öô_timög
();

1323 i‡(
öôülized
Ë (
ovîhód
);

1325 
öôülized
 = 1;

1326 i‡(
	`gëív
("LOOP_O")) {

1327 
ovîhód
 = 
	`©of
(
	`gëív
("LOOP_O"));

1329 
r_ßve
 = 
	`gë_ªsu…s
(); 
N_ßve
 = 
	`gë_n
(); 
u_ßve
 = 
	`gëtime
();

1330 
	`ö£πöô
(&
⁄e
);

1331 
	`ö£πöô
(&
two
);

1332 
i
 = 0; i < 
TRIES
; ++i) {

1333 
	`u£_poöãr
((*)
	`⁄e_›
(
p
));

1334 i‡(
	`gëtime
(Ë> 
	`t_ovîhód
())

1335 
	`ö£πs‹t
(
	`gëtime
(Ë- 
	`t_ovîhód
(), 
	`gë_n
(), &
⁄e
);

1336 
	`u£_poöãr
((*)
	`two_›
(
p
));

1337 i‡(
	`gëtime
(Ë> 
	`t_ovîhód
())

1338 
	`ö£πs‹t
(
	`gëtime
(Ë- 
	`t_ovîhód
(), 
	`gë_n
(), &
two
);

1345 
	`£t_ªsu…s
(&
⁄e
);

1346 
	`ßve_möimum
();

1347 
ovîhód
 = 2. * 
	`gëtime
(Ë/ ()
	`gë_n
();

1349 
	`£t_ªsu…s
(&
two
);

1350 
	`ßve_möimum
();

1351 
ovîhód
 -
	`gëtime
(Ë/ ()
	`gë_n
();

1353 i‡(
ovîhód
 < 0.) overhead = 0.;

1355 
	`£t_ªsu…s
(
r_ßve
); 
	`ßve_n
(
N_ßve
); 
	`£âime
(
u_ßve
);

1357  (
ovîhód
);

1358 
	}
}

1363 
uöt64


1364 
	$t_ovîhód
()

1366 
uöt64
 
N_ßve
, 
u_ßve
;

1367 
öôülized
 = 0;

1368 
uöt64
 
ovîhód
 = 0;

1369 
timevÆ
 
tv
;

1370 
ªsu…_t
 *
r_ßve
;

1372 
	`öô_timög
();

1373 i‡(
öôülized
Ë (
ovîhód
);

1375 
öôülized
 = 1;

1376 i‡(
	`gëív
("TIMING_O")) {

1377 
ovîhód
 = 
	`©of
(
	`gëív
("TIMING_O"));

1378 } i‡(
	`gë_íough
(0) <= 50000) {

1380 
i
;

1381 
ªsu…_t
 
r
;

1383 
r_ßve
 = 
	`gë_ªsu…s
(); 
N_ßve
 = 
	`gë_n
(); 
u_ßve
 = 
	`gëtime
();

1384 
	`ö£πöô
(&
r
);

1385 
i
 = 0; i < 
TRIES
; ++i) {

1386 
	`BENCH_INNER
(
	`gëtimeofday
(&
tv
, 0), 0);

1387 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
r
);

1389 
	`£t_ªsu…s
(&
r
);

1390 
	`ßve_möimum
();

1391 
ovîhód
 = 
	`gëtime
(Ë/ 
	`gë_n
();

1393 
	`£t_ªsu…s
(
r_ßve
); 
	`ßve_n
(
N_ßve
); 
	`£âime
(
u_ßve
);

1395  (
ovîhód
);

1396 
	}
}

1403 
	gl⁄g_íough
;

1404 
compuã_íough
();

1407 
	$gë_íough
(
e
)

1409 
	`öô_timög
();

1410  (
l⁄g_íough
 > 
e
 ?Üong_enough :É);

1411 
	}
}

1415 
	$öô_timög
()

1417 
d⁄e
 = 0;

1419 i‡(
d⁄e
) ;

1420 
d⁄e
 = 1;

1421 
l⁄g_íough
 = 
	`compuã_íough
();

1422 
	`t_ovîhód
();

1423 
	`l_ovîhód
();

1424 
	}
}

1426 
	tTYPE
;

1428 
TYPE
 **

1429 
	$íough_duøti⁄
(
N
, 
TYPE
 ** 
p
)

1431 
	#ENOUGH_DURATION_TEN
(
⁄e
Ë⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê⁄ê
	)
one

1432 
N
-- > 0) {

1433 
	`ENOUGH_DURATION_TEN
(
p
 = (
TYPE
 **) *p;);

1435  (
p
);

1436 
	}
}

1438 
uöt64


1439 
	$duøti⁄
(
N
)

1441 
uöt64
 
u£cs
;

1442 
TYPE
 *
x
 = (TYPE *)&x;

1443 
TYPE
 **
p
 = (TYPE **)&
x
;

1445 
	`°¨t
(0);

1446 
p
 = 
	`íough_duøti⁄
(
N
,Ö);

1447 
u£cs
 = 
	`°›
(0, 0);

1448 
	`u£_poöãr
((*)
p
);

1449  (
u£cs
);

1450 
	}
}

1455 
uöt64


1456 
	$time_N
(
ôî_t
 
N
)

1458 
i
;

1459 
uöt64
 
u£cs
;

1460 
ªsu…_t
 
r
, *
r_ßve
;

1462 
r_ßve
 = 
	`gë_ªsu…s
();

1463 
	`ö£πöô
(&
r
);

1464 
i
 = 1; i < 
TRIES
; ++i) {

1465 
u£cs
 = 
	`duøti⁄
(
N
);

1466 
	`ö£πs‹t
(
u£cs
, 
N
, &
r
);

1468 
	`£t_ªsu…s
(&
r
);

1469 
	`ßve_möimum
();

1470 
u£cs
 = 
	`gëtime
();

1471 
	`£t_ªsu…s
(
r_ßve
);

1472  (
u£cs
);

1473 
	}
}

1478 
ôî_t


1479 
	$föd_N
(
íough
)

1481 
åõs
;

1482 
ôî_t
 
N
 = 10000;

1483 
uöt64
 
u£cs
 = 0;

1485 i‡(!
u£cs
Ëu£c†
	`time_N
(
N
);

1487 
åõs
 = 0;Åries < 10; ++tries) {

1488 i‡(0.98 * 
íough
 < 
u£cs
 && usecs < 1.02 *Énough)

1489  (
N
);

1490 i‡(
u£cs
 < 1000)

1491 
N
 *= 10;

1493 
n
 = 
N
;

1495 
n
 /
u£cs
;

1496 
n
 *
íough
;

1497 
N
 = 
n
 + 1;

1499 
u£cs
 = 
	`time_N
(
N
);

1502 
	}
}

1507 
	gã°_poöts
[] = {1.015, 1.02, 1.035};

1509 
	$ã°_time
(
íough
)

1511 
i
;

1512 
ôî_t
 
N
;

1513 
uöt64
 
u£cs
, 
ex≥˘ed
, 
ba£löe
, 
diff
;

1515 i‡((
N
 = 
	`föd_N
(
íough
)) == 0)

1518 
ba£löe
 = 
	`time_N
(
N
);

1520 
i
 = 0; i < (
ã°_poöts
) / (); ++i) {

1521 
u£cs
 = 
	`time_N
(()((Ë
N
 * 
ã°_poöts
[
i
]));

1522 
ex≥˘ed
 = (
uöt64
)(()
ba£löe
 * 
ã°_poöts
[
i
]);

1523 
diff
 = 
ex≥˘ed
 > 
u£cs
 ?Éxpected - usecs : usecs -Éxpected;

1524 i‡(
diff
 / ()
ex≥˘ed
 > 0.0025)

1528 
	}
}

1534 
	gpossibûôõs
[] = { 5000, 10000, 50000, 100000 };

1536 
	$compuã_íough
()

1538 
i
;

1540 i‡(
	`gëív
("ENOUGH")) {

1541  (
	`©oi
(
	`gëív
("ENOUGH")));

1543 
i
 = 0; i < (
possibûôõs
) / (); ++i) {

1544 i‡(
	`ã°_time
(
possibûôõs
[
i
]))

1545  (
possibûôõs
[
i
]);

1552  (
SHORT
);

1553 
	}
}

1559 
	$m‹efds
()

1561 #ifdef 
RLIMIT_NOFILE


1562 
æimô
 
r
;

1564 
	`gëæimô
(
RLIMIT_NOFILE
, &
r
);

1565 
r
.
æim_cur
 =Ñ.
æim_max
;

1566 
	`£ålimô
(
RLIMIT_NOFILE
, &
r
);

1568 
	}
}

1574 
	$bªad
(* 
buf
, 
nbyãs
)

1576 
sum
 = 0;

1577 *
p
, *
√xt
;

1578 *
íd
;

1580 
p
 = (*)
buf
;

1581 
íd
 = (*)
buf
 + 
nbyãs
;

1582 
√xt
 = 
p
 + 128; (*Íexà<(*)
íd
;Ö =Çext,Çext += 128) {

1583 
sum
 +=

1584 
p
[0]+p[1]+p[2]+p[3]+p[4]+p[5]+p[6]+p[7]+

1585 
p
[8]+p[9]+p[10]+p[11]+p[12]+p[13]+p[14]+

1586 
p
[15]+p[16]+p[17]+p[18]+p[19]+p[20]+p[21]+

1587 
p
[22]+p[23]+p[24]+p[25]+p[26]+p[27]+p[28]+

1588 
p
[29]+p[30]+p[31]+p[32]+p[33]+p[34]+p[35]+

1589 
p
[36]+p[37]+p[38]+p[39]+p[40]+p[41]+p[42]+

1590 
p
[43]+p[44]+p[45]+p[46]+p[47]+p[48]+p[49]+

1591 
p
[50]+p[51]+p[52]+p[53]+p[54]+p[55]+p[56]+

1592 
p
[57]+p[58]+p[59]+p[60]+p[61]+p[62]+p[63]+

1593 
p
[64]+p[65]+p[66]+p[67]+p[68]+p[69]+p[70]+

1594 
p
[71]+p[72]+p[73]+p[74]+p[75]+p[76]+p[77]+

1595 
p
[78]+p[79]+p[80]+p[81]+p[82]+p[83]+p[84]+

1596 
p
[85]+p[86]+p[87]+p[88]+p[89]+p[90]+p[91]+

1597 
p
[92]+p[93]+p[94]+p[95]+p[96]+p[97]+p[98]+

1598 
p
[99]+p[100]+p[101]+p[102]+p[103]+p[104]+

1599 
p
[105]+p[106]+p[107]+p[108]+p[109]+p[110]+

1600 
p
[111]+p[112]+p[113]+p[114]+p[115]+p[116]+

1601 
p
[117]+p[118]+p[119]+p[120]+p[121]+p[122]+

1602 
p
[123]+p[124]+p[125]+p[126]+p[127];

1604 
√xt
 = 
p
 + 16; (*Íexà<(*)
íd
;Ö =Çext,Çext += 16) {

1605 
sum
 +=

1606 
p
[0]+p[1]+p[2]+p[3]+p[4]+p[5]+p[6]+p[7]+

1607 
p
[8]+p[9]+p[10]+p[11]+p[12]+p[13]+p[14]+

1608 
p
[15];

1610 
√xt
 = 
p
 + 1; (*Íexà<(*)
íd
;Ö =Çext,Çext++) {

1611 
sum
 +*
p
;

1613  
sum
;

1614 
	}
}

1617 
	$touch
(*
buf
, 
size_t
 
nbyãs
)

1619 
size_t
 
psize
;

1621 i‡(!
psize
) {

1622 
psize
 = 
	`gë∑gesize
();

1624 
nbyãs
 >
psize
) {

1625 *
buf
 = 1;

1626 
buf
 +
psize
;

1627 
nbyãs
 -
psize
;

1629 
	}
}

1631 
size_t
*

1632 
	$≥rmuèti⁄
(
size_t
 
max
, size_à
sˇÀ
)

1634 
size_t
 
i
, 
v
, 
o
;

1635 
size_t
 
r
 = 0;

1636 
size_t
* 
ªsu…
 = (size_t*)
	`mÆloc
(
max
 * (size_t));

1638 i‡(
ªsu…
 =
NULL
)  NULL;

1640 
i
 = 0; i < 
max
; ++i) {

1641 
ªsu…
[
i
] = i * 
sˇÀ
;

1644 i‡(
r
 == 0)

1645 
r
 = (
	`gëpid
()<<6Ë^ 
	`gëµid
(Ë^ 
	`ønd
() ^ (rand()<<10);

1648 
i
 = 0; i < 
max
; ++i) {

1649 
r
 = (∏<< 1Ë^ 
	`ønd
();

1650 
o
 = 
r
 % 
max
;

1651 
v
 = 
ªsu…
[
o
];

1652 
ªsu…
[
o
] =Ñesu…[
i
];

1653 
ªsu…
[
i
] = 
v
;

1656 #ifde‡
_DEBUG


1657 
	`Ârötf
(
°dîr
, "≥rmuèti⁄(%d): {", 
max
);

1658 
i
 = 0; i < 
max
; ++i) {

1659 
	`Ârötf
(
°dîr
, "%d", 
ªsu…
[
i
]);

1660 i‡(
i
 < 
max
 - 1)

1661 
	`Ârötf
(
°dîr
, ",");

1663 
	`Ârötf
(
°dîr
, "}\n");

1664 
	`fÊush
(
°dîr
);

1667  (
ªsu…
);

1668 
	}
}

1671 
	$˝
(* 
§c
, * 
d°
, 
mode_t
 
mode
)

1673 
sfd
, 
dfd
;

1674 
buf
[8192];

1675 
ssize_t
 
size
;

1677 i‡((
sfd
 = 
	`›í
(
§c
, 
O_RDONLY
)) < 0) {

1680 i‡((
dfd
 = 
	`›í
(
d°
, 
O_CREAT
|
O_TRUNC
|
O_RDWR
, 
mode
)) < 0) {

1683 (
size
 = 
	`ªad
(
sfd
, 
buf
, 8192)) > 0) {

1684 i‡(
	`wrôe
(
dfd
, 
buf
, 
size
) < size)  -1;

1686 
	`fsync
(
dfd
);

1687 
	`˛o£
(
sfd
);

1688 
	`˛o£
(
dfd
);

1690 
	}
}

1692 
	#BIGSEEK
 (1<<30)

	)

1694 
off64_t


1695 
	$£ekto
(
fd
, 
off64_t
 
off
, 
whí˚
)

1697 #ifde‡
HAVE_l£ek64


1698  
	`l£ek64
(
fd
, 
off
, 
whí˚
);

1700 
öt64
 
hîe
 = 0;

1701 
dñè
 = (
off
 >0 ? 
BIGSEEK
 : -BIGSEEK);

1702 
v
;

1706 
whí˚
) {

1707 
SEEK_SET
:

1708 
	`l£ek
(
fd
, 0, 0);

1710 
SEEK_END
:

1711 i‡(
	`l£ek
(
fd
, 0, 
SEEK_END
Ë=-1Ë ((
off64_t
)-1);

1713 
SEEK_CUR
:

1714 i‡(
off
 == 0)

1715  
	`l£ek
(
fd
, 0, 
SEEK_CUR
);

1721 (
off
 - 
hîe
 < 
dñè
 && delta < 0)

1722 || (0 < 
dñè
 && dñè < 
off
 - 
hîe
))

1725 i‡(
	`l£ek
(
fd
, 
dñè
, 
SEEK_CUR
Ë=-1 && 
î∫o
)

1726  ((
off64_t
)-1);

1727 
hîe
 +
dñè
;

1729 
v
 = 
	`l£ek
(
fd
, ()(
off
 - 
hîe
), 
SEEK_CUR
);

1731 i‡(
v
 !-1 && 
whí˚
 =
SEEK_SET
Ë (
off
);

1732  ((
off64_t
)
v
);

1734 
	}
}

1736 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

1738 
	$gë∑gesize
()

1740  (
	`sysc⁄f
(
_SC_PAGE_SIZE
));

1741 
	}
}

1744 #ifde‡
WIN32


1746 
	$gë∑gesize
()

1748 
SYSTEM_INFO
 
s
;

1750 
	`GëSy°emInfo
(&
s
);

1751  (()
s
.
dwPageSize
);

1752 
	}
}

1754 
LARGE_INTEGER


1755 
	$gëFILETIMEoff£t
()

1757 
SYSTEMTIME
 
s
;

1758 
FILETIME
 
f
;

1759 
LARGE_INTEGER
 
t
;

1761 
s
.
wYór
 = 1970;

1762 
s
.
wM⁄th
 = 1;

1763 
s
.
wDay
 = 1;

1764 
s
.
wHour
 = 0;

1765 
s
.
wMöuã
 = 0;

1766 
s
.
wSec⁄d
 = 0;

1767 
s
.
wMûli£c⁄ds
 = 0;

1768 
	`Sy°emTimeToFûeTime
(&
s
, &
f
);

1769 
t
.
QuadP¨t
 = 
f
.
dwHighD©eTime
;

1770 
t
.
QuadP¨t
 <<= 32;

1771 
t
.
QuadP¨t
 |
f
.
dwLowD©eTime
;

1772  (
t
);

1773 
	}
}

1776 
	$gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

1778 
LARGE_INTEGER
 
t
;

1779 
FILETIME
 
f
;

1780 
mi¸o£c⁄ds
;

1781 
LARGE_INTEGER
 
off£t
;

1782 
‰equícyToMi¸o£c⁄ds
;

1783 
öôülized
 = 0;

1784 
BOOL
 
u£Pîf‹m™˚Cou¡î
 = 0;

1786 i‡(!
öôülized
) {

1787 
LARGE_INTEGER
 
≥rf‹m™˚Fªquícy
;

1788 
öôülized
 = 1;

1789 
u£Pîf‹m™˚Cou¡î
 = 
	`QuîyPîf‹m™˚Fªquícy
(&
≥rf‹m™˚Fªquícy
);

1790 i‡(
u£Pîf‹m™˚Cou¡î
) {

1791 
	`QuîyPîf‹m™˚Cou¡î
(&
off£t
);

1792 
‰equícyToMi¸o£c⁄ds
 = ()
≥rf‹m™˚Fªquícy
.
QuadP¨t
 / 1000000.;

1794 
off£t
 = 
	`gëFILETIMEoff£t
();

1795 
‰equícyToMi¸o£c⁄ds
 = 10.;

1798 i‡(
u£Pîf‹m™˚Cou¡î
Ë
	`QuîyPîf‹m™˚Cou¡î
(&
t
);

1800 
	`GëSy°emTimeAsFûeTime
(&
f
);

1801 
t
.
QuadP¨t
 = 
f
.
dwHighD©eTime
;

1802 
t
.
QuadP¨t
 <<= 32;

1803 
t
.
QuadP¨t
 |
f
.
dwLowD©eTime
;

1806 
t
.
QuadP¨t
 -
off£t
.QuadPart;

1807 
mi¸o£c⁄ds
 = ()
t
.
QuadP¨t
 / 
‰equícyToMi¸o£c⁄ds
;

1808 
t
.
QuadP¨t
 = 
mi¸o£c⁄ds
;

1809 
tv
->
tv_£c
 = 
t
.
QuadP¨t
 / 1000000;

1810 
tv
->
tv_u£c
 = 
t
.
QuadP¨t
 % 1000000;

1812 
	}
}

	@lib_udp.c

8 
	#_LIB


	)

9 
	~"bích.h
"

18 
	$udp_£rvî
(
u_l⁄g
 
¥og
, 
rdwr
)

20 
sock
;

21 
sockaddr_ö
 
s
;

23 i‡((
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 
IPPROTO_UDP
)) < 0) {

24 
	`≥º‹
("socket");

25 
	`exô
(1);

27 
	`sock_›timize
(
sock
, 
rdwr
);

28 
	`bzîo
((*)&
s
, (s));

29 
s
.
sö_Ámûy
 = 
AF_INET
;

30 #ifdef 
NO_PORTMAPPER


31 
s
.
sö_p‹t
 = 
	`ht⁄s
(
¥og
);

33 i‡(
	`böd
(
sock
, (
sockaddr
*)&
s
, (s)) < 0) {

34 
	`≥º‹
("bind");

35 
	`exô
(2);

37 #i‚def 
NO_PORTMAPPER


38 ()
	`pm≠_un£t
(
¥og
, (
u_l⁄g
)1);

39 i‡(!
	`pm≠_£t
(
¥og
, (
u_l⁄g
)1, (u_l⁄g)
IPPROTO_UDP
,

40 ()
	`sockp‹t
(
sock
))) {

41 
	`≥º‹
("pmap_set");

42 
	`exô
(5);

45  (
sock
);

46 
	}
}

52 
	$udp_d⁄e
(
u_l⁄g
 
¥og
)

54 ()
	`pm≠_un£t
(
¥og
, (
u_l⁄g
)1);

55 
	}
}

62 
	$udp_c⁄√˘
(*
ho°
, 
u_l⁄g
 
¥og
, 
rdwr
)

64 
ho°ít
 *
h
;

65 
sockaddr_ö
 
sö
;

66 
sock
;

67 #i‚def 
NO_PORTMAPPER


68 
u_sh‹t
 
p‹t
;

71 i‡((
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 
IPPROTO_UDP
)) < 0) {

72 
	`≥º‹
("socket");

73 
	`exô
(1);

75 
	`sock_›timize
(
sock
, 
rdwr
);

76 i‡(!(
h
 = 
	`gëho°by«me
(
ho°
))) {

77 
	`≥º‹
(
ho°
);

78 
	`exô
(2);

80 
	`bzîo
((*Ë&
sö
, (sin));

81 
sö
.
sö_Ámûy
 = 
AF_INET
;

82 
	`bc›y
((*)
h
->
h_addr
, (*Ë&
sö
.
sö_addr
, h->
h_Àngth
);

83 #ifdef 
NO_PORTMAPPER


84 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
¥og
);

86 
p‹t
 = 
	`pm≠_gëp‹t
(&
sö
, 
¥og
, (
u_l⁄g
)1, 
IPPROTO_UDP
);

87 i‡(!
p‹t
) {

88 
	`≥º‹
("lib UDP: NoÖort found");

89 
	`exô
(3);

91 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

93 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
*)&
sö
, (sin)) < 0) {

94 
	`≥º‹
("connect");

95 
	`exô
(4);

97  (
sock
);

98 
	}
}

	@lib_udp.h

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<√tdb.h
>

5 
	~<¨∑/öë.h
>

7 
udp_£rvî
(
u_l⁄g
 
¥og
, 
rdwr
);

8 
udp_d⁄e
(
u_l⁄g
 
¥og
);

9 
udp_c⁄√˘
(*
ho°
, 
u_l⁄g
 
¥og
, 
rdwr
);

10 
sock_›timize
(
sock
, 
rdwr
);

11 
sockp‹t
();

	@lib_unix.c

8 
	#_LIB


	)

9 
	~"bích.h
"

15 
	$unix_£rvî
(*
∑th
)

17 
sock
;

18 
sockaddr_un
 
s
;

20 #ifdef 
LIBUNIX_VERBOSE


21 
	`Ârötf
(
°dîr
, "unix_£rvî(%s, %u)\n", 
¥og
, 
rdwr
);

23 i‡((
sock
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

24 
	`≥º‹
("socket");

25 
	`exô
(1);

27 
	`bzîo
((*)&
s
, (s));

28 
s
.
sun_Ámûy
 = 
AF_UNIX
;

29 
	`°r˝y
(
s
.
sun_∑th
, 
∑th
);

30 i‡(
	`böd
(
sock
, (
sockaddr
*)&
s
, (s)) < 0) {

31 
	`≥º‹
("bind");

32 
	`exô
(2);

34 i‡(
	`li°í
(
sock
, 100) < 0) {

35 
	`≥º‹
("listen");

36 
	`exô
(4);

38  (
sock
);

39 
	}
}

45 
	$unix_d⁄e
(
sock
, *
∑th
)

47 
	`˛o£
(
sock
);

48 
	`u∆ök
(
∑th
);

50 
	}
}

56 
	$unix_ac˚±
(
sock
)

58 
sockaddr_un
 
s
;

59 
√wsock
;

60 
sockÀn_t
 
«mñí
;

62 
«mñí
 = (
s
);

63 
	`bzîo
((*)&
s
, 
«mñí
);

65 
ªåy
:

66 i‡((
√wsock
 = 
	`ac˚±
(
sock
, (
sockaddr
*)&
s
, &
«mñí
)) < 0) {

67 i‡(
î∫o
 =
EINTR
)

68 
ªåy
;

69 
	`≥º‹
("accept");

70 
	`exô
(6);

72  (
√wsock
);

73 
	}
}

80 
	$unix_c⁄√˘
(*
∑th
)

82 
sockaddr_un
 
s
;

83 
sock
;

85 i‡((
sock
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

86 
	`≥º‹
("socket");

87 
	`exô
(1);

89 
	`bzîo
((*)&
s
, (s));

90 
s
.
sun_Ámûy
 = 
AF_UNIX
;

91 
	`°r˝y
(
s
.
sun_∑th
, 
∑th
);

92 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
*)&
s
, (s)) < 0) {

93 
	`≥º‹
("connect");

94 
	`exô
(4);

96  (
sock
);

97 
	}
}

	@lib_unix.h

2 #i‚def 
_LIB_UNIX_H_


3 
	#_LIB_UNIX_H_


	)

4 
unix_£rvî
(*
∑th
);

5 
unix_d⁄e
(
sock
, *
∑th
);

6 
unix_ac˚±
(
sock
);

7 
unix_c⁄√˘
(*
∑th
);

	@line.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

25 
	$maö
(
ac
, **
av
)

27 
l
;

28 
vîbo£
 = 0;

29 
w¨mup
 = 0;

30 
ª≥tôi⁄s
 = (1000000 <
	`gë_íough
(0Ë? 1 : 
TRIES
);

31 
c
;

32 
size_t
 
maxÀn
 = 64 * 1024 * 1024;

33 
mem_°©e
 
°©e
;

34 *
ußge
 = "[-v] [-W <warmup>] [-N <repetitions>][-MÜen[K|M]]\n";

36 
°©e
.
löe
 = (*);

37 
°©e
.
∑gesize
 = 
	`gë∑gesize
();

39 –
c
 = 
	`gë›t
(
ac
, 
av
, "avM:W:N:")Ë!
EOF
) {

40 
c
) {

42 
vîbo£
 = 1;

45 
maxÀn
 = 
	`byãs
(
›èrg
);

48 
w¨mup
 = 
	`©oi
(
›èrg
);

51 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

54 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

59 i‡((
l
 = 
	`löe_föd
(
maxÀn
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
)) > 0) {

60 i‡(
vîbo£
) {

61 
	`¥ötf
("ˇchêlöêsize: %d byãs\n", 
l
);

63 
	`¥ötf
("%d\n", 
l
);

68 
	}
}

	@lmdd.c

1 *
	gid
 = "$Id:Ümdd.c,v 1.23 1997/12/01 23:47:59Üm Exp $\n";

33 #i‚de‡
__Lynx__


34 
	#FLUSH


	)

37 
	~<f˙é.h
>

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<sig«l.h
>

41 
	~<°rög.h
>

42 
	~<uni°d.h
>

43 
	~<sys/ty≥s.h
>

44 
	~<sys/waô.h
>

45 
	~<sys/time.h
>

46 
	~"bích.h
"

48 #unde‡
ALIGN


49 
	#ALIGN
(
x
, 
bs
Ë((x + (b†- 1)Ë& ~(b†- 1))

	)

51 #ifdef 
FLUSH


52 
	~<sys/mm™.h
>

53 
	~<sys/°©.h
>

54 
Êush
();

57 
	#USE_VALLOC


	)

58 #ifdef 
USE_VALLOC


59 
	#VALLOC
 
vÆloc


	)

61 
	#VALLOC
 
mÆloc


	)

65 
	gawrôe
, 
	gpoff
, 
	gout
, 
	gPröt
, 
	gFsync
, 
	gSync
, 
	gFlush
, 
	gBsize
, 
	gru
;

66 
uöt64
 
	gSèπ
, 
	gEnd
, 
	gR™d
, 
	göt_cou¡
;

67 
	ghash
;

68 
	gRó…ime
, 
	gNŸrunc
;

69 
	gRtmax
, 
	gRtmö
, 
	gWtmax
, 
	gWtmö
;

70 
	gπhi°
[12];

71 
	gwthi°
[12];

72 *
	gLabñ
;

73 
uöt64
 *
	gn‹ïót
;

74 
	gn‹ïóts
 = -1;

75 #ifdef 
USE_BDS


76 
bds_msg
 *
	gm1
, *
	gm2
;

79 
uöt64
 
gë¨g
();

80 
bìn_thîe
(
uöt64
 
off
);

81 
gëfûe
(*
s
, 
ac
, **
av
);

83 *
	gcmds
[] = {

87 #ifdef 
DBG


90 #ifdef 
O_DIRECT


95 #ifdef 
FLUSH


111 #ifdef 
RUSAGE


117 #if !
deföed
(
hpux
)

134 #ifdef 
USE_BDS


138 #ifdef 
sgi


143 #ifdef 
O_SYNC


150 
îr‹
(*);

151 
d⁄e
();

152 #ifdef 
DBG


153 
dbg
;

157 
	$maö
(
ac
, **
av
)

159 
uöt
 *
buf
;

160 
uöt
 *
bufs
[10];

161 
nbufs
, 
√xtbuf
 = 0;

162 
F‹k
, 
mis£s
, 
mism©ch
, 
ouç©
, 
ö∑t
, 
ö
, 
time›í
, 
gŸ˙t
;

163 
¶p
;

164 
uöt64
 
skù
, 
size
, 
cou¡
;

165 
	`chk¨g
();

166 
i
;

167 
uöt64
 
off
 = 0;

168 
touch
;

169 
time
;

170 
mûls
;

171 
∑d_ö
;

172 
pid
 = 0;

173 
timevÆ
 
°¨t_tv
;

174 
timevÆ
 
°›_tv
;

177 
	`Ârötf
(
°dîr
, "sizeof(int) != 4\n");

178 
	`exô
(1);

180 
i
 = 1; i < 
ac
; ++i) {

181 
	`chk¨g
(
av
[
i
]);

183 
	`sig«l
(
SIGINT
, 
d⁄e
);

184 
	`sig«l
(
SIGALRM
, 
d⁄e
);

185 
mis£s
 = 
mism©ch
 = 
	`gë¨g
("mism©ch=", 
ac
, 
av
);

186 
ö∑t
 = 
	`gë¨g
("ù©=", 
ac
, 
av
);

187 
ouç©
 = 
	`gë¨g
("›©=", 
ac
, 
av
);

188 
Bsize
 = 
	`gë¨g
("bs=", 
ac
, 
av
);

189 i‡(
Bsize
 < 0)

190 
Bsize
 = 8192;

191 #if !
	`deföed
(
hpux
)

192 
¶p
 = 
	`gë¨g
("u¶ìp=", 
ac
, 
av
);

194 
F‹k
 = 
	`gë¨g
("f‹k=", 
ac
, 
av
);

195 
Fsync
 = 
	`gë¨g
("fsync=", 
ac
, 
av
);

196 
Sync
 = 
	`gë¨g
("sync=", 
ac
, 
av
);

197 
R™d
 = 
	`gë¨g
("ønd=", 
ac
, 
av
);

198 
Sèπ
 = 
	`gë¨g
("°¨t=", 
ac
, 
av
);

199 
End
 = 
	`gë¨g
("íd=", 
ac
, 
av
);

200 
time
 = 
	`gë¨g
("time=", 
ac
, 
av
);

201 i‡((
End
 !-1Ë&& (
R™d
 != -1) && (End > Rand)) {

202 
End
 = 
R™d
;

204 i‡(
	`gë¨g
("§™d=", 
ac
, 
av
) != -1) {

205 
	`§™d48
(()
	`gë¨g
("§™d=", 
ac
, 
av
));

207 
poff
 = 
	`gë¨g
("poff=", 
ac
, 
av
) != -1;

208 
Pröt
 = 
	`gë¨g
("¥öt=", 
ac
, 
av
);

209 
nbufs
 = 
	`gë¨g
("bufs=", 
ac
, 
av
);

210 
Ró…ime
 = 
	`gë¨g
("ªÆtime=", 
ac
, 
av
);

211 
Rtmax
 = 
	`gë¨g
("πmax=", 
ac
, 
av
);

212 i‡((
Rtmax
 != -1) && (Rtmax < 10))

213 
Rtmax
 = 10;

214 
Rtmö
 = 
	`gë¨g
("πmö=", 
ac
, 
av
);

215 i‡((
Rtmax
 !-1Ë&& (
Rtmö
 == -1)) {

216 
Rtmö
 = 0;

218 
Wtmax
 = 
	`gë¨g
("wtmax=", 
ac
, 
av
);

219 i‡((
Wtmax
 != -1) && (Wtmax < 10))

220 
Wtmax
 = 10;

221 
Wtmö
 = 
	`gë¨g
("wtmö=", 
ac
, 
av
);

222 i‡((
Wtmax
 !-1Ë&& (
Wtmö
 == -1)) {

223 
Wtmö
 = 0;

225 i‡((
Rtmö
 && !
Rtmax
Ë|| (
Wtmö
 && !
Wtmax
)) {

226 
	`Ârötf
(
°dîr
, "Needá maxÅo go withÅhat min.\n");

227 
	`exô
(1);

229 i‡((
Rtmö
 > 
Rtmax
Ë|| (
Wtmö
 > 
Wtmax
)) {

230 
	`Ârötf
(
°dîr
,

232 
Rtmax
, 
Rtmö
, 
Wtmax
, 
Wtmö
);

233 
	`exô
(1);

235 
time›í
 = 
	`gë¨g
("time›í=", 
ac
, 
av
);

236 
∑d_ö
 = 
	`gë¨g
("∑dö=", 
ac
, 
av
);

237 i‡(
∑d_ö
 == -1)Öad_in = 0;

239 i‡(
nbufs
 == -1)Çbufs = 1;

240 i‡(
nbufs
 > 10Ë{ 
	`¥ötf
("Toÿm™y bufs\n"); 
	`exô
(1); }

241 #ifdef 
DBG


242 
dbg
 = 
	`gë¨g
("debug=", 
ac
, 
av
) != -1;

244 #ifdef 
RUSAGE


245 
ru
 = 
	`gë¨g
("rußge=", 
ac
, 
av
);

247 
touch
 = 
	`gë¨g
("touch=", 
ac
, 
av
) != -1;

248 
hash
 = 
	`gë¨g
("hash=", 
ac
, 
av
Ë!(
uöt64
)-1;

249 
Labñ
 = (*)
	`gë¨g
("œbñ=", 
ac
, 
av
);

250 
cou¡
 = 
	`gë¨g
("cou¡=", 
ac
, 
av
);

251 
size
 = 
	`gë¨g
("move=", 
ac
, 
av
);

252 i‡(
size
 !(
uöt64
)-1)

253 
cou¡
 = 
size
 / 
Bsize
;

254 i‡(
R™d
 != -1) {

255 
size
 = 
R™d
 - 
Bsize
;

256 
size
 = 
	`ALIGN
(size, 
Bsize
);

259 #ifdef 
FLUSH


260 
Flush
 = 
	`gë¨g
("Êush=", 
ac
, 
av
);

262 i‡(
cou¡
 =(
uöt64
)-1)

263 
gŸ˙t
 = 0;

265 
gŸ˙t
 = 1;

266 
öt_cou¡
 = 0;

267 
skù
 = 
	`gë¨g
("skù=", 
ac
, 
av
);

268 i‡(
	`gë¨g
("n‹ïót=", 
ac
, 
av
) != -1) {

269 i‡(
gŸ˙t
) {

270 
n‹ïót
 = (
uöt64
*)
	`ˇŒoc
(
cou¡
, (uint64));

272 
n‹ïót
 = (
uöt64
*)
	`ˇŒoc
(10<<10, (uint64));

276 i‡((
ö∑t
 !-1 || 
ouç©
 !-1Ë&& (
Bsize
 & 3)) {

277 
	`Ârötf
(
°dîr
, "Block sizê0x%x mu° bêw‹dálig√d\n", 
Bsize
);

278 
	`exô
(1);

280 i‡((
Bsize
 >> 2) == 0) {

281 
	`Ârötf
(
°dîr
, "Block size must beátÜeast 4.\n");

282 
	`exô
(1);

284 
i
 = 0; i < 
nbufs
; i++) {

285 i‡(!(
bufs
[
i
] = (
uöt
 *Ë
	`VALLOC
((Ë
Bsize
))) {

286 
	`≥º‹
("VALLOC");

287 
	`exô
(1);

289 
	`bzîo
((*Ë
bufs
[
i
], 
Bsize
);

290 #ifde‡
sgi


291 i‡(
	`gë¨g
("mpö=", 
ac
, 
av
) != -1) {

292 i‡(
	`mpö
((*)
bufs
[
i
], (
size_t
)
Bsize
)) {

293 
	`≥º‹
("mpin forádam");

299 i‡(
time
 != -1) {

300 
	`Æ¨m
(
time
);

302 i‡(
time›í
 != -1) {

303 
	`°¨t
(
NULL
);

305 
ö
 = 
	`gëfûe
("if=", 
ac
, 
av
);

306 
out
 = 
	`gëfûe
("of=", 
ac
, 
av
);

307 i‡(
time›í
 == -1) {

308 
	`°¨t
(
NULL
);

310 i‡((
Rtmax
 !-1Ë&& 
ö
 < 0) {

311 
	`Ârötf
(
°dîr
, "IÅhink you wanted wtmax,ÇotÑtmax\n");

312 
	`exô
(1);

314 i‡((
Wtmax
 !-1Ë&& 
out
 < 0) {

315 
	`Ârötf
(
°dîr
, "IÅhink you wantedÑtmax,Çot wtmax\n");

316 
	`exô
(1);

318 i‡(
skù
 !(
uöt64
)-1) {

319 
off
 = 
skù
;

320 
off
 *
Bsize
;

321 i‡(
ö
 >= 0) {

322 
	`£ekto
(
ö
, 
off
, 0);

324 i‡(
out
 >= 0) {

325 
	`£ekto
(
out
, 
off
, 0);

327 i‡(
poff
) {

328 
	`Ârötf
(
°dîr
, "%†", 
	`p64sz
(
off
));

332 
moved
;

334 i‡(
gŸ˙t
 && 
cou¡
-- <= 0) {

335 
	`d⁄e
();

343 i‡(
End
 != -1) {

344 
uöt64
 
°¨t
 = 0;

346 
°¨t
 = sèπ ? 0 : 
R™d
 - 
End
;

348 
off
 = 
	`dønd48
(Ë* 
End
;

349 
off
 = 
	`ALIGN
(off, 
Bsize
);

350 
off
 +
°¨t
;

351 i‡(
Sèπ
 != -1) {

352 
off
 +
Sèπ
;

354 } 
n‹ïót
 && 
	`bìn_thîe
(
off
));

355 i‡(
n‹ïót
) {

356 
n‹ïót
[
n‹ïóts
++] = 
off
;

357 i‡(!
gŸ˙t
 && (
n‹ïóts
 == 10<<10)) {

358 
n‹ïóts
 = 0;

361 i‡(
ö
 >= 0) {

362 
	`£ekto
(
ö
, 
off
, 0);

364 i‡(
out
 >= 0) {

365 
	`£ekto
(
out
, 
off
, 0);

371 i‡(
R™d
 != -1) {

373 
off
 = 
	`dønd48
(Ë* (
size
 - 
Bsize
);

374 i‡(
Sèπ
 != -1) {

375 
off
 +
Sèπ
;

377 
off
 = 
	`ALIGN
(off, 
Bsize
);

378 } 
n‹ïót
 && 
	`bìn_thîe
(
off
));

379 i‡(
n‹ïót
) {

380 
n‹ïót
[
n‹ïóts
++] = 
off
;

382 i‡(!
gŸ˙t
 && (
n‹ïóts
 == 10<<10)) {

383 
n‹ïóts
 = 0;

385 i‡(
ö
 >= 0) {

386 
	`£ekto
(
ö
, 
off
, 0);

388 i‡(
out
 >= 0) {

389 
	`£ekto
(
out
, 
off
, 0);

392 i‡(
poff
) {

393 
	`Ârötf
(
°dîr
, "%†", 
	`p64sz
(
off
));

396 
buf
 = 
bufs
[
√xtbuf
];

397 i‡(++
√xtbuf
 =
nbufs
)Çextbuf = 0;

398 i‡(
ö
 >= 0) {

399 i‡((
Rtmax
 !-1Ë|| (
Rtmö
 != -1)) {

400 
	`°¨t
(&
°¨t_tv
);

402 
moved
 = 
	`ªad
(
ö
, 
buf
, 
Bsize
);

404 i‡(
∑d_ö
) {

405 
∑d_ö
 = 0;

406 
cou¡
++;

407 
	`°¨t
(
NULL
);

411 i‡((
Rtmax
 !-1Ë|| (
Rtmö
 != -1)) {

412 
mics
 = 
	`°›
(&
°¨t_tv
, &
°›_tv
);

414 
mûls
 = 
mics
 / 1000;

415 i‡((
mûls
 > 
Rtmax
Ë|| (mûl†< 
Rtmö
)) {

416 
	`Ârötf
(
°dîr
,

418 (()
mics
) / 1000,

419 
	`p64sz
(
	`£ekto
(
ö
, 0, 
SEEK_CUR
)));

425 i‡(
mûls
 >
Rtmax
) {

426 
πhi°
[11]++;

427 } i‡(
mûls
 < 
Rtmö
) {

428 
πhi°
[0]++;

430 
°ï
 = (
Rtmax
 - 
Rtmö
) / 10;

431 
i
;

433 
i
 = 1; i <= 10; ++i) {

434 i‡(
mûls
 < 
i
 * 
°ï
 + 
Rtmö
) {

435 
πhi°
[
i
]++;

442 
moved
 = 
Bsize
;

444 i‡(
moved
 == -1) {

445 
	`≥º‹
("read");

447 i‡(
moved
 <= 0) {

448 
	`d⁄e
();

450 i‡(
ö∑t
 != -1) {

451 
foo
, 
˙t
;

453 
foo
 = 0, 
˙t
 = 
moved
/(); cnt--; foo++) {

454 i‡(
buf
[
foo
] !(
uöt
Ë(
off
 + foo*())) {

455 
	`Ârötf
(
°dîr
,

457 (
uöt
)
off
,

458 (
uöt
)(
off
 + 
foo
*()),

459 
buf
[
foo
]);

460 i‡(
mism©ch
 !-1 && --
mis£s
 == 0) {

461 
	`d⁄e
();

466 i‡((
ö
 >0Ë&& 
touch
) {

467 
i
;

469 
i
 = 0; i < 
moved
; i += 4096) {

470 ((*)
buf
)[
i
] = 0;

473 i‡(
out
 >= 0) {

474 
moved2
;

476 i‡(
F‹k
 != -1) {

477 i‡(
pid
) {

478 
	`waôpid
(
pid
, 0, 0);

480 i‡((
pid
 = 
	`f‹k
())) {

481 
off
 +
moved
;

482 
öt_cou¡
 +(
moved
 >> 2);

486 i‡(
ouç©
 != -1) {

487 
foo
, 
˙t
;

489 
foo
 = 0, 
˙t
 = 
moved
/();

490 
˙t
--; 
foo
++) {

491 
buf
[
foo
] =

492 (
uöt
)(
off
 + 
foo
*());

495 i‡((
Wtmax
 !-1Ë|| (
Wtmö
 != -1)) {

496 
	`°¨t
(&
°¨t_tv
);

498 #ifdef 
USE_BDS


504 i‡(
awrôe
) {

505 i‡(
m1
) {

506 
m2
 = 
	`bds_awrôe
(
out
, 
buf
, 
moved
);

507 
moved2
 = 
	`bds_ad⁄e
(
out
, 
m1
);

508 
m1
 = 
m2
;

510 
m1
 = 
	`bds_awrôe
(
out
, 
buf
, 
moved
);

511 
wrôed⁄e
;

514 
moved2
 = 
	`wrôe
(
out
, 
buf
, 
moved
);

517 
moved2
 = 
	`wrôe
(
out
, 
buf
, 
moved
);

520 i‡(
moved2
 == -1) {

521 
	`≥º‹
("write");

523 i‡(
moved2
 !
moved
) {

524 
	`Ârötf
(
°dîr
, "write: wanted=%d got=%d\n",

525 
moved
, 
moved2
);

526 
	`d⁄e
();

528 i‡((
Wtmax
 !-1Ë|| (
Wtmö
 != -1)) {

529 
mics
 = 
	`°›
(&
°¨t_tv
, &
°›_tv
);

531 
mûls
 = 
mics
 / 1000;

532 i‡((
mûls
 > 
Wtmax
Ë|| (mûl†< 
Wtmö
)) {

533 
	`Ârötf
(
°dîr
,

535 (()
mics
) / 1000,

536 
	`p64sz
(
	`£ekto
(
out
, 0, 
SEEK_CUR
)));

542 i‡(
mûls
 >
Wtmax
) {

543 
wthi°
[11]++;

544 } i‡(
mûls
 < 
Wtmö
) {

545 
wthi°
[0]++;

547 
°ï
 = (
Wtmax
 - 
Wtmö
) / 10;

548 
i
;

550 
i
 = 1; i <= 10; ++i) {

551 i‡(
mûls
 < 
i
 * 
°ï
 + 
Wtmö
) {

552 
wthi°
[
i
]++;

559 i‡(
moved2
 == -1) {

560 
	`≥º‹
("write");

562 i‡(
moved2
 !
moved
) {

563 
	`d⁄e
();

566 i‡(
touch
) {

567 
i
;

569 
i
 = 0; i < 
moved
; i += 4096) {

570 ((*)
buf
)[
i
] = 0;

574 #ifdef 
USE_BDS


575 
wrôed⁄e
:

577 
off
 +
moved
;

578 
öt_cou¡
 +(
moved
 >> 2);

579 #if !
	`deföed
(
hpux
)

580 i‡(
¶p
 != -1) {

581 
	`u¶ìp
(
¶p
);

584 i‡(
hash
) {

585 
	`Ârötf
(
°dîr
, "#");

587 i‡(
F‹k
 != -1) {

588 
	`exô
(0);

591 
	}
}

594 
	$bìn_thîe
(
uöt64
 
off
)

596 
i
;

598 
i
 = 0; i <
n‹ïóts
; ++i) {

599 i‡(
off
 =
n‹ïót
[
i
]) {

600 
	`Ârötf
(
°dîr
, "n‹ïóà⁄ %u\n", (
uöt
)
off
);

605 
	}
}

608 
	$chk¨g
(*
¨g
)

610 
i
;

611 *
a
, *
b
;

613 
i
 = 0; 
cmds
[i]; ++i) {

614 
a
 = 
¨g
, 
b
 = 
cmds
[
i
]; *a && *b && *a == *b;á++, b++)

616 i‡(*
a
 == '=')

619 
	`Ârötf
(
°dîr
, "Badárg: %s,ÖossibÀárgumít†¨e: ", 
¨g
);

620 
i
 = 0; 
cmds
[i]; ++i) {

621 
	`Ârötf
(
°dîr
, "%†", 
cmds
[
i
]);

623 
	`Ârötf
(
°dîr
, "\n");

624 
	`exô
(1);

626 
	}
}

629 
	$d⁄e
()

631 
i
;

632 
°ï
;

633 
size
;

635 #ifdef 
USE_BDS


636 i‡(
awrôe
 && 
m1
) {

637 
	`bds_ad⁄e
(
out
, 
m1
);

640 i‡(
Sync
 > 0)

641 
	`sync
();

642 i‡(
Fsync
 > 0)

643 
	`fsync
(
out
);

644 #ifdef 
FLUSH


645 i‡(
Flush
 > 0)

646 
	`Êush
();

648 
	`°›
(
NULL
, NULL);

649 #ifdef 
RUSAGE


650 i‡(
ru
 != -1)

651 
	`rußge
();

653 i‡(
hash
 || 
poff
) {

654 
	`Ârötf
(
°dîr
, "\n");

656 i‡(()
Labñ
 != -1) {

657 
	`Ârötf
(
°dîr
, "%s", 
Labñ
);

659 
öt_cou¡
 <<= 2;

660 
Pröt
) {

665 
	`œãncy
((
uöt64
)(
öt_cou¡
 / 
Bsize
), (uint64)Bsize);

669 
	`mi¸o
("", (
uöt64
)(
öt_cou¡
 / 
Bsize
));

673 
	`kb
(
öt_cou¡
);

677 
	`mb
(
öt_cou¡
);

681 
	`b™dwidth
(
öt_cou¡
, 1, 0);

685 
	`b™dwidth
(
öt_cou¡
, 1, 1);

688 i‡(
Rtmax
 != -1) {

689 
	`¥ötf
("READ operationÜatencies\n");

690 
°ï
 = (
Rtmax
 - 
Rtmö
) / 10;

691 i‡(
πhi°
[0]) {

692 
	`¥ötf
("%d- ms: %d\n", 
Rtmö
, 
πhi°
[0]);

694 
i
 = 1, 
size
 = 
Rtmö
; i <10; i++, sizê+
°ï
) {

695 i‡(!
πhi°
[
i
])

697 
	`¥ötf
("%dÅo %d ms: %d\n",

698 
size
, sizê+ 
°ï
 - 1, 
πhi°
[
i
]);

700 i‡(
πhi°
[11]) {

701 
	`¥ötf
("%d+ ms: %d\n", 
Rtmax
, 
πhi°
[11]);

704 i‡(
Wtmax
 != -1) {

705 
	`¥ötf
("WRITE operationÜatencies\n");

706 
°ï
 = (
Wtmax
 - 
Wtmö
) / 10;

707 i‡(
wthi°
[0]) {

708 
	`¥ötf
("%d- ms: %d\n", 
Wtmö
, 
wthi°
[0]);

710 
i
 = 1, 
size
 = 
Wtmö
; i <10; i++, sizê+
°ï
) {

711 i‡(!
wthi°
[
i
])

713 
	`¥ötf
("%dÅo %d ms: %d\n",

714 
size
, sizê+ 
°ï
 - 1, 
wthi°
[
i
]);

716 i‡(
wthi°
[11]) {

717 
	`¥ötf
("%d+ ms: %d\n", 
Wtmax
, 
wthi°
[11]);

720 
	`exô
(0);

721 
	}
}

723 
uöt64


724 
	$gë¨g
(*
s
, 
ac
, **
av
)

726 
uöt64
 
Àn
, 
i
;

728 
Àn
 = 
	`°æí
(
s
);

730 
i
 = 1; i < 
ac
; ++i) {

731 i‡(!
	`°∫cmp
(
av
[
i
], 
s
, 
Àn
)) {

732 
uöt64
 
bs
 = 
	`byãs
(&
av
[
i
][
Àn
]);

734 i‡(!
	`°∫cmp
(
av
[
i
], "label=", 6)) {

735  (
uöt64
)(&
av
[
i
][
Àn
]);

737  (
bs
);

740  ((
uöt64
)-1);

741 
	}
}

743 *
	gouçut
;

746 
	$gëfûe
(*
s
, 
ac
, **
av
)

748 
ªt
, 
Àn
, 
i
;

749 
≠≥nd
 = 
	`gë¨g
("≠≥nd=", 
ac
, 
av
) != -1;

750 
nŸrunc
 = 
	`gë¨g
("nŸrunc=", 
ac
, 
av
) != -1;

751 
no¸óã
 = 
	`gë¨g
("no¸óã=", 
ac
, 
av
) != -1;

752 #ifdef 
O_SYNC


753 
osync
 = 
	`gë¨g
("osync=", 
ac
, 
av
) != -1;

755 
oÊags
;

757 
Àn
 = 
	`°æí
(
s
);

759 
i
 = 1; i < 
ac
; ++i) {

760 i‡(!
	`°∫cmp
(
av
[
i
], 
s
, 
Àn
)) {

761 i‡(
av
[
i
][0] == 'o') {

762 i‡(!
	`°rcmp
("of=öã∫Æ", 
av
[
i
]))

764 i‡(!
	`°rcmp
("of=°dout", 
av
[
i
]))

766 i‡(!
	`°rcmp
("of=1", 
av
[
i
]))

768 i‡(!
	`°rcmp
("of=-", 
av
[
i
]))

770 i‡(!
	`°rcmp
("of=°dîr", 
av
[
i
]))

772 i‡(!
	`°rcmp
("of=2", 
av
[
i
]))

774 
oÊags
 = 
O_WRONLY
;

775 
oÊags
 |(
nŸrunc
 || 
≠≥nd
Ë? 0 : 
O_TRUNC
;

776 
oÊags
 |
no¸óã
 ? 0 : 
O_CREAT
;

777 
oÊags
 |
≠≥nd
 ? 
O_APPEND
 : 0;

778 #ifde‡
O_SYNC


779 
oÊags
 |
osync
 ? 
O_SYNC
 : 0;

781 
ªt
 = 
	`›í
(&
av
[
i
][
Àn
], 
oÊags
,0644);

782 #ifdef 
O_DIRECT


783 i‡((
	`gë¨g
("odúe˘=", 
ac
, 
av
) != -1) ||

784 (
	`gë¨g
("dúe˘=", 
ac
, 
av
) != -1)) {

785 
	`˛o£
(
ªt
);

786 
ªt
 = 
	`›í
(&
av
[
i
][
Àn
], 
oÊags
|
O_DIRECT
);

787 
awrôe
 =

788 
	`gë¨g
("awrôe=", 
ac
, 
av
) != -1;

791 i‡(
ªt
 == -1)

792 
	`îr‹
(&
av
[
i
][
Àn
]);

793 #ifde‡
F_FSSETXATTR


794 i‡(
Ró…ime
 == 1) {

795 
fsx©å
 fsxattr;

797 
	`bzîo
(&
fsx©å
,(fsxattr));

798 
fsx©å
.
fsx_xÊags
 = 0x1;

799 i‡(
	`f˙é
(
ªt
,
F_FSSETXATTR
,&
fsx©å
)){

800 
	`¥ötf
("WARNING: CouldÇot make %sáÑealÅime file\n",

801 &
av
[
i
][
Àn
]);

805 
ouçut
 = &
av
[
i
][
Àn
];

806  (
ªt
);

808 i‡(!
	`°rcmp
("if=öã∫Æ", 
av
[
i
]))

810 i‡(!
	`°rcmp
("if=°dö", 
av
[
i
]))

812 i‡(!
	`°rcmp
("if=0", 
av
[
i
]))

814 i‡(!
	`°rcmp
("if=-", 
av
[
i
]))

816 
ªt
 = 
	`›í
(&
av
[
i
][
Àn
], 0);

817 #ifdef 
O_DIRECT


818 i‡((
	`gë¨g
("idúe˘=", 
ac
, 
av
) != -1) ||

819 (
	`gë¨g
("dúe˘=", 
ac
, 
av
) != -1)) {

820 
	`˛o£
(
ªt
);

821 
ªt
 = 
	`›í
(&
av
[
i
][
Àn
], 
O_RDONLY
|
O_DIRECT
);

824 i‡(
ªt
 == -1)

825 
	`îr‹
(&
av
[
i
][
Àn
]);

826  (
ªt
);

831 
	}
}

833 #ifdef 
FLUSH


835 
	$w¨nög
(*
s
)

837 i‡(()
Labñ
 != -1) {

838 
	`Ârötf
(
°dîr
, "%s: ", 
Labñ
);

840 
	`≥º‹
(
s
);

842 
	}
}

845 
	$Êush
()

847 
fd
;

848 
°©
 
sb
;

849 
ˇddr_t
 
whîe
;

851 i‡(
ouçut
 =
NULL
 || (
fd
 = 
	`›í
(output, 2)) == -1) {

852 
	`w¨nög
("No output file");

855 i‡(
	`f°©
(
fd
, &
sb
Ë=-1 || sb.
°_size
 == 0) {

856 
	`w¨nög
(
ouçut
);

859 
whîe
 = 
	`mm≠
(0, 
sb
.
°_size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
, 
fd
, 0);

860 
	`msync
(
whîe
, 
sb
.
°_size
, 
MS_INVALIDATE
);

861 
	`munm≠
(
whîe
, 
sb
.
°_size
);

862 
	}
}

866 
	$îr‹
(*
s
)

868 i‡(()
Labñ
 != -1) {

869 
	`Ârötf
(
°dîr
, "%s: ", 
Labñ
);

871 
	`≥º‹
(
s
);

872 
	`exô
(1);

873 
	}
}

	@lmhttp.c

14 *
	gid
 = "$Id$\n";

16 
	~"bích.h
"

17 #ifde‡
MAP_FILE


18 
	#MMAP_FLAGS
 
MAP_FILE
|
MAP_SHARED


	)

20 
	#MMAP_FLAGS
 
MAP_SHARED


	)

22 
	#MMAPS_BETTER
 (4<<10Ë

	)

23 
	#LOGFILE
 "/u§/tmp/lmhâp.log"

	)

25 *
	gbuf
;

26 *
	gbufs
[3];

27 
	gDÊg
, 
	gdÊg
, 
	gnÊg
, 
	glÊg
, 
	gfÊg
, 
	gzÊg
;

28 
	gd©a
, 
	glogfûe
;

29 
dõ
();

30 
w‹kî
();

31 *
hâp_time
();

32 *
d©e
(
time_t
 *
â
);

33 *
ty≥
(*
«me
);

34 
sour˚
(
sock
);

35 
isdú
(*
«me
);

36 
dodú
(*
«me
, 
sock
);

37 
Áke
(
sock
, *
buf
, 
size
);

38 
rdwr
(
fd
, 
sock
, *
buf
);

39 
mm≠_rdwr
(
‰om
, 
to
, 
size
);

40 
logô
(
sock
, *
«me
, 
size
);

44 
	$maö
(
ac
, **
av
)

46 
i
, 
¥og
;

47 #ifdef 
sgi


48 
n˝us
 = 
	`sysmp
(
MP_NPROCS
);

51 
i
 = 1; i < 
ac
; ++i) {

52 i‡(
av
[
i
][0] != '-') {

55 
av
[
i
][1]) {

56 'D': 
DÊg
 = 1; ;

57 'd': 
dÊg
 = 1; ;

58 'f': 
fÊg
 = 
	`©oi
(&
av
[
i
][2]);

60 'l': 
lÊg
 = 1; ;

61 'n': 
nÊg
 = 1; ;

62 'z': 
zÊg
 = 1; ;

64 
	`Ârötf
(
°dîr
, "Barf.\n");

65 
	`exô
(1);

68 i‡(
	`gëív
("DOCROOT")) {

69 i‡(
	`chdú
(
	`gëív
("DOCROOT")) == -1) {

70 
	`≥º‹
(
	`gëív
("DOCROOT"));

71 
	`exô
(1);

74 i‡(
	`©oi
(
av
[
ac
 - 1]) != 0) {

75 
¥og
 = -
	`©oi
(
av
[
ac
 - 1]);

77 
¥og
 = -80;

82 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

83 
d©a
 = 
	`t˝_£rvî
(
¥og
, 
SOCKOPT_REUSE
);

84 
bufs
[0] = 
	`vÆloc
(
XFERSIZE
);

85 
bufs
[1] = 
	`vÆloc
(
XFERSIZE
);

86 
bufs
[2] = 
	`vÆloc
(
XFERSIZE
);

87 
logfûe
 = 
	`›í
(
LOGFILE
, 
O_CREAT
|
O_APPEND
|
O_WRONLY
, 0666);

88 
	`sig«l
(
SIGINT
, 
dõ
);

89 
	`sig«l
(
SIGHUP
, 
dõ
);

90 
	`sig«l
(
SIGTERM
, 
dõ
);

91 
i
 = 1; i < 
fÊg
; ++i) {

92 i‡(
	`f‹k
() <= 0) {

96 
	`h™dÀ_scheduÀr
(
i
, 0, 0);

97 
	`w‹kî
();

99 
	}
}

102 
	$w‹kî
()

104 
√wd©a
;

105 
√xt
 = 0;

108 
buf
 = 
bufs
[
√xt
];

109 i‡(++
√xt
 == 3)Çext = 0;

110 
√wd©a
 = 
	`t˝_ac˚±
(
d©a
, 
SOCKOPT_REUSE
);

111 
	`sour˚
(
√wd©a
);

112 
	`˛o£
(
√wd©a
);

114 
	}
}

120 *
	$hâp_time
()

122 
time_t
 
â
;

123 
time_t
 
ßve_â
;

124 
tm
 *
t
;

125 
tm
 
ßve_tm
;

126 
buf
[100];

128 
	`time
(&
â
);

129 i‡(
â
 =
ßve_â
) {

130  (
buf
);

132 
ßve_â
 = 
â
;

133 
t
 = 
	`gmtime
(&
â
);

134 i‡(
buf
[0] && (
â
 - 
ßve_â
 < 3600)) {

135 
buf
[22] = 
t
->
tm_£c
 / 10 + '0';

136 
buf
[21] = 
t
->
tm_£c
 % 10 + '0';

137 
ßve_tm
.
tm_£c
 = 
t
->tm_sec;

138 i‡(
ßve_tm
.
tm_mö
 =
t
->tm_min) {

139  (
buf
);

142 
ßve_tm
 = *
t
;

144 
	`°r·ime
(
buf
, (buf), "%a, %d %b %y %H:%M:%S %Z", 
t
);

145 (
buf
);

146 
	}
}

156 
	$d©e
(
time_t
 *
â
)

159 
	}
}

162 
	$ty≥
(*
«me
)

164 
Àn
 = 
	`°æí
(
«me
);

166 i‡(!
	`°rcmp
(&
«me
[
Àn
 - 4], ".gif")) {

169 i‡(!
	`°rcmp
(&
«me
[
Àn
 - 5], ".jpeg")) {

172 i‡(!
	`°rcmp
(&
«me
[
Àn
 - 5], ".html")) {

175 i‡(
DÊg
 && 
	`isdú
(
«me
)) {

179 
	}
}

187 
	$sour˚
(
sock
)

189 
fd
, 
n
, 
size
;

190 *
s
;

191 
fûe
[100];

192 
hbuf
[1024];

193 
°©
 
sb
;

194 
	#«me
 &
buf
[5]

	)

196 
n
 = 
	`ªad
(
sock
, 
buf
, 
XFERSIZE
);

197 i‡(
n
 <= 0) {

198 
	`≥º‹
("controlÇbytes");

201 
buf
[
n
] = 0;

202 i‡(
dÊg
Ë
	`¥ötf
("%.*s\n", 
n
, 
buf
);

203 i‡(
zÊg
) {

206 i‡(!
	`°∫cmp
(
buf
, "EXIT", 4)) {

207 
	`exô
(0);

209 i‡(
	`°∫cmp
(
buf
, "GET /", 5)) {

210 
	`≥º‹
(
buf
);

213 
s
 = 
buf
; *s && *s != '\r' && *s != '\n'; s++)

215 *
s
 = 0;

216 
s
 = 
«me
; *s && *s != ' '; s++)

218 *
s
 = 0;

219 i‡(
lÊg
Ë
	`°∫˝y
(
fûe
, 
«me
, (file));

220 i‡(
dÊg
Ë
	`¥ötf
("OPEN %s\n", 
«me
);

221 
fd
 = 
	`›í
(
«me
, 0);

222 i‡(
fd
 == -1) {

223 
îr‹
: 
	`≥º‹
(
«me
);

224 
	`˛o£
(
fd
);

227 i‡(
	`f°©
(
fd
, &
sb
) == -1) {

228 i‡(
dÊg
Ë
	`¥ötf
("Couldn'à°© %s\n", 
«me
);

229 
îr‹
;

231 
size
 = 
sb
.
°_size
;

232 
n
 = 
	`•rötf
(
hbuf
, "HTTP/1.0 200 OK\r\n%s\r\nServer:Ümhttp/0.1\r\nContent-Type: %s\r\nLast-Modified: %s\r\n\r\n",

233 
	`hâp_time
(), 
	`ty≥
(
«me
), 
	`d©e
(&
sb
.
°_mtime
));

234 i‡(
	`wrôe
(
sock
, 
hbuf
, 
n
) !=Ç) {

235 
îr‹
;

237 i‡(
DÊg
 && 
	`isdú
(
«me
)) {

238 
	`dodú
(
«me
, 
sock
);

239 } i‡(
nÊg
) {

240 
	`Áke
(
sock
, 
buf
, 
size
);

241 } i‡((
size
 > 
MMAPS_BETTER
)) {

242 i‡(
	`mm≠_rdwr
(
fd
, 
sock
, 
size
) == -1) {

243 
	`¥ötf
("%†mm≠ faûed\n", 
«me
);

246 
	`rdwr
(
fd
, 
sock
, 
buf
);

248 i‡(
lÊg
Ë
	`logô
(
sock
, 
fûe
, 
size
);

249 
	`˛o£
(
fd
);

251 
	}
}

252 #unde‡
«me


256 
	$isdú
(*
«me
)

258 
°©
 
sb
;

259 i‡(
	`°©
(
«me
, &
sb
) == -1) {

262  (
	`S_ISDIR
(
sb
.
°_mode
));

263 
	}
}

265 #ifde‡
exam∂e


266 <
	gHTML
><
	gHEAD
>

267 <
	gTITLE
>
Index
 
	gof
 /
	gpub
/
	gLöux
</TITLE>

268 </
	gHEAD
><
	gBODY
>

269 <
	gH1
>
Index
 
	gof
 /
	gpub
/
	gLöux
</H1>

270 <
	gPRE
><
IMG
 
	gSRC
="/ic⁄s/bœnk.gif" 
ALT
=" "> 
Name
 
La°
 
modifõd
 
Size
 
Des¸ùti⁄


271 <
HR
>

272 <
IMG
 
SRC
="/ic⁄s/unknown.gif" 
ALT
="[ ]"> <
A
 
HREF
="!INDEX">!
INDEX
</A> 19-
Sï
-97 03:20 3
k


273 <
IMG
 
SRC
="/ic⁄s/ãxt.gif" 
ALT
="[TXT]"> <
A
 
HREF
="!INDEX.html">!
INDEX
.
html
</A> 19-
Sï
-97 03:20 6
k


277 
	$dodú
(*
«me
, 
sock
)

279 
FILE
 *
p
;

280 
buf
[1024];

281 
∑th
[1024];

283 i‡(
dÊg
Ë
	`¥ötf
("dodú(%s)\n", 
«me
);

284 
	`•rötf
(
buf
, "cd %†&&Ü†-1a", 
«me
);

285 
p
 = 
	`p›í
(
buf
, "r");

286 i‡(!
p
 && 
dÊg
Ë
	`¥ötf
("Couldn'àp›í %s\n", 
buf
);

287 
	`•rötf
(
buf
, "\
<HTML><HEAD>\n<TITLE>Index of /%s</TITLE></HEAD><BODY><H1>Index of /%s</H1>\n",

289 
«me
,Çame);

290 
	`wrôe
(
sock
, 
buf
, 
	`°æí
(buf));

291 
	`fgës
(
buf
, (buf), 
p
)) {

292 
buf
[
	`°æí
(buf) - 1] = 0;

293 
	`•rötf
(
∑th
, "/%s/%s", 
«me
, 
buf
);

294 i‡(
dÊg
Ë
	`¥ötf
("\t%s\n", 
∑th
);

295 
	`wrôe
(
sock
, "<A HREF=\"", 9);

296 
	`wrôe
(
sock
, 
∑th
, 
	`°æí
(path));

297 
	`wrôe
(
sock
, "\">", 2);

298 
	`wrôe
(
sock
, 
buf
, 
	`°æí
(buf));

299 
	`wrôe
(
sock
, "</A><BR>\n", 9);

301 
	`p˛o£
(
p
);

302 
	}
}

305 
	$Áke
(
sock
, *
buf
, 
size
)

307 
n
;

309 
size
 > 0) {

310 
n
 = 
	`wrôe
(
sock
, 
buf
, 
size
 > 
XFERSIZE
 ? XFERSIZE : size);

311 i‡(
n
 == -1) {

312 
	`≥º‹
("write on socket");

315 
size
 -
n
;

317 
	}
}

320 
	$rdwr
(
fd
, 
sock
, *
buf
)

322 
ƒód
;

324 (
ƒód
 = 
	`ªad
(
fd
, 
buf
, 
XFERSIZE
)) > 0) {

325 
i
;

327 
i
 = 0; i < 
ƒód
; ) {

328 
nwrŸe
 = 
	`wrôe
(
sock
, 
buf
, 
ƒód
 - 
i
);

330 i‡(
i
 < 0) {

331 
	`exô
(1);

333 
i
 +
nwrŸe
;

336 
	}
}

339 
	$mm≠_rdwr
(
‰om
, 
to
, 
size
)

341 *
buf
;

342 
d⁄e
 = 0, 
wrŸe
;

344 
buf
 = 
	`mm≠
(0, 
size
, 
PROT_READ
, 
MMAP_FLAGS
, 
‰om
, 0);

345 i‡(()
buf
 == -1) {

346 
	`≥º‹
("mmap");

350 
wrŸe
 = 
	`wrôe
(
to
, 
buf
 + 
d⁄e
, 
size
 - done);

351 i‡(
wrŸe
 == -1) {

352 
	`≥º‹
("write");

355 
d⁄e
 +
wrŸe
;

356 } 
d⁄e
 < 
size
);

357 i‡(
	`munm≠
(
buf
, 
size
) == -1) {

358 
	`≥º‹
("unmap");

361 
	}
}

363 
	glogbuf
[64<<10];

364 
	gnbyãs
;

370 
	$logô
(
sock
, *
«me
, 
size
)

372 
buf
[1024 + 16];

373 
sockaddr_ö
 
sö
;

374 
sockÀn_t
 
Àn
 = (
sö
);

376 i‡(
	`gë≥î«me
(
sock
, (
sockaddr
*)&
sö
, &
Àn
) == -1) {

377 
	`≥º‹
("getpeername");

380 
Àn
 = 
	`•rötf
(
buf
, "%u %u %s %u\n",

381 *((*)&
sö
.
sö_addr
), ()
	`time
(0), 
«me
, 
size
);

382 i‡(
nbyãs
 + 
Àn
 >(
logbuf
)) {

383 
	`wrôe
(
logfûe
, 
logbuf
, 
nbyãs
);

384 
nbyãs
 = 0;

386 
	`bc›y
(
buf
, &
logbuf
[
nbyãs
], 
Àn
);

387 
nbyãs
 +
Àn
;

388 
	}
}

390 
	$dõ
()

392 i‡(
nbyãs
) {

393 
	`wrôe
(
logfûe
, 
logbuf
, 
nbyãs
);

394 
nbyãs
 = 0;

396 
	`exô
(1);

397 
	}
}

	@loop_o.c

1 
	~"bích.h
"

4 
	$maö
()

6 
	`¥ötf
("%.8f\n", 
	`l_ovîhód
());

8 
	}
}

	@memsize.c

11 *
	gid
 = "$Id$\n";

13 
	~"bích.h
"

15 
	#CHK
(
x
Ëi‡((xË=-1Ë{ 
	`≥º‹
("x"); 
	`exô
(1); }

	)

17 #i‚def 
TOO_LONG


18 
	#TOO_LONG
 10

	)

21 
	gÆ¨m_åiggîed
 = 0;

23 
timeô
(*
whîe
, 
size_t
 
size
);

24 
touchR™ge
(*
p
, 
size_t
 
ønge
, 
ssize_t
 
°ride
);

25 
ã°_mÆloc
(
size_t
 
size
);

26 
£t_Æ¨m
(
uöt64
 
u£cs
);

27 
˛ór_Æ¨m
();

30 
	$maö
(
ac
, **
av
)

32 *
whîe
;

33 
size_t
 
size
 = 0;

34 
size_t
 
max
 = 0;

35 
size_t
 
dñè
;

37 i‡(
ac
 == 2) {

38 
max
 = 
size
 = 
	`byãs
(
av
[1]) * 1024 * 1024;

40 i‡(
max
 < 1024 * 1024) {

41 
max
 = 
size
 = 1024 * 1024 * 1024;

46 
whîe
 = 0; !
	`ã°_mÆloc
(
size
); size >>= 1) {

47 
max
 = 
size
;

50 
dñè
 = (
size
 >> 21); delta > 0; delta >>= 1) {

51 
uöt64
 
sz
 = (uöt64)
size
 + (uöt64)
dñè
 * 1024 * 1024;

52 
size_t
 
check
 = 
sz
;

53 i‡(
max
 < 
sz
) ;

54 i‡(
check
 < 
sz
 || !
	`ã°_mÆloc
(sz)) ;

55 
size
 = 
sz
;

57 i‡(
whîe
 = 
	`mÆloc
(
size
)) {

58 
	`timeô
(
whîe
, 
size
);

59 
	`‰ì
(
whîe
);

61 
	`exô
 (0);

62 
	}
}

65 
	$timeô
(*
whîe
, 
size_t
 
size
)

67 
sum
 = 0;

68 
size_t
 
n
;

69 
size_t
 
s_¥ev
;

70 
size_t
 
ønge
;

71 
size_t
 
ö¸
 = 1024 * 1024;

72 
size_t
 
∑gesize
 = 
	`gë∑gesize
();

73 
s
;

75 i‡(
size
 < 1024*1024 - 16*1024) {

76 
	`Ârötf
(
°dîr
, "Bad size\n");

80 
ønge
 = 1024 * 1024;

81 
ö¸
 = 1024 * 1024;

82 
	`touchR™ge
(
whîe
, 
ønge
, 
∑gesize
);

83 
ønge
 +
ö¸
;Ñ™gê<
size
;Ñange += incr) {

84 
n
 = 
ønge
 / 
∑gesize
;

85 
	`£t_Æ¨m
(
n
 * 
TOO_LONG
);

86 
	`touchR™ge
(
whîe
 + 
ønge
 - 
ö¸
, in¸, 
∑gesize
);

87 
	`˛ór_Æ¨m
();

88 
	`£t_Æ¨m
(
n
 * 
TOO_LONG
);

89 
	`°¨t
(0);

90 
	`touchR™ge
(
whîe
, 
ønge
, 
∑gesize
);

91 
sum
 = 
	`°›
(0, 0);

92 
	`˛ór_Æ¨m
();

93 i‡((
sum
 / 
n
Ë> 
TOO_LONG
 || 
Æ¨m_åiggîed
) {

94 
size
 = 
ønge
 - 
ö¸
;

97 
s
 = 8 * 1024 * 1024; s <
ønge
; 
s_¥ev
 = s, s *= 2)

98 i‡(
s
 < 
s_¥ev
) ;

99 
ö¸
 = 
s
 / 8;

100 i‡(
ønge
 < 
size
 && sizê<Ñ™gê+ 
ö¸
) {

101 
ö¸
 = 
size
 - 
ønge
;

103 
	`Ârötf
(
°dîr
, "%dMB OK\r", ()(
ønge
/(1024*1024)));

105 
	`Ârötf
(
°dîr
, "\n");

106 
	`¥ötf
("%d\n", ()(
size
>>20));

107 
	}
}

110 
	$touchR™ge
(*
p
, 
size_t
 
ønge
, 
ssize_t
 
°ride
)

112 *
tmp
 = 
p
 + (
°ride
 > 0 ? 0 : 
ønge
 - 1);

113 
size_t
 
dñè
 = (
°ride
 > 0 ? stride : -stride);

115 
ønge
 > 
dñè
 - 1 && !
Æ¨m_åiggîed
) {

116 *
tmp
 = 0;

117 
tmp
 +
°ride
;

118 
ønge
 -
dñè
;

120 
	}
}

123 
	$ã°_mÆloc
(
size_t
 
size
)

125 
fid
[2];

126 
ªsu…
;

127 
°©us
;

128 * 
p
;

130 i‡(
	`pùe
(
fid
) < 0) {

131 * 
p
 = 
	`mÆloc
(
size
);

132 i‡(!
p
)  0;

133 
	`‰ì
(
p
);

136 i‡(
	`f‹k
() == 0) {

137 
	`˛o£
(
fid
[0]);

138 
p
 = 
	`mÆloc
(
size
);

139 
ªsu…
 = (
p
 ? 1 : 0);

140 
	`wrôe
(
fid
[1], &
ªsu…
, ());

141 
	`˛o£
(
fid
[1]);

142 i‡(
p
Ë
	`‰ì
(p);

143 
	`exô
(0);

145 
	`˛o£
(
fid
[1]);

146 i‡(
	`ªad
(
fid
[0], &
ªsu…
, ()) != ())

147 
ªsu…
 = 0;

148 
	`˛o£
(
fid
[0]);

149 
	`waô
(&
°©us
);

150  
ªsu…
;

151 
	}
}

154 
	$gŸÆ¨m
(
s
)

156 
Æ¨m_åiggîed
 = 1;

157 
	}
}

160 
	$£t_Æ¨m
(
uöt64
 
u£cs
)

162 
ôimîvÆ
 
vÆue
;

163 
siga˘i⁄
 
ß
;

165 
Æ¨m_åiggîed
 = 0;

167 
ß
.
ß_h™dÀr
 = 
gŸÆ¨m
;

168 
	`sigem±y£t
(&
ß
.
ß_mask
);

169 
ß
.
ß_Êags
 = 0;

170 
	`siga˘i⁄
(
SIGALRM
, &
ß
, 0);

172 
vÆue
.
ô_öãrvÆ
.
tv_£c
 = 0;

173 
vÆue
.
ô_öãrvÆ
.
tv_u£c
 = 0;

174 
vÆue
.
ô_vÆue
.
tv_£c
 = 
u£cs
 / 1000000;

175 
vÆue
.
ô_vÆue
.
tv_u£c
 = 
u£cs
 % 1000000;

177 
	`£tôimî
(
ITIMER_REAL
, &
vÆue
, 
NULL
);

178 
	}
}

181 
	$˛ór_Æ¨m
()

183 
ôimîvÆ
 
vÆue
;

185 
vÆue
.
ô_öãrvÆ
.
tv_£c
 = 0;

186 
vÆue
.
ô_öãrvÆ
.
tv_u£c
 = 0;

187 
vÆue
.
ô_vÆue
.
tv_£c
 = 0;

188 
vÆue
.
ô_vÆue
.
tv_u£c
 = 0;

190 
	`£tôimî
(
ITIMER_REAL
, &
vÆue
, 
NULL
);

191 
	}
}

	@mhz.c

104 *
	gid
 = "$Id$\n";

106 
	~"bích.h
"

107 
	~<m©h.h
>

109 
	tTYPE
;

111 
	#TEN
(
A
ËA A A A A A A A A 
	)
A

112 
	#HUNDRED
(
A
Ë
	`TEN
(A) TEN(A) TEN(A) TEN(A) TEN(A) \

113 
	`TEN
(
A
ËTEN(AËTEN(AËTEN(AËTEN(A)

	)

115 
	#MHZ
(
M
, 
c⁄ã¡s
) \

117 
«me_
##
	`M
() \

122 
TYPE
** \

123 
_mhz_
##
	`M
 (
n
, 
TYPE
 **
p
, \

124 
TYPE
 
a
, TYPE 
b
) \

126 ; 
n
 > 0; --n) { \

127 
	`HUNDRED
(
c⁄ã¡s
) \

129  
p
 + 
a
 + 
b
; \

133 
mhz_
##
	`M
(
íough
) \

135 
TYPE
 
__i
 = 1; \

136 
TYPE
 *
__x
=(TYPE *)&__x, **
__p
=(TYPE **)__x, **
__q
 = 
NULL
; \

137 
_mhz_
##
	`M
(1, 
__p
, 1, 1); \

138 
	`BENCH1
(
__q
 = 
_mhz_
##
	`M
(
__n
, 
__p
, 
__i
, __i); __¿1;, 
íough
) \

139 
	`u£_poöãr
((*)
__q
); \

140 
	`ßve_n
(100 * 
	`gë_n
()); \

141 }

	)

143 
MHZ
(1, 
p
=(
TYPE
**)*p;)

144 
MHZ
(2, 
a
^=a+a;)

145 
MHZ
(3, 
a
^=a+a+a;)

146 
MHZ
(4, 
a
>>=
b
;)

147 
MHZ
(5, 
a
>>=a+a;)

148 
MHZ
(6, 
a
^˜<<
b
;)

149 
MHZ
(7, 
a
^˜+
b
;)

150 
MHZ
(8, 
a
+=◊+
b
)&07;)

151 
MHZ
(9, 
a
^=
n
;
b
^=a;a|=b;)

153 (*
	tlo›_f
)();

154 
lo›_f
 
lo›s
[] = {

155 
mhz_1
,

156 
mhz_2
,

157 
mhz_3
,

158 
mhz_4
,

159 
mhz_5
,

160 
mhz_6
,

161 
mhz_7
,

162 
mhz_8
,

163 
mhz_9
,

164 
	}
};

167 
	#NTESTS
 ((
lo›s
Ë/ (
lo›_f
))

	)

168 
	#BIT_SET
(
A
,
bô
Ë((AË& 1 << (bô))

	)

181 
	$fûãr_d©a
(
vÆues
[], 
size
)

183 
i
;

184 
ã°s
;

185 
medün
;

186 *
d
 = (*)
	`mÆloc
((
size
 + 1) * ());

188 
i
 = 0; i < 
size
; ++iË
d
[i] = 
vÆues
[i];

189 
	`qs‹t
(
d
, 
size
, (), 
doubÀ_com∑ª
);

191 
medün
 = 
d
[
size
/2];

192 i‡(
size
 > 0 && sizê% 2 =0Ë
medün
 = (medü¿+ 
d
[size/2 - 1]) / 2.0;

194 
	`‰ì
(
d
);

199 
i
 = 0, 
ã°s
 = 0; i < 
size
; ++i)

200 i‡(0.05 * 
medün
 < 
vÆues
[
i
] && values[i] < 20.0 * median) {

201 i‡(
i
 > 
ã°s
Ë
vÆues
[tests] = values[i];

202 
ã°s
++;

205  
ã°s
;

206 
	}
}

214 
	$˛as£s
(
vÆues
[], 
size
)

216 
i
;

217 
medün
;

218 *
d
 = (*)
	`mÆloc
(
size
 * ());

219 
˛assid
;

221 
i
 = 0; i < 
size
; ++iË
d
[i] = 
vÆues
[i];

222 
	`qs‹t
(
d
, 
size
, (), 
doubÀ_com∑ª
);

224 
medün
 = 
d
[
size
/2];

225 i‡(
size
 % 2 =0Ë
medün
 = (medü¿+ 
d
[size/2 - 1]) / 2.0;

230 
i
 = 1, 
˛assid
 = 1; i < 
size
; ++i)

231 i‡((
d
[
i
] - d[i-1]Ë> 0.05 * 
medün
Ë
˛assid
++;

233 
	`‰ì
(
d
);

234  
˛assid
;

235 
	}
}

243 
	$mode
(
vÆues
[], 
n
)

245 
i
, 
n_mode
, 
n_cuº
;

246 
mode
, 
cuº
;

248 
	`qs‹t
(
vÆues
, 
n
, (), 
doubÀ_com∑ª
);

250 
n_mode
 = 1;

251 
n_cuº
 = 1;

252 
mode
 = ()(
vÆues
[0] + 0.5);

253 
cuº
 = ()(
vÆues
[0] + 0.5);

255 
i
 = 1; i < 
n
; ++i) {

256 
v
 = ()(
vÆues
[
i
] + 0.5);

257 i‡(
cuº
 !
v
) {

258 
cuº
 = 
v
;

259 
n_cuº
 = 0;

261 
n_cuº
++;

262 i‡(
n_cuº
 > 
n_mode
) {

263 
mode
 = 
cuº
;

264 
n_mode
 = 
n_cuº
;

268  
mode
;

269 
	}
}

278 
	$¸oss_vÆues
(
vÆues
[], 
size
, **
cvÆues
, *
csize
)

280 
i
, 
j
;

282 *
cvÆues
 = (*)
	`mÆloc
(
size
 * size * ());

283 *
csize
 = 0;

285 
i
 = 0; i < 
size
; ++i) {

286 (*
cvÆues
)[(*
csize
)++] = 
vÆues
[
i
];

288 
j
 = 
i
 + 1; j < 
size
; ++j) {

289 (*
cvÆues
)[(*
csize
)++] = 
	`ABS
(
vÆues
[
i
] - vÆues[
j
]);

292 
	}
}

321 
	$gcd
(
vÆues
[], 
size
)

324 
	#MAX_COUNT
 6

	)

325 
i
, 
n
, 
cou¡
;

326 
mö
, 
ªsu…
, 
mö_chi2
 = 0.0, 
a
, 
b
, 
sig_a
, 
sig_b
, 
chi2
;

327 *
y
, *
x
 = (*)
	`mÆloc
(
size
 * size * ());

330 
ªsu…
 = 
mö
 = 
	`doubÀ_mö
(
vÆues
, 
size
);

333 
	`¸oss_vÆues
(
vÆues
, 
size
, &
y
, &
n
);

336 
y
[
n
++] = 0.0;

338 
cou¡
 = 1; cou¡ < 
MAX_COUNT
; ++count) {

343 
i
 = 0; i < 
n
; ++i) {

344 
m
 = ()(()
cou¡
 * 
y
[
i
] / 
mö
 + 0.5);

345 
x
[
i
] = ()
m
;

349 
	`ªgªssi⁄
(
x
, 
y
, 
NULL
, 
n
, &
a
, &
b
, &
sig_a
, &
sig_b
, &
chi2
);

351 i‡(
cou¡
 =1 || cou¡ * cou¡ * 
chi2
 < 
mö_chi2
) {

352 
ªsu…
 = 
b
;

353 
mö_chi2
 = 
chi2
;

356 
	`‰ì
(
x
);

357 
	`‰ì
(
y
);

358  
ªsu…
;

359 
	}
}

370 
	$compuã_mhz
(
ªsu…_t
 *
r
)

372 
i
, 
j
, 
mhz
[2], 
n
, 
sub£t
, 
¡e°s
;

373 
d©a
[
NTESTS
], 
ªsu…s
[1<<NTESTS];

375 
i
 = 0; i < 2; ++i) {

376 
sub£t
 = 0, 
¡e°s
 = 0; sub£à< (1<<
NTESTS
); ++subset) {

377 
j
 = 0, 
n
 = 0; j < 
NTESTS
; ++j)

378 i‡(
	`BIT_SET
(
sub£t
, 
j
Ë&& 
r
[j].
N
 > 
TRIES
/2)

379 
d©a
[
n
++] = 
r
[
j
].
v
[r[j].
N
-1-
i
].
u
 / ()r[j].v[r[j].N-1-i].n;

380 i‡(
n
 < 2

381 || (
n
 = 
	`fûãr_d©a
(
d©a
,Ç)) < 2

382 ||
	`˛as£s
(
d©a
, 
n
) < 2)

384 
ªsu…s
[
¡e°s
++] = 1.0 / 
	`gcd
(
d©a
, 
n
);

386 
mhz
[
i
] = 
	`mode
(
ªsu…s
, 
¡e°s
);

389 i‡(
	`ABS
(
mhz
[0] - mhz[1]) / ()mhz[0] <= 0.01

390 || 
	`ABS
(
mhz
[0] - mhz[1]) <= 1)

391  
mhz
[0];

394 
	}
}

397 
	$ßve_d©a
(
ªsu…_t
* 
d©a
,Ñesu…_t* 
d©a_ßve
)

399 
i
;

401 
i
 = 0; i < 
NTESTS
; ++i) {

402 
d©a_ßve
[
i
] = 
d©a
[i];

404 
	}
}

407 
	$¥öt_d©a
(
mhz
, 
ªsu…_t
* 
d©a
)

409 
i
, 
j
;

410 *
CPU_«me
 = "CPU";

411 *
u«me
 = "uname";

412 *
emaû
 = "email";

413 
•ìd
 = -1;

414 *
«mes
[
NTESTS
];

416 
«mes
[0] = 
	`«me_1
();

417 
«mes
[1] = 
	`«me_2
();

418 
«mes
[2] = 
	`«me_3
();

419 
«mes
[3] = 
	`«me_4
();

420 
«mes
[4] = 
	`«me_5
();

421 
«mes
[5] = 
	`«me_6
();

422 
«mes
[6] = 
	`«me_7
();

423 
«mes
[7] = 
	`«me_8
();

424 
«mes
[8] = 
	`«me_9
();

426 
	`¥ötf
("/* \"%s\", \"%s\", \"%s\", %d, %.0f, %d, %f, %lu */\n",

427 
CPU_«me
, 
u«me
, 
emaû
, 
•ìd
,

428 
mhz
, 
	`gë_íough
(0), 
	`l_ovîhód
(), ()
	`t_ovîhód
());

429 
	`¥ötf
("result_t* data[] = { \n");

430 
i
 = 0; i < 
NTESTS
; ++i) {

431 
	`¥ötf
("\t/* %†*/ { %d, {", 
«mes
[
i
], 
d©a
[i].
N
);

432 
j
 = 0; j < 
d©a
[
i
].
N
; ++j) {

433 
	`¥ötf
("\n\t\t{ /* %‡*/ %lu, %lu}", 
d©a
[
i
].
v
[
j
].
u
 / (100. * d©a[i].v[j].
n
), ()data[i].v[j].u, ()data[i].v[j].n);

434 i‡(
j
 < 
TRIES
 - 1Ë
	`¥ötf
(", ");

436 i‡(
i
 < 
NTESTS
 - 1Ë
	`¥ötf
("}},\n");

437 
	`¥ötf
("}}\n");

439 
	`¥ötf
("};\n");

440 
	}
}

443 
	$maö
(
ac
, **
av
)

445 
c
, 
i
, 
j
, 
k
, 
mhz
 = -1;

446 
ru¡ime
;

447 
ªsu…_t
 
d©a
[
NTESTS
];

448 
ªsu…_t
 
d©a_ßve
[
NTESTS
];

449 *
ußge
 = "[-d] [-c]\n";

451 
	`puãnv
("LOOP_O=0.0");

453 
ru¡ime
 = (
NTESTS
 * 
TRIES
 * 3 * 
	`gë_íough
(0)) / 1000000.;

454 i‡(
ru¡ime
 > 3.) {

455 
	`Ârötf
(
°dîr
, "mhz: shouldÅakê≠¥oxim©ñy %.0‡£c⁄ds\n", 
ru¡ime
);

459 
i
 = 0; i < 3 && 
mhz
 < 0; ++i) {

461 
j
 = 0; j < 
NTESTS
; ++j)

462 
	`ö£πöô
(&
d©a
[
j
]);

470 
j
 = 0; j < 
TRIES
; ++j) {

471 
k
 = 0; k < 
NTESTS
; ++k) {

472 (*
lo›s
[
k
])(0);

473 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
d©a
[
k
]);

476 
	`ßve_d©a
(
d©a
, 
d©a_ßve
);

477 
mhz
 = 
	`compuã_mhz
(
d©a
);

480 –
c
 = 
	`gë›t
(
ac
, 
av
, "cd")Ë!
EOF
) {

481 
c
) {

483 i‡(
mhz
 > 0) {

484 
	`¥ötf
("%.4f\n", 1000. / ()
mhz
);

485 
mhz
 = 0;

489 
	`¥öt_d©a
(
mhz
, 
d©a_ßve
);

492 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

497 i‡(
mhz
 < 0) {

498 
	`¥ötf
("-1 SystemÅoo busy\n");

499 
	`exô
(1);

502 i‡(
mhz
 > 0) {

503 
	`¥ötf
("%d MHz, %.4fÇanosec clock\n",

504 
mhz
, 1000. / ()mhz);

506 
	`exô
(0);

507 
	}
}

	@msleep.c

1 
	~"bích.h
"

4 
	$maö
(
ac
, **
av
)

6 #if 
	`deföed
(
sgi
Ë|| deföed(
sun
Ë|| deföed(
löux
)

7 
	`u¶ìp
(
	`©oi
(
av
[1]) * 1000);

10 
fd_£t
 
£t
;

11 
fd
;

12 
timevÆ
 
tv
;

14 
tv
.
tv_£c
 = 0;

15 
tv
.
tv_u£c
 = 
	`©oi
(
av
[1]) * 1000;

16 
	`FD_ZERO
(&
£t
);

17 
	`FD_SET
(0, &
£t
);

18 
	`£À˘
(1, &
£t
, 0, 0, &
tv
);

21 
	}
}

	@names.h

1 *
	g«mes
[] = {

	@par_mem.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

17 
compuã_times
(
mem_°©e
* 
°©e
, * 
éb_time
, * 
ˇche_time
);

28 
	$maö
(
ac
, **
av
)

30 
i
;

31 
c
;

32 
w¨mup
 = 0;

33 
ª≥tôi⁄s
 = (1000000 <
	`gë_íough
(0Ë? 1 : 
TRIES
);

34 
size_t
 
maxÀn
 = 64 * 1024 * 1024;

35 
∑r
;

36 
mem_°©e
 
°©e
;

37 *
ußge
 = "[-L <line size>] [-MÜen[K|M]] [-W <warmup>] [-N <repetitions>]\n";

39 
°©e
.
löe
 = 
	`gë∑gesize
() / 16;

40 
°©e
.
∑gesize
 = 
	`gë∑gesize
();

42 –
c
 = 
	`gë›t
(
ac
, 
av
, "L:M:W:N:")Ë!
EOF
) {

43 
c
) {

45 
°©e
.
löe
 = 
	`©oi
(
›èrg
);

46 i‡(
°©e
.
löe
 < (*))

47 
°©e
.
löe
 = (*);

50 
maxÀn
 = 
	`byãs
(
›èrg
);

53 
w¨mup
 = 
	`©oi
(
›èrg
);

56 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

59 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

64 
i
 = 
MAX_MEM_PARALLELISM
 * 
°©e
.
löe
; i <
maxÀn
; i<<=1) {

65 
∑r
 = 
	`∑r_mem
(
i
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

67 i‡(
∑r
 > 0.) {

68 
	`Ârötf
(
°dîr
, "%.6f %.2f\n",

69 
i
 / (1000. * 1000.), 
∑r
);

73 
	`exô
(0);

74 
	}
}

	@par_ops.c

11 *
	gid
 = "$Id$\n";

13 
	~"bích.h
"

15 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

17 
	#FIVE
(
m
Ëm m m m 
	)
m

18 
	#TEN
(
m
Ë
	`FIVE
(mËFIVE(m)

	)

19 
	#FIFTY
(
m
Ë
	`TEN
(mËTEN(mËTEN(mËTEN(mËTEN(m)

	)

20 
	#HUNDRED
(
m
Ë
	`FIFTY
(mËFIFTY(m)

	)

22 
	#MAX_LOAD_PARALLELISM
 16

	)

24 
	s_°©e
 {

25 
	mN
;

26 
	mM
;

27 
	mK
;

28 
	möt_d©a
[
MAX_LOAD_PARALLELISM
];

29 
	mdoubÀ_d©a
[
MAX_LOAD_PARALLELISM
];

33 
	$max_∑øŒñism
(
bíchmp_f
* 
bíchm¨ks
,

34 
w¨mup
, 
ª≥tôi⁄s
, * 
cookõ
)

36 
i
;

37 
ba£löe
, 
max_lﬂd_∑øŒñism
, 
lﬂd_∑øŒñism
;

39 
max_lﬂd_∑øŒñism
 = 1.;

41 
i
 = 0; i < 
MAX_LOAD_PARALLELISM
; ++i) {

42 
	`bíchmp
(
öôülize
, 
bíchm¨ks
[
i
], 
NULL
,

43 0, 1, 
w¨mup
, 
ª≥tôi⁄s
, 
cookõ
);

44 
	`ßve_möimum
();

46 i‡(
	`gëtime
() == 0)

49 i‡(
i
 == 0) {

50 
ba£löe
 = ()
	`gëtime
(Ë/ ()
	`gë_n
();

52 
lﬂd_∑øŒñism
 = 
ba£löe
;

53 
lﬂd_∑øŒñism
 /()
	`gëtime
();

54 
lﬂd_∑øŒñism
 *()((
i
 + 1Ë* 
	`gë_n
());

55 i‡(
lﬂd_∑øŒñism
 > 
max_lﬂd_∑øŒñism
) {

56 
max_lﬂd_∑øŒñism
 = 
lﬂd_∑øŒñism
;

60  
max_lﬂd_∑øŒñism
;

61 
	}
}

63 
	#REPEAT_0
(
m
Ë
	`m
(0)

	)

64 
	#REPEAT_1
(
m
Ë
	`REPEAT_0
(mË
	`m
(1)

	)

65 
	#REPEAT_2
(
m
Ë
	`REPEAT_1
(mË
	`m
(2)

	)

66 
	#REPEAT_3
(
m
Ë
	`REPEAT_2
(mË
	`m
(3)

	)

67 
	#REPEAT_4
(
m
Ë
	`REPEAT_3
(mË
	`m
(4)

	)

68 
	#REPEAT_5
(
m
Ë
	`REPEAT_4
(mË
	`m
(5)

	)

69 
	#REPEAT_6
(
m
Ë
	`REPEAT_5
(mË
	`m
(6)

	)

70 
	#REPEAT_7
(
m
Ë
	`REPEAT_6
(mË
	`m
(7)

	)

71 
	#REPEAT_8
(
m
Ë
	`REPEAT_7
(mË
	`m
(8)

	)

72 
	#REPEAT_9
(
m
Ë
	`REPEAT_8
(mË
	`m
(9)

	)

73 
	#REPEAT_10
(
m
Ë
	`REPEAT_9
(mË
	`m
(10)

	)

74 
	#REPEAT_11
(
m
Ë
	`REPEAT_10
(mË
	`m
(11)

	)

75 
	#REPEAT_12
(
m
Ë
	`REPEAT_11
(mË
	`m
(12)

	)

76 
	#REPEAT_13
(
m
Ë
	`REPEAT_12
(mË
	`m
(13)

	)

77 
	#REPEAT_14
(
m
Ë
	`REPEAT_13
(mË
	`m
(14)

	)

78 
	#REPEAT_15
(
m
Ë
	`REPEAT_14
(mË
	`m
(15)

	)

80 
	#BENCHMARK
(
bíchm¨k
,
N
,
ª≥©
) \

81 
bíchm¨k
##
_
##
	`N
(
ôî_t
 
ôî©i⁄s
, *
cookõ
) \

83 
ôî_t
 
i
 = 
ôî©i⁄s
; \

84 
_°©e
* 
°©e
 = (_°©e*)
cookõ
; \

85 
	`ª≥©
(
DECLARE
); \

87 
	`ª≥©
(
INIT
); \

88 
i
-- > 0) { \

89 
	`ª≥©
(
PREAMBLE
); \

90 
	`TEN
(
	`ª≥©
(
BODY
)); \

93 
	`ª≥©
(
SAVE
); \

94 }

	)

96 
	#PARALLEL_BENCHMARKS
(
bíchm¨k
) \

97 
	`BENCHMARK
(
bíchm¨k
, 0, 
REPEAT_0
) \

98 
	`BENCHMARK
(
bíchm¨k
, 1, 
REPEAT_1
) \

99 
	`BENCHMARK
(
bíchm¨k
, 2, 
REPEAT_2
) \

100 
	`BENCHMARK
(
bíchm¨k
, 3, 
REPEAT_3
) \

101 
	`BENCHMARK
(
bíchm¨k
, 4, 
REPEAT_4
) \

102 
	`BENCHMARK
(
bíchm¨k
, 5, 
REPEAT_5
) \

103 
	`BENCHMARK
(
bíchm¨k
, 6, 
REPEAT_6
) \

104 
	`BENCHMARK
(
bíchm¨k
, 7, 
REPEAT_7
) \

105 
	`BENCHMARK
(
bíchm¨k
, 8, 
REPEAT_8
) \

106 
	`BENCHMARK
(
bíchm¨k
, 9, 
REPEAT_9
) \

107 
	`BENCHMARK
(
bíchm¨k
, 10, 
REPEAT_10
) \

108 
	`BENCHMARK
(
bíchm¨k
, 11, 
REPEAT_11
) \

109 
	`BENCHMARK
(
bíchm¨k
, 12, 
REPEAT_12
) \

110 
	`BENCHMARK
(
bíchm¨k
, 13, 
REPEAT_13
) \

111 
	`BENCHMARK
(
bíchm¨k
, 14, 
REPEAT_14
) \

112 
	`BENCHMARK
(
bíchm¨k
, 15, 
REPEAT_15
) \

114 
bíchmp_f
 
bíchm¨k
##
_bíchm¨ks
[] = { \

115 
bíchm¨k
##
_0
, \

116 
bíchm¨k
##
_1
, \

117 
bíchm¨k
##
_2
, \

118 
bíchm¨k
##
_3
, \

119 
bíchm¨k
##
_4
, \

120 
bíchm¨k
##
_5
, \

121 
bíchm¨k
##
_6
, \

122 
bíchm¨k
##
_7
, \

123 
bíchm¨k
##
_8
, \

124 
bíchm¨k
##
_9
, \

125 
bíchm¨k
##
_10
, \

126 
bíchm¨k
##
_11
, \

127 
bíchm¨k
##
_12
, \

128 
bíchm¨k
##
_13
, \

129 
bíchm¨k
##
_14
, \

130 
bíchm¨k
##
_15
 \

131 };

	)

133 #unde‡
BODY


134 #unde‡
DECLARE


135 #unde‡
INIT


136 #unde‡
PREAMBLE


137 #unde‡
SAVE


139 
	#BODY
(
N
Ë
r
##N ^
s
##N; s##N ^r##N;Ñ##N |s##N;

	)

140 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

141 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] + 1; 
s
##N = (N+1Ë+Ñ##N;

	)

142 
	#PREAMBLE
(
N
)

	)

143 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

144 
	$PARALLEL_BENCHMARKS
(
öãgî_bô
)

145 #unde‡
BODY


146 #unde‡
DECLARE


147 #unde‡
INIT


148 #unde‡
PREAMBLE


149 #unde‡
SAVE


151 
	#BODY
(
N
Ë
a
##N +
b
##N; b##N -a##N;

	)

152 
	#DECLARE
(
N
Ë
a
##N, 
b
##N;

	)

153 
	#INIT
(
N
Ë
a
##N = 
°©e
->
öt_d©a
[N] + 57; \

154 
b
##
N
 = 
°©e
->
öt_d©a
[N] + 31;

	)

155 
	#PREAMBLE
(
N
)

	)

156 
	#SAVE
(
N
Ë
	`u£_öt
(
a
##N + 
b
##N);

	)

157 
	$PARALLEL_BENCHMARKS
(
öãgî_add
)

158 #unde‡
BODY


159 #unde‡
DECLARE


160 #unde‡
INIT


161 #unde‡
PREAMBLE


162 #unde‡
SAVE


164 
	#BODY
(
N
Ë
r
##N *
s
##N;

	)

165 
	#DECLARE
(
N
Ë
r
##N, 
s
##N, 
t
##N;

	)

166 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] - N + 1 + 37431; \

167 
s
##
N
 = 
°©e
->
öt_d©a
[N] - N + 1 + 4; \

168 
t
##
N
 = 
r
##N * 
s
##N * s##N * s##N * s##N * s##N * \

169 
s
##
N
 * s##N * s##N * s##N * s##N - 
r
##N; \

170 
r
##
N
 +
t
##N;

	)

171 
	#PREAMBLE
(
N
Ë
r
##N -
t
##N;

	)

172 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

173 
	$PARALLEL_BENCHMARKS
(
öãgî_mul
)

174 #unde‡
BODY


175 #unde‡
DECLARE


176 #unde‡
INIT


177 #unde‡
PREAMBLE


178 #unde‡
SAVE


180 
	#BODY
(
N
Ë
r
##N = (
s
##N /Ñ##N);

	)

181 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

182 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] - N + 1 + 36; \

183 
s
##
N
 = (
r
##N + 1Ë<< 20;

	)

184 
	#PREAMBLE
(
N
)

	)

185 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

186 
	$PARALLEL_BENCHMARKS
(
öãgî_div
)

187 #unde‡
BODY


188 #unde‡
DECLARE


189 #unde‡
INIT


190 #unde‡
PREAMBLE


191 #unde‡
SAVE


193 
	#BODY
(
N
Ë
r
##N %
s
##N;Ñ##N |s##N;

	)

194 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

195 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] - N + 1 + 
ôî©i⁄s
; \

196 
s
##
N
 = 
°©e
->
öt_d©a
[N] - N + 1 + 62;

	)

197 
	#PREAMBLE
(
N
)

	)

198 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

199 
	$PARALLEL_BENCHMARKS
(
öãgî_mod
)

200 #unde‡
BODY


201 #unde‡
DECLARE


202 #unde‡
INIT


203 #unde‡
PREAMBLE


204 #unde‡
SAVE


206 
	#BODY
(
N
Ë
r
##N ^
i
##N; 
s
##N ^r##N;Ñ##N |s##N;

	)

207 
	#DECLARE
(
N
Ë
öt64
 
r
##N, 
s
##N, 
i
##N;

	)

208 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] - N + 1; \

209 
r
##
N
 |=Ñ##N << 32; \

210 
s
##
N
 = 
ôî©i⁄s
 + 
°©e
->
öt_d©a
[N] - N + 1; \

211 
s
##
N
 |= s##N << 32; \

212 
i
##
N
 = (
s
##N << 2Ë- (
öt64
)1;

	)

213 
	#PREAMBLE
(
N
Ë
i
##N -1;

	)

214 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

215 
	$PARALLEL_BENCHMARKS
(
öt64_bô
)

216 #unde‡
BODY


217 #unde‡
DECLARE


218 #unde‡
INIT


219 #unde‡
PREAMBLE


220 #unde‡
SAVE


222 
	#BODY
(
N
Ë
a
##N +
b
##N; b##N -a##N;

	)

223 
	#DECLARE
(
N
Ë
öt64
 
a
##N, 
b
##N;

	)

224 
	#INIT
(
N
Ë
a
##N = 
°©e
->
öt_d©a
[N] - N + 1 + 37420; \

225 
a
##
N
 +(
öt64
)(0xFE + 
°©e
->
öt_d©a
[N] - N + 1)<<30; \

226 
b
##
N
 = 
°©e
->
öt_d©a
[N] - N + 1 + 21698324; \

227 
b
##
N
 +(
öt64
)(0xFFFE + 
°©e
->
öt_d©a
[N] - N + 1)<<29;

	)

228 
	#PREAMBLE
(
N
)

	)

229 
	#SAVE
(
N
Ë
	`u£_öt
(()
a
##N + ()
b
##N);

	)

230 
	$PARALLEL_BENCHMARKS
(
öt64_add
)

231 #unde‡
BODY


232 #unde‡
DECLARE


233 #unde‡
INIT


234 #unde‡
PREAMBLE


235 #unde‡
SAVE


237 
	#BODY
(
N
Ë
r
##N = (r##N * 
s
##N);

	)

238 
	#DECLARE
(
N
Ë
öt64
 
r
##N, 
s
##N, 
t
##N;

	)

239 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] - N + 1 + 37420; \

240 
r
##
N
 +(
öt64
)(
°©e
->
öt_d©a
[N] - N + 1 + 6)<<32; \

241 
s
##
N
 = 
°©e
->
öt_d©a
[N] - N + 1 + 4; \

242 
t
##
N
 = 
r
##N * 
s
##N * s##N * s##N * s##N * s##N * \

243 
s
##
N
 * s##N * s##N * s##N * s##N - 
r
##N; \

244 
r
##
N
 +
t
##N;

	)

245 
	#PREAMBLE
(
N
Ë
r
##N -
t
##N;

	)

246 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

247 
	$PARALLEL_BENCHMARKS
(
öt64_mul
)

248 #unde‡
BODY


249 #unde‡
DECLARE


250 #unde‡
INIT


251 #unde‡
PREAMBLE


252 #unde‡
SAVE


254 
	#BODY
(
N
Ë
r
##N = (
s
##N /Ñ##N);

	)

255 
	#DECLARE
(
N
Ë
öt64
 
r
##N, 
s
##N;

	)

256 
	#INIT
(
N
Ë
r
##N = 
°©e
->
öt_d©a
[N] - N + 37; \

257 
r
##
N
 +=Ñ##N << 33; \

258 
s
##
N
 = (
r
##N + 17Ë<< 13;

	)

259 
	#PREAMBLE
(
N
)

	)

260 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

261 
	$PARALLEL_BENCHMARKS
(
öt64_div
)

262 #unde‡
BODY


263 #unde‡
DECLARE


264 #unde‡
INIT


265 #unde‡
PREAMBLE


266 #unde‡
SAVE


268 
	#BODY
(
N
Ë
r
##N = (
s
##N %Ñ##NË^Ñ##N;

	)

269 
	#DECLARE
(
N
Ë
öt64
 
r
##N, 
s
##N;

	)

270 
	#INIT
(
N
Ë
r
##N = (
öt64
)
°©e
->
öt_d©a
[N]; 
s
##N = 0;

	)

271 
	#PREAMBLE
(
N
Ë
s
##N++;

	)

272 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

273 
	$PARALLEL_BENCHMARKS
(
öt64_mod
)

274 #unde‡
BODY


275 #unde‡
DECLARE


276 #unde‡
INIT


277 #unde‡
PREAMBLE


278 #unde‡
SAVE


280 
	#BODY
(
N
Ë
r
##N +r##N;

	)

281 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

282 
	#INIT
(
N
Ë
r
##N = ()
°©e
->
doubÀ_d©a
[N] + 1023.0; \

283 
s
##
N
 = ()
°©e
->
K
;

	)

284 
	#PREAMBLE
(
N
Ë
r
##N +
s
##N;

	)

285 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

286 
	$PARALLEL_BENCHMARKS
(
Êﬂt_add
)

287 #unde‡
BODY


288 #unde‡
DECLARE


289 #unde‡
INIT


290 #unde‡
PREAMBLE


291 #unde‡
SAVE


293 
	#BODY
(
N
Ë
r
##N *r##N;Ñ##N *
s
##N;

	)

294 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

295 
	#INIT
(
N
Ë
r
##N = 8.0‡* ()
°©e
->
doubÀ_d©a
[N]; \

296 
s
##
N
 = 0.125 * ()
°©e
->
M
 * sèã->
doubÀ_d©a
[N] / 1000.0;

	)

297 
	#PREAMBLE
(
N
)

	)

298 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N); u£_öt(()
s
##N);

	)

299 
	$PARALLEL_BENCHMARKS
(
Êﬂt_mul
)

300 #unde‡
BODY


301 #unde‡
DECLARE


302 #unde‡
INIT


303 #unde‡
PREAMBLE


304 #unde‡
SAVE


306 
	#BODY
(
N
Ë
r
##N = 
s
##N /Ñ##N;

	)

307 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

308 
	#INIT
(
N
Ë
r
##N = 1.41421356‡* ()
°©e
->
doubÀ_d©a
[N]; \

309 
s
##
N
 = 3.14159265‡* ()(
°©e
->
öt_d©a
[N] - N + 1);

	)

310 
	#PREAMBLE
(
N
)

	)

311 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N); u£_öt(()
s
##N);

	)

312 
	$PARALLEL_BENCHMARKS
(
Êﬂt_div
)

313 #unde‡
BODY


314 #unde‡
DECLARE


315 #unde‡
INIT


316 #unde‡
PREAMBLE


317 #unde‡
SAVE


319 
	#BODY
(
N
Ë
r
##N +r##N;

	)

320 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

321 
	#INIT
(
N
Ë
r
##N = 
°©e
->
doubÀ_d©a
[N] + 1023.; \

322 
s
##
N
 = ()
°©e
->
K
;

	)

323 
	#PREAMBLE
(
N
Ë
r
##N +
s
##N;

	)

324 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N);

	)

325 
	$PARALLEL_BENCHMARKS
(
doubÀ_add
)

326 #unde‡
BODY


327 #unde‡
DECLARE


328 #unde‡
INIT


329 #unde‡
PREAMBLE


330 #unde‡
SAVE


332 
	#BODY
(
N
Ë
r
##N *r##N;Ñ##N *
s
##N;

	)

333 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

334 
	#INIT
(
N
Ë
r
##N = 8.0‡* 
°©e
->
doubÀ_d©a
[N]; \

335 
s
##
N
 = 0.125 * ()
°©e
->
M
 * sèã->
doubÀ_d©a
[N] / 1000.0;

	)

336 
	#PREAMBLE
(
N
)

	)

337 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N); u£_öt(()
s
##N);

	)

338 
	$PARALLEL_BENCHMARKS
(
doubÀ_mul
)

339 #unde‡
BODY


340 #unde‡
DECLARE


341 #unde‡
INIT


342 #unde‡
PREAMBLE


343 #unde‡
SAVE


345 
	#BODY
(
N
Ë
r
##N = 
s
##N /Ñ##N;

	)

346 
	#DECLARE
(
N
Ë
r
##N, 
s
##N;

	)

347 
	#INIT
(
N
Ë
r
##N = 1.41421356 * 
°©e
->
doubÀ_d©a
[N]; \

348 
s
##
N
 = 3.14159265 * ()(
°©e
->
öt_d©a
[N] - N + 1);

	)

349 
	#PREAMBLE
(
N
)

	)

350 
	#SAVE
(
N
Ë
	`u£_öt
(()
r
##N); u£_öt(()
s
##N);

	)

351 
	$PARALLEL_BENCHMARKS
(
doubÀ_div
)

352 #unde‡
BODY


353 #unde‡
DECLARE


354 #unde‡
INIT


355 #unde‡
PREAMBLE


356 #unde‡
SAVE


360 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

362 
_°©e
 *
°©e
 = (_°©e*)
cookõ
;

363 
i
;

365 i‡(
ôî©i⁄s
) ;

367 
i
 = 0; i < 
MAX_LOAD_PARALLELISM
; ++i) {

368 
°©e
->
öt_d©a
[
i
] = i+1;

369 
°©e
->
doubÀ_d©a
[
i
] = 1.;

371 
	}
}

374 
	$maö
(
ac
, **
av
)

376 
c
;

377 
w¨mup
 = 0;

378 
ª≥tôi⁄s
 = (1000000 <
	`gë_íough
(0Ë? 1 : 
TRIES
);

379 
∑r
;

380 
_°©e
 
°©e
;

381 *
ußge
 = "[-W <warmup>] [-N <repetitions>]\n";

383 
°©e
.
N
 = 1;

384 
°©e
.
M
 = 1000;

385 
°©e
.
K
 = -1023;

387 –
c
 = 
	`gë›t
(
ac
, 
av
, "W:N:")Ë!
EOF
) {

388 
c
) {

390 
w¨mup
 = 
	`©oi
(
›èrg
);

393 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

396 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

401 
∑r
 = 
	`max_∑øŒñism
(
öãgî_bô_bíchm¨ks
,

402 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

403 i‡(
∑r
 > 0.)

404 
	`Ârötf
(
°dîr
, "öãgî bôÖ¨ÆÀlism: %.2f\n", 
∑r
);

406 
∑r
 = 
	`max_∑øŒñism
(
öãgî_add_bíchm¨ks
,

407 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

408 i‡(
∑r
 > 0.)

409 
	`Ârötf
(
°dîr
, "öãgîáddÖ¨ÆÀlism: %.2f\n", 
∑r
);

411 
∑r
 = 
	`max_∑øŒñism
(
öãgî_mul_bíchm¨ks
,

412 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

413 i‡(
∑r
 > 0.)

414 
	`Ârötf
(
°dîr
, "öãgî mu»∑øŒñism: %.2f\n", 
∑r
);

416 
∑r
 = 
	`max_∑øŒñism
(
öãgî_div_bíchm¨ks
,

417 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

418 i‡(
∑r
 > 0.)

419 
	`Ârötf
(
°dîr
, "öãgî divÖ¨ÆÀlism: %.2f\n", 
∑r
);

421 
∑r
 = 
	`max_∑øŒñism
(
öãgî_mod_bíchm¨ks
,

422 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

423 i‡(
∑r
 > 0.)

424 
	`Ârötf
(
°dîr
, "öãgî modÖ¨ÆÀlism: %.2f\n", 
∑r
);

426 
∑r
 = 
	`max_∑øŒñism
(
öt64_bô_bíchm¨ks
,

427 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

428 i‡(
∑r
 > 0.)

429 
	`Ârötf
(
°dîr
, "öt64 bôÖ¨ÆÀlism: %.2f\n", 
∑r
);

431 
∑r
 = 
	`max_∑øŒñism
(
öt64_add_bíchm¨ks
,

432 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

433 i‡(
∑r
 > 0.)

434 
	`Ârötf
(
°dîr
, "öt64áddÖ¨ÆÀlism: %.2f\n", 
∑r
);

436 
∑r
 = 
	`max_∑øŒñism
(
öt64_mul_bíchm¨ks
,

437 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

438 i‡(
∑r
 > 0.)

439 
	`Ârötf
(
°dîr
, "öt64 mu»∑øŒñism: %.2f\n", 
∑r
);

441 
∑r
 = 
	`max_∑øŒñism
(
öt64_div_bíchm¨ks
,

442 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

443 i‡(
∑r
 > 0.)

444 
	`Ârötf
(
°dîr
, "öt64 divÖ¨ÆÀlism: %.2f\n", 
∑r
);

446 
∑r
 = 
	`max_∑øŒñism
(
öt64_mod_bíchm¨ks
,

447 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

448 i‡(
∑r
 > 0.)

449 
	`Ârötf
(
°dîr
, "öt64 modÖ¨ÆÀlism: %.2f\n", 
∑r
);

451 
∑r
 = 
	`max_∑øŒñism
(
Êﬂt_add_bíchm¨ks
,

452 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

453 i‡(
∑r
 > 0.)

454 
	`Ârötf
(
°dîr
, "ÊﬂàaddÖ¨ÆÀlism: %.2f\n", 
∑r
);

456 
∑r
 = 
	`max_∑øŒñism
(
Êﬂt_mul_bíchm¨ks
,

457 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

458 i‡(
∑r
 > 0.)

459 
	`Ârötf
(
°dîr
, "Êﬂàmu»∑øŒñism: %.2f\n", 
∑r
);

461 
∑r
 = 
	`max_∑øŒñism
(
Êﬂt_div_bíchm¨ks
,

462 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

463 i‡(
∑r
 > 0.)

464 
	`Ârötf
(
°dîr
, "ÊﬂàdivÖ¨ÆÀlism: %.2f\n", 
∑r
);

466 
∑r
 = 
	`max_∑øŒñism
(
doubÀ_add_bíchm¨ks
,

467 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

468 i‡(
∑r
 > 0.)

469 
	`Ârötf
(
°dîr
, "doubÀáddÖ¨ÆÀlism: %.2f\n", 
∑r
);

471 
∑r
 = 
	`max_∑øŒñism
(
doubÀ_mul_bíchm¨ks
,

472 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

473 i‡(
∑r
 > 0.)

474 
	`Ârötf
(
°dîr
, "doubÀ mu»∑øŒñism: %.2f\n", 
∑r
);

476 
∑r
 = 
	`max_∑øŒñism
(
doubÀ_div_bíchm¨ks
,

477 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

478 i‡(
∑r
 > 0.)

479 
	`Ârötf
(
°dîr
, "doubÀ divÖ¨ÆÀlism: %.2f\n", 
∑r
);

483 
	}
}

	@rhttp.c

27 *
	gid
 = "$Id$\n";

29 
	~"bích.h
"

32 
	$maö
(
ac
, **
av
)

34 *
«me
 = 
av
[0], *
£rvî
, *
¥og
;

35 
i
, 
j
;

36 
uöt64
 
tŸÆ
 = 0;

37 
uöt64
 
u£cs
 = 0;

38 *
¨gs
[1024];

40 i‡(
ac
 < 5) {

41 
ußge
: 
	`Ârötf
(
°dîr
,

43 
«me
);

44 
	`exô
(1);

46 
£rvî
 = 
av
[1];

47 
av
++, 
ac
--;

48 i‡(
	`©oi
(
av
[1]) != 0) {

49 
¥og
 = 
av
[1];

50 
av
++, 
ac
--;

52 
¥og
 = "80";

54 
i
 = 1; i < 
ac
; ++i) {

55 i‡(!
	`°rcmp
("-p", 
av
[
i
])) {

56 
i
++;

60 
¨gs
[0] = "rsh";

61 
¨gs
[2] = "http";

62 
¨gs
[3] = 
£rvî
;

63 
j
 = 4;

64 
i
 < 
ac
) {

65 
¨gs
[
j
++] = 
av
[
i
++];

67 
¨gs
[
j
++] = 
¥og
;

68 
¨gs
[
j
] = 0;

69 
i
 = 1; i < 
ac
; ++i) {

70 i‡(!
	`°rcmp
("-p", 
av
[
i
])) {

73 
¨gs
[1] = 
av
[
i
];

74 
j
 = 0; 
¨gs
[j]; j++) {

75 
	`¥ötf
("%†", 
¨gs
[
j
]);

77 
	`¥ötf
("\n");

78 i‡(
	`f‹k
() == 0) {

79 
«me
[30];

81 
	`•rötf
(
«me
, "/tmp/rhâp%d", 
i
);

82 
	`¸ót
(
«me
, 0666);

83 
	`˛o£
(2);

84 
	`dup
(1);

85 
	`execvp
(
¨gs
[0],árgs);

86 
	`≥º‹
(
¨gs
[0]);

87 
	`exô
(1);

90 
i
 = 1; i < 
ac
; ++i) {

91 i‡(!
	`°rcmp
("-p", 
av
[
i
])) {

94 
	`waô
(0);

96 
	`sy°em
("cat /tmp/rhttp*;Ñm /tmp/rhttp*");

97 
	`exô
(1);

98 
i
 = 1; i < 
ac
; ++i) {

99 
fd
, 
n
, 
m
 = 0;

100 
f1
 = 0, 
f2
 = 0;

101 
buf
[30];

103 i‡(!
	`°rcmp
("-p", 
av
[
i
])) {

106 
	`•rötf
(
buf
, "/tmp/hâp%d", 
i
);

107 
fd
 = 
	`›í
(
buf
, 0);

108 
	`u∆ök
(
buf
);

112 
n
 = 
	`ªad
(
fd
, 
buf
, 
XFERSIZE
);

113 
buf
[
n
] = 0;

114 
	`ssˇnf
(
buf
, "Avg xfer: %fKB, %fKB in %d millisecs,",

115 &
f1
, &
f2
, &
m
);

116 i‡(
m
 > 
u£cs
) {

117 
u£cs
 = 
m
;

119 
tŸÆ
 +
f2
;

121 
tŸÆ
 <<= 10;

122 
u£cs
 *= 1000;

123 
	`£âime
(
u£cs
);

124 
	`œãncy
((
uöt64
)1, 
tŸÆ
);

125 
	}
}

	@seek.c

1 *
	gid
 = "$Id$\n";

10 
	~"bích.h
"

12 
	#STRIDE
 1024*1024

	)

14 
	$maö
(
ac
, 
av
)

15 
ac
;

16 *
av
[];

18 
buf
[512];

19 
disk
;

20 
off64_t
 
size
;

21 
off64_t
 
begö
, 
íd
;

22 
u£cs
;

24 i‡(
ac
 != 3) {

25 
	`exô
(1);

27 i‡((
disk
 = 
	`›í
(
av
[1], 0)) == -1) {

28 
	`exô
(1);

30 
size
 = 
	`byãs
(
av
[2]);

37 
íd
 = 
size
;

38 
begö
 = 0;

39 
	`£ekto
(
disk
, 
begö
, 
SEEK_SET
);

40 
	`ªad
(
disk
, 
buf
, (buf));

41 
íd
 > 
begö
) {

42 
íd
 -
STRIDE
;

43 
	`°¨t
();

44 
	`£ekto
(
disk
, 
íd
, 
SEEK_SET
);

45 
	`ªad
(
disk
, 
buf
, (buf));

46 
u£cs
 = 
	`°›
();

47 
	`¥ötf
("%.04‡%.04f\n", (
íd
 - 
begö
Ë/ 1000000., 
u£cs
/1000.);

49 
begö
 +
STRIDE
;

50 
	`°¨t
();

51 
	`£ekto
(
disk
, 
begö
, 
SEEK_SET
);

52 
	`ªad
(
disk
, 
buf
, (buf));

53 
u£cs
 = 
	`°›
();

54 
	`¥ötf
("%.04‡%.04f\n", (
íd
 - 
begö
Ë/ 1000000., 
u£cs
/1000.);

56 
	`exô
(0);

57 
	}
}

	@stats.h

1 #i‚de‡
_STATS_H


2 
	#_STATS_H


	)

4 
	~"bích.h
"

5 
	~"timög.h
"

7 
	#ABS
(
x
Ë((xË< 0 ? -(xË: (x))

	)

9 
öt_com∑ª
(c⁄° *
a
, c⁄° *
b
);

10 
uöt64_com∑ª
(c⁄° *
a
, c⁄° *
b
);

11 
doubÀ_com∑ª
(c⁄° *
a
, c⁄° *
b
);

13 (*
	töt_°©
)(*
	tvÆues
, 
	tsize
);

14 
	$uöt64
 (*
	tuöt64_°©
)(
	tuöt64
 *
	tvÆues
, 
	tsize
);

15 (*
	tdoubÀ_°©
)(*
	tvÆues
, 
	tsize
);

17 
	`öt_medün
(*
vÆues
, 
size
);

18 
uöt64
 
	`uöt64_medün
(uöt64 *
vÆues
, 
size
);

19 
	`doubÀ_medün
(*
vÆues
, 
size
);

21 
	`öt_món
(*
vÆues
, 
size
);

22 
uöt64
 
	`uöt64_món
(uöt64 *
vÆues
, 
size
);

23 
	`doubÀ_món
(*
vÆues
, 
size
);

25 
	`öt_mö
(*
vÆues
, 
size
);

26 
uöt64
 
	`uöt64_mö
(uöt64 *
vÆues
, 
size
);

27 
	`doubÀ_mö
(*
vÆues
, 
size
);

29 
	`öt_max
(*
vÆues
, 
size
);

30 
uöt64
 
	`uöt64_max
(uöt64 *
vÆues
, 
size
);

31 
	`doubÀ_max
(*
vÆues
, 
size
);

33 
	`öt_v¨ün˚
(*
vÆues
, 
size
);

34 
	`uöt64_v¨ün˚
(
uöt64
 *
vÆues
, 
size
);

35 
	`doubÀ_v¨ün˚
(*
vÆues
, 
size
);

37 
	`öt_momít
(
momít
, *
vÆues
, 
size
);

38 
	`uöt64_momít
(
momít
, 
uöt64
 *
vÆues
, 
size
);

39 
	`doubÀ_momít
(
momít
, *
vÆues
, 
size
);

41 
	`öt_°dîr
(*
vÆues
, 
size
);

42 
	`uöt64_°dîr
(
uöt64
 *
vÆues
, 
size
);

43 
	`doubÀ_°dîr
(*
vÆues
, 
size
);

45 
	`öt_skew
(*
vÆues
, 
size
);

46 
	`uöt64_skew
(
uöt64
 *
vÆues
, 
size
);

47 
	`doubÀ_skew
(*
vÆues
, 
size
);

49 
	`öt_kuπosis
(*
vÆues
, 
size
);

50 
	`uöt64_kuπosis
(
uöt64
 *
vÆues
, 
size
);

51 
	`doubÀ_kuπosis
(*
vÆues
, 
size
);

53 
	`öt_boŸ°øp_°dîr
(*
vÆues
, 
size
, 
öt_°©
 
f
);

54 
	`uöt64_boŸ°øp_°dîr
(
uöt64
 *
vÆues
, 
size
, 
uöt64_°©
 
f
);

55 
	`doubÀ_boŸ°øp_°dîr
(*
vÆues
, 
size
, 
doubÀ_°©
 
f
);

57 
	`ªgªssi⁄
(*
x
, *
y
, *
sig
, 
n
,

58 *
a
, *
b
, *
sig_a
, *
sig_b
,

59 *
chi2
);

	@stream.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

17 
	s_°©e
 {

18 * 
	ma
;

19 * 
	mb
;

20 * 
	mc
;

21 
	msˇœr
;

22 
	mÀn
;

25 
öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

26 
˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

29 
c›y
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

30 
sˇÀ
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

31 
add
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

32 
åüd
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

35 
fûl
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

37 
daxpy
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

38 
sum
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
);

49 
	$maö
(
ac
, **
av
)

51 
vîsi⁄
 = 1;

52 
∑øŒñ
 = 1;

53 
w¨mup
 = 0;

54 
ª≥tôi⁄s
 = -1;

55 
c
;

56 
uöt64
 
d©asize
;

57 
_°©e
 
°©e
;

58 *
p
;

59 *
ußge
 = "[-v <stream version 1|2>] [-M <len>[K|M]] [-P <parallelism>] [-W <warmup>] [-N <repetitions>]\n";

61 
°©e
.
Àn
 = 1000 * 1000 * 3 * ();

62 
°©e
.
sˇœr
 = 3.0;

64 –
c
 = 
	`gë›t
(
ac
, 
av
, "v:M:P:W:N:")Ë!
EOF
) {

65 
c
) {

67 
vîsi⁄
 = 
	`©oi
(
›èrg
);

68 i‡(
vîsi⁄
 != 1 && version != 2)

69 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

72 
∑øŒñ
 = 
	`©oi
(
›èrg
);

73 i‡(
∑øŒñ
 <0Ë
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

76 
°©e
.
Àn
 = 
	`byãs
(
›èrg
);

79 
w¨mup
 = 
	`©oi
(
›èrg
);

82 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

85 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

91 !(
p
 = 
	`mÆloc
(
°©e
.
Àn
)))

92 
°©e
.
Àn
 /= 2;

93 
	`‰ì
(
p
);

96 
°©e
.
Àn
 /= 3 * ();

97 
d©asize
 = (Ë* 
°©e
.
Àn
 * 
∑øŒñ
;

99 i‡(
vîsi⁄
 == 1) {

100 
	`bíchmp
(
öôülize
, 
c›y
, 
˛ónup
,

101 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

102 i‡(
	`gëtime
() > 0) {

103 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

104 
	`«no
("STREAM c›yÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

105 
	`Ârötf
(
°dîr
, "STREAM copy bandwidth: ");

106 
	`mb
(2 * 
d©asize
 * 
	`gë_n
());

109 
	`bíchmp
(
öôülize
, 
sˇÀ
, 
˛ónup
,

110 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

111 i‡(
	`gëtime
() > 0) {

112 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

113 
	`«no
("STREAM sˇÀÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

114 
	`Ârötf
(
°dîr
, "STREAM scale bandwidth: ");

115 
	`mb
(2 * 
d©asize
 * 
	`gë_n
());

118 
	`bíchmp
(
öôülize
, 
add
, 
˛ónup
,

119 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

120 i‡(
	`gëtime
() > 0) {

121 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

122 
	`«no
("STREAMáddÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

123 
	`Ârötf
(
°dîr
, "STREAMádd bandwidth: ");

124 
	`mb
(3 * 
d©asize
 * 
	`gë_n
());

127 
	`bíchmp
(
öôülize
, 
åüd
, 
˛ónup
,

128 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

129 i‡(
	`gëtime
() > 0) {

130 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

131 
	`«no
("STREAMÅrüdÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

132 
	`Ârötf
(
°dîr
, "STREAMÅriad bandwidth: ");

133 
	`mb
(3 * 
d©asize
 * 
	`gë_n
());

136 
	`bíchmp
(
öôülize
, 
fûl
, 
˛ónup
,

137 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

138 i‡(
	`gëtime
() > 0) {

139 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

140 
	`«no
("STREAM2 fû»œãncy", 
°©e
.
Àn
 * 
	`gë_n
());

141 
	`Ârötf
(
°dîr
, "STREAM2 fill bandwidth: ");

142 
	`mb
(
d©asize
 * 
	`gë_n
());

145 
	`bíchmp
(
öôülize
, 
c›y
, 
˛ónup
,

146 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

147 i‡(
	`gëtime
() > 0) {

148 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

149 
	`«no
("STREAM2 c›yÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

150 
	`Ârötf
(
°dîr
, "STREAM2 copy bandwidth: ");

151 
	`mb
(2 * 
d©asize
 * 
	`gë_n
());

154 
	`bíchmp
(
öôülize
, 
daxpy
, 
˛ónup
,

155 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

156 i‡(
	`gëtime
() > 0) {

157 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

158 
	`«no
("STREAM2 daxpyÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

159 
	`Ârötf
(
°dîr
, "STREAM2 daxpy bandwidth: ");

160 
	`mb
(3 * 
d©asize
 * 
	`gë_n
());

163 
	`bíchmp
(
öôülize
, 
sum
, 
˛ónup
,

164 0, 
∑øŒñ
, 
w¨mup
, 
ª≥tôi⁄s
, &
°©e
);

165 i‡(
	`gëtime
() > 0) {

166 i‡(
∑øŒñ
 <1Ë
	`ßve_möimum
();

167 
	`«no
("STREAM2 sumÜ©ícy", 
°©e
.
Àn
 * 
	`gë_n
());

168 
	`Ârötf
(
°dîr
, "STREAM2 sum bandwidth: ");

169 
	`mb
(
d©asize
 * 
	`gë_n
());

174 
	}
}

177 
	$öôülize
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

179 
i
;

180 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

182 i‡(
ôî©i⁄s
) ;

184 
°©e
->
a
 = (*)
	`mÆloc
((Ë* sèã->
Àn
);

185 
°©e
->
b
 = (*)
	`mÆloc
((Ë* sèã->
Àn
);

186 
°©e
->
c
 = (*)
	`mÆloc
((Ë* sèã->
Àn
);

188 i‡(
°©e
->
a
 =
NULL
 || sèã->
b
 =NULL || sèã->
c
 == NULL) {

189 
	`exô
(1);

192 
i
 = 0; i < 
°©e
->
Àn
; ++i) {

193 
°©e
->
a
[
i
] = 1.;

194 
°©e
->
b
[
i
] = 2.;

195 
°©e
->
c
[
i
] = 0.;

197 
	}
}

199 
	#BODY
(
ex¥
) \

201 
i
; \

202 
N
 = 
°©e
->
Àn
; \

203 * 
a
 = 
°©e
->a; \

204 * 
b
 = 
°©e
->b; \

205 * 
c
 = 
°©e
->c; \

206 
sˇœr
 = 
°©e
->scalar; \

208 
°©e
->
a
 = sèã->
b
; \

209 
°©e
->
b
 = sèã->
c
; \

210 
°©e
->
c
 = 
a
; \

212 
i
 = 0; i < 
N
; ++i) { \

213 
ex¥
; \

215 }

	)

218 
	$c›y
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

220 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

222 
ôî©i⁄s
-- > 0) {

223 
	`BODY
(
c
[
i
] = 
a
[i];)

225 
	}
}

228 
	$sˇÀ
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

230 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

232 
ôî©i⁄s
-- > 0) {

233 
	`BODY
(
b
[
i
] = 
sˇœr
 * 
c
[i];)

235 
	}
}

238 
	$add
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

240 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

242 
ôî©i⁄s
-- > 0) {

243 
	`BODY
(
c
[
i
] = 
a
[i] + 
b
[i];)

245 
	}
}

248 
	$åüd
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

250 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

252 
ôî©i⁄s
-- > 0) {

253 
	`BODY
(
a
[
i
] = 
b
[i] + 
sˇœr
 * 
c
[i];)

255 
	}
}

263 
	$fûl
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

265 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

267 
ôî©i⁄s
-- > 0) {

268 
	`BODY
(
a
[
i
] = 0;)

270 
	}
}

273 
	$daxpy
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

275 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

277 
ôî©i⁄s
-- > 0) {

278 
	`BODY
(
a
[
i
] =á[i] + 
sˇœr
 * 
b
[i];)

280 
	}
}

283 
	$sum
(
ôî_t
 
ôî©i⁄s
, *
cookõ
)

285 
s
;

286 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

288 
s
 = 0.0;

289 
ôî©i⁄s
-- > 0) {

290 
	`BODY
(
s
 +
a
[
i
];)

292 
	`u£_öt
(()
s
);

293 
	}
}

296 
	$˛ónup
(
ôî_t
 
ôî©i⁄s
, * 
cookõ
)

298 
_°©e
* 
°©e
 = (_°©e*)
cookõ
;

300 i‡(
ôî©i⁄s
) ;

302 
	`‰ì
(
°©e
->
a
);

303 
	`‰ì
(
°©e
->
b
);

304 
	`‰ì
(
°©e
->
c
);

305 
	}
}

	@timing.h

4 #i‚de‡
_TIMING_H


5 
	#_TIMING_H


	)

7 *
p64
(
uöt64
 
big
);

8 *
p64sz
(
uöt64
 
big
);

9 
Dñè
();

10 
Now
();

11 
adju°
(
u£c
);

12 
b™dwidth
(
uöt64
 
byãs
, uöt64 
times
, 
vîbo£
);

13 
uöt64
 
byãs
(*
s
);

14 
c⁄ãxt
(
uöt64
 
x„rs
);

15 
uöt64
 
dñè
();

16 
gë_íough
();

17 
uöt64
 
gë_n
();

18 
kb
(
uöt64
 
byãs
);

19 
l_ovîhód
();

20 
œ°
(*
s
);

21 
œãncy
(
uöt64
 
x„rs
, uöt64 
size
);

22 
mb
(
uöt64
 
byãs
);

23 
mi¸o
(*
s
, 
uöt64
 
n
);

24 
mi¸omb
(
uöt64
 
mb
, uöt64 
n
);

25 
mûli
(*
s
, 
uöt64
 
n
);

26 
m‹efds
();

27 
«no
(*
s
, 
uöt64
 
n
);

28 
uöt64
 
now
();

29 
±ime
(
uöt64
 
n
);

30 
rußge
();

31 
ßve_n
(
uöt64
);

32 
£âime
(
uöt64
 
u£cs
);

33 
°¨t
(
timevÆ
 *
tv
);

34 
uöt64
 
°›
(
timevÆ
 *
begö
, timevÆ *
íd
);

35 
uöt64
 
t_ovîhód
();

36 
time•ít
();

37 
timög
(
FILE
 *
out
);

38 
uöt64
 
tvdñè
(
timevÆ
 *, timeval *);

39 
tvsub
(
timevÆ
 *
tdiff
, timevÆ *
t1
, timevÆ *
t0
);

40 
u£_öt
(
ªsu…
);

41 
u£_poöãr
(*
ªsu…
);

42 
uöt64
 
u£cs_•ít
();

43 
touch
(*
buf
, 
size_t
 
size
);

44 
size_t
* 
≥rmuèti⁄
(size_à
max
, size_à
sˇÀ
);

45 
˝
(* 
§c
, * 
d°
, 
mode_t
 
mode
);

46 
bªad
(* 
§c
, 
cou¡
);

48 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

49 
gë∑gesize
();

	@timing_o.c

1 
	~<°dio.h
>

2 
	~"bích.h
"

5 
	$maö
()

7 
	`puãnv
("LOOP_O=0.0");

8 
	`¥ötf
("%lu\n", ()
	`t_ovîhód
());

10 
	}
}

	@tlb.c

13 *
	gid
 = "$Id$\n";

15 
	~"bích.h
"

17 
föd_éb
(
°¨t
, 
max∑ges
, 
w¨mup
, 
ª≥tôi⁄s
,

18 * 
éb_time
, * 
ˇche_time
, 
mem_°©e
* 
°©e
);

19 
compuã_times
(
∑ges
, 
w¨mup
, 
ª≥tôi⁄s
,

20 * 
éb_time
, * 
ˇche_time
, 
mem_°©e
* 
°©e
);

22 
	#THRESHOLD
 1.15

	)

32 
	$maö
(
ac
, **
av
)

34 
éb
, 
max∑ges
;

35 
c
;

36 
¥öt_co°
 = 0;

37 
w¨mup
 = 0;

38 
ª≥tôi⁄s
 = (1000000 <
	`gë_íough
(0Ë? 1 : 
TRIES
);

39 
éb_time
, 
ˇche_time
;

40 
mem_°©e
 
°©e
;

41 *
ußge
 = "[-c] [-L <line size>] [-MÜen[K|M]] [-W <warmup>] [-N <repetitions>]\n";

43 
max∑ges
 = 16 * 1024;

44 
°©e
.
width
 = 1;

45 
°©e
.
∑gesize
 = 
	`gë∑gesize
();

46 
°©e
.
löe
 = (*);

48 
éb
 = 2;

50 –
c
 = 
	`gë›t
(
ac
, 
av
, "cL:M:W:N:")Ë!
EOF
) {

51 
c
) {

53 
¥öt_co°
 = 1;

56 
°©e
.
löe
 = 
	`©oi
(
›èrg
);

59 
max∑ges
 = 
	`byãs
(
›èrg
);

60 
max∑ges
 /
	`gë∑gesize
();

63 
w¨mup
 = 
	`©oi
(
›èrg
);

66 
ª≥tôi⁄s
 = 
	`©oi
(
›èrg
);

69 
	`lmbích_ußge
(
ac
, 
av
, 
ußge
);

75 
éb
 = 
	`föd_éb
(8, 
max∑ges
, 
w¨mup
, 
ª≥tôi⁄s
, &
éb_time
, &
ˇche_time
, &
°©e
);

77 i‡(
éb
 > 0) {

78 i‡(
¥öt_co°
) {

79 
	`compuã_times
(
éb
 * 2, 
w¨mup
, 
ª≥tôi⁄s
, &
éb_time
, &
ˇche_time
, &
°©e
);

80 
	`Ârötf
(
°dîr
, "éb: %dÖage†%.5‡«no£c⁄ds\n", 
éb
, 
éb_time
 - 
ˇche_time
);

82 
	`Ârötf
(
°dîr
, "éb: %dÖages\n", 
éb
);

93 
	}
}

96 
	$föd_éb
(
°¨t
, 
max∑ges
, 
w¨mup
, 
ª≥tôi⁄s
,

97 * 
éb_time
, * 
ˇche_time
, 
mem_°©e
* 
°©e
)

99 
i
, 
lowî
, 
uµî
;

101 
i
 = 
°¨t
; i <
max∑ges
; i<<=1) {

102 
	`compuã_times
(
i
, 
w¨mup
, 
ª≥tôi⁄s
, 
éb_time
, 
ˇche_time
, 
°©e
);

104 i‡(*
éb_time
 / *
ˇche_time
 > 
THRESHOLD
) {

105 
lowî
 = 
i
>>1;

106 
uµî
 = 
i
;

107 
i
 = 
lowî
 + (
uµî
 -Üower) / 2;

113 i‡(
i
 >
max∑ges
) {

114 
°©e
->
Àn
 = 0;

119 
lowî
 + 1 < 
uµî
) {

120 
	`compuã_times
(
i
, 
w¨mup
, 
ª≥tôi⁄s
, 
éb_time
, 
ˇche_time
, 
°©e
);

122 i‡(*
éb_time
 / *
ˇche_time
 > 
THRESHOLD
) {

123 
uµî
 = 
i
;

125 
lowî
 = 
i
;

127 
i
 = 
lowî
 + (
uµî
 -Üower) / 2;

129  (
lowî
);

130 
	}
}

133 
	$compuã_times
(
∑ges
, 
w¨mup
, 
ª≥tôi⁄s
,

134 * 
éb_time
, * 
ˇche_time
, 
mem_°©e
* 
°©e
)

136 
i
;

137 
ªsu…_t
 
éb_ªsu…s
, 
ˇche_ªsu…s
, *
r_ßve
;

139 
r_ßve
 = 
	`gë_ªsu…s
();

140 
	`ö£πöô
(&
éb_ªsu…s
);

141 
	`ö£πöô
(&
ˇche_ªsu…s
);

143 
°©e
->
Àn
 = 
∑ges
 * sèã->
∑gesize
;

144 
°©e
->
maxÀn
 = 
∑ges
 * sèã->
∑gesize
;

145 
	`éb_öôülize
(0, 
°©e
);

146 i‡(
°©e
->
öôülized
) {

147 
i
 = 0; i < 
TRIES
; ++i) {

148 
	`BENCH1
(
	`mem_bíchm¨k_0
(
__n
, 
°©e
); __n = 1;, 0);

149 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
éb_ªsu…s
);

152 
	`éb_˛ónup
(0, 
°©e
);

154 
°©e
->
Àn
 = 
∑ges
 * sèã->
löe
;

155 
°©e
->
maxÀn
 = 
∑ges
 * sèã->
löe
;

156 
	`mem_öôülize
(0, 
°©e
);

157 i‡(
°©e
->
öôülized
) {

158 
i
 = 0; i < 
TRIES
; ++i) {

159 
	`BENCH1
(
	`mem_bíchm¨k_0
(
__n
, 
°©e
); __n = 1;, 0);

160 
	`ö£πs‹t
(
	`gëtime
(), 
	`gë_n
(), &
ˇche_ªsu…s
);

163 
	`mem_˛ónup
(0, 
°©e
);

166 
	`£t_ªsu…s
(&
éb_ªsu…s
);

167 *
éb_time
 = (1000. * ()
	`gëtime
()Ë/ (100. * ()
	`gë_n
());

170 
	`£t_ªsu…s
(&
ˇche_ªsu…s
);

171 *
ˇche_time
 = (1000. * ()
	`gëtime
()Ë/ (100. * ()
	`gë_n
());

172 
	`£t_ªsu…s
(
r_ßve
);

177 
	}
}

	@version.h

1 
	#MAJOR
 3

	)

2 
	#MINOR
 -9

	)

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/rpc/pmap_clnt.h

35 #i‚de‡
_RPC_PMAP_CLNT_H


36 
	#_RPC_PMAP_CLNT_H
 1

	)

38 
	~<„©uªs.h
>

39 
	~<Ωc/ty≥s.h
>

40 
	~<Ωc/xdr.h
>

41 
	~<Ωc/˛¡.h
>

43 
__BEGIN_DECLS


45 
	$boﬁ_t
 (*
	tªsu…¥oc_t
Ë(
	tˇddr_t
 
	t__ª•
, 
	tsockaddr_ö
 *
	t__øddr
);

69 
boﬁ_t
 
	$pm≠_£t
 (c⁄° 
u_l⁄g
 
__¥ogøm
, c⁄° u_l⁄g 
__vîs
,

70 
__¥Ÿocﬁ
, 
u_sh‹t
 
__p‹t
Ë
__THROW
;

71 
boﬁ_t
 
	$pm≠_un£t
 (c⁄° 
u_l⁄g
 
__¥ogøm
, c⁄° u_l⁄g 
__vîs
)

72 
__THROW
;

73 
pm≠li°
 *
	$pm≠_gëm≠s
 (
sockaddr_ö
 *
__addªss
Ë
__THROW
;

74 
˛¡_°©
 
	$pm≠_rmtˇŒ
 (
sockaddr_ö
 *
__addr
,

75 c⁄° 
u_l⁄g
 
__¥og
,

76 c⁄° 
u_l⁄g
 
__vîs
,

77 c⁄° 
u_l⁄g
 
__¥oc
,

78 
xdΩroc_t
 
__xdørgs
,

79 
ˇddr_t
 
__¨g•
, 
xdΩroc_t
 
__xdºes
,

80 
ˇddr_t
 
__ª•
, 
timevÆ
 
__tout
,

81 
u_l⁄g
 *
__p‹t_±r
Ë
__THROW
;

82 
˛¡_°©
 
	$˛¡_brﬂdˇ°
 (c⁄° 
u_l⁄g
 
__¥og
,

83 c⁄° 
u_l⁄g
 
__vîs
,

84 c⁄° 
u_l⁄g
 
__¥oc
, 
xdΩroc_t
 
__x¨gs
,

85 
ˇddr_t
 
__¨g•
, 
xdΩroc_t
 
__xªsu…s
,

86 
ˇddr_t
 
__ªsu…•
,

87 
ªsu…¥oc_t
 
__óchªsu…
Ë
__THROW
;

88 
u_sh‹t
 
	$pm≠_gëp‹t
 (
sockaddr_ö
 *
__addªss
,

89 c⁄° 
u_l⁄g
 
__¥ogøm
,

90 c⁄° 
u_l⁄g
 
__vîsi⁄
, 
u_öt
 
__¥Ÿocﬁ
)

91 
__THROW
;

93 
__END_DECLS


	@/usr/include/rpc/rpc.h

35 #i‚de‡
_RPC_RPC_H


36 
	#_RPC_RPC_H
 1

	)

38 
	~<Ωc/ty≥s.h
>

39 
	~<√töë/ö.h
>

42 
	~<Ωc/xdr.h
>

45 
	~<Ωc/auth.h
>

48 
	~<Ωc/˛¡.h
>

51 
	~<Ωc/Ωc_msg.h
>

52 
	~<Ωc/auth_unix.h
>

53 
	~<Ωc/auth_des.h
>

56 
	~<Ωc/svc.h
>

57 
	~<Ωc/svc_auth.h
>

65 
	~<Ωc/√tdb.h
>

67 
__BEGIN_DECLS


70 
fd_£t
 *
	$__Ωc_thªad_svc_fd£t
 (Ë
	`__©åibuã__
 ((
__c⁄°__
));

71 
	#svc_fd£t
 (*
	`__Ωc_thªad_svc_fd£t
 ())

	)

73 
Ωc_¸óãîr
 *
	$__Ωc_thªad_¸óãîr
 ()

74 
	`__©åibuã__
 ((
__c⁄°__
));

75 
	#gë_Ωc_¸óãîr
(Ë(*
	`__Ωc_thªad_¸óãîr
 ())

	)

81 #ifde‡
_RPC_MT_VARS


82 
	#Ωc_¸óãîr
 (*
	`__Ωc_thªad_¸óãîr
 ())

	)

85 
pﬁlfd
 **
	$__Ωc_thªad_svc_pﬁlfd
 ()

86 
	`__©åibuã__
 ((
__c⁄°__
));

87 
	#svc_pﬁlfd
 (*
	`__Ωc_thªad_svc_pﬁlfd
 ())

	)

89 *
	$__Ωc_thªad_svc_max_pﬁlfd
 (Ë
	`__©åibuã__
 ((
__c⁄°__
));

90 
	#svc_max_pﬁlfd
 (*
	`__Ωc_thªad_svc_max_pﬁlfd
 ())

	)

92 
__END_DECLS


	@/usr/include/rpc/types.h

34 #i‚de‡
_RPC_TYPES_H


35 
	#_RPC_TYPES_H
 1

	)

37 
	tboﬁ_t
;

38 
	tíum_t
;

40 
	tΩ˝rog_t
;

41 
	tΩcvîs_t
;

42 
	tΩ˝roc_t
;

43 
	tΩ˝rŸ_t
;

44 
	tΩ˝‹t_t
;

46 
	#__d⁄tˇª__
 -1

	)

48 #i‚de‡
FALSE


49 
	#FALSE
 (0)

	)

52 #i‚de‡
TRUE


53 
	#TRUE
 (1)

	)

56 #i‚de‡
NULL


57 
	#NULL
 0

	)

60 
	~<°dlib.h
>

61 
	#mem_Æloc
(
bsize
Ë
	`mÆloc
(bsize)

	)

66 
	#mem_‰ì
(
±r
, 
bsize
Ë
	`‰ì
’å)

	)

68 #i‚de‡
makedev


69 
	~<sys/ty≥s.h
>

72 #i‡
deföed
 
__APPLE_CC__
 || deföed 
__FªeBSD__


73 
	#__u_ch¨_deföed


	)

74 
	#__daddr_t_deföed


	)

77 #i‚de‡
__u_ch¨_deföed


78 
__u_ch¨
 
	tu_ch¨
;

79 
__u_sh‹t
 
	tu_sh‹t
;

80 
__u_öt
 
	tu_öt
;

81 
__u_l⁄g
 
	tu_l⁄g
;

82 
__quad_t
 
	tquad_t
;

83 
__u_quad_t
 
	tu_quad_t
;

84 
__fsid_t
 
	tfsid_t
;

85 
	#__u_ch¨_deföed


	)

87 #i‚de‡
__daddr_t_deföed


88 
__daddr_t
 
	tdaddr_t
;

89 
__ˇddr_t
 
	tˇddr_t
;

90 
	#__daddr_t_deföed


	)

93 
	~<sys/time.h
>

94 
	~<sys/∑øm.h
>

96 
	~<√töë/ö.h
>

98 #i‚de‡
INADDR_LOOPBACK


99 
	#INADDR_LOOPBACK
 (
u_l⁄g
)0x7F000001

	)

101 #i‚de‡
MAXHOSTNAMELEN


102 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

46 
__BEGIN_NAMESPACE_STD


48 
__jmp_buf_èg
 
	tjmp_buf
[1];

52 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
__END_NAMESPACE_STD


59 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

63 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

67 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

70 
__BEGIN_NAMESPACE_STD


74 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

77 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


83 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

84 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 #ifdef 
__USE_POSIX


92 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

96 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

102 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

103 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

108 #i‡
__USE_FORTIFY_LEVEL
 > 0

109 
	~<bôs/£tjmp2.h
>

112 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/mount.h

21 #i‚de‡
_SYS_MOUNT_H


22 
	#_SYS_MOUNT_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<sys/io˘l.h
>

27 
	#BLOCK_SIZE
 1024

	)

28 
	#BLOCK_SIZE_BITS
 10

	)

35 
	mMS_RDONLY
 = 1,

36 
	#MS_RDONLY
 
MS_RDONLY


	)

37 
	mMS_NOSUID
 = 2,

38 
	#MS_NOSUID
 
MS_NOSUID


	)

39 
	mMS_NODEV
 = 4,

40 
	#MS_NODEV
 
MS_NODEV


	)

41 
	mMS_NOEXEC
 = 8,

42 
	#MS_NOEXEC
 
MS_NOEXEC


	)

43 
	mMS_SYNCHRONOUS
 = 16,

44 
	#MS_SYNCHRONOUS
 
MS_SYNCHRONOUS


	)

45 
	mMS_REMOUNT
 = 32,

46 
	#MS_REMOUNT
 
MS_REMOUNT


	)

47 
	mMS_MANDLOCK
 = 64,

48 
	#MS_MANDLOCK
 
MS_MANDLOCK


	)

49 
	mMS_DIRSYNC
 = 128,

50 
	#MS_DIRSYNC
 
MS_DIRSYNC


	)

51 
	mMS_NOATIME
 = 1024,

52 
	#MS_NOATIME
 
MS_NOATIME


	)

53 
	mMS_NODIRATIME
 = 2048,

54 
	#MS_NODIRATIME
 
MS_NODIRATIME


	)

55 
	mMS_BIND
 = 4096,

56 
	#MS_BIND
 
MS_BIND


	)

57 
	mMS_MOVE
 = 8192,

58 
	#MS_MOVE
 
MS_MOVE


	)

59 
	mMS_REC
 = 16384,

60 
	#MS_REC
 
MS_REC


	)

61 
	mMS_SILENT
 = 32768,

62 
	#MS_SILENT
 
MS_SILENT


	)

63 
	mMS_POSIXACL
 = 1 << 16,

64 
	#MS_POSIXACL
 
MS_POSIXACL


	)

65 
	mMS_UNBINDABLE
 = 1 << 17,

66 
	#MS_UNBINDABLE
 
MS_UNBINDABLE


	)

67 
	mMS_PRIVATE
 = 1 << 18,

68 
	#MS_PRIVATE
 
MS_PRIVATE


	)

69 
	mMS_SLAVE
 = 1 << 19,

70 
	#MS_SLAVE
 
MS_SLAVE


	)

71 
	mMS_SHARED
 = 1 << 20,

72 
	#MS_SHARED
 
MS_SHARED


	)

73 
	mMS_RELATIME
 = 1 << 21,

74 
	#MS_RELATIME
 
MS_RELATIME


	)

75 
	mMS_KERNMOUNT
 = 1 << 22,

76 
	#MS_KERNMOUNT
 
MS_KERNMOUNT


	)

77 
	mMS_I_VERSION
 = 1 << 23,

78 
	#MS_I_VERSION
 
MS_I_VERSION


	)

79 
	mMS_STRICTATIME
 = 1 << 24,

80 
	#MS_STRICTATIME
 
MS_STRICTATIME


	)

81 
	mMS_ACTIVE
 = 1 << 30,

82 
	#MS_ACTIVE
 
MS_ACTIVE


	)

83 
	mMS_NOUSER
 = 1 << 31

84 
	#MS_NOUSER
 
MS_NOUSER


	)

88 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

93 
	#MS_MGC_VAL
 0xc0ed0000

	)

94 
	#MS_MGC_MSK
 0xffff0000

	)

101 
	#BLKROSET
 
	`_IO
(0x12, 93Ë

	)

102 
	#BLKROGET
 
	`_IO
(0x12, 94Ë

	)

103 
	#BLKRRPART
 
	`_IO
(0x12, 95Ë

	)

104 
	#BLKGETSIZE
 
	`_IO
(0x12, 96Ë

	)

105 
	#BLKFLSBUF
 
	`_IO
(0x12, 97Ë

	)

106 
	#BLKRASET
 
	`_IO
(0x12, 98Ë

	)

107 
	#BLKRAGET
 
	`_IO
(0x12, 99Ë

	)

108 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

109 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

110 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

111 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

112 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

113 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

114 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

115 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

121 
	mMNT_FORCE
 = 1,

122 
	#MNT_FORCE
 
MNT_FORCE


	)

123 
	mMNT_DETACH
 = 2,

124 
	#MNT_DETACH
 
MNT_DETACH


	)

125 
	mMNT_EXPIRE
 = 4,

126 
	#MNT_EXPIRE
 
MNT_EXPIRE


	)

127 
	mUMOUNT_NOFOLLOW
 = 8

128 
	#UMOUNT_NOFOLLOW
 
UMOUNT_NOFOLLOW


	)

132 
__BEGIN_DECLS


135 
	$mou¡
 (c⁄° *
__•ecül_fûe
, c⁄° *
__dú
,

136 c⁄° *
__f°y≥
, 
__rwÊag
,

137 c⁄° *
__d©a
Ë
__THROW
;

140 
	$umou¡
 (c⁄° *
__•ecül_fûe
Ë
__THROW
;

143 
	$umou¡2
 (c⁄° *
__•ecül_fûe
, 
__Êags
Ë
__THROW
;

145 
__END_DECLS


	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/sem.h

18 #i‚de‡
_SYS_SEM_H


19 
	#_SYS_SEM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/£m.h
>

32 #ifde‡
__USE_GNU


33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

41 
	s£mbuf


43 
	m£m_num
;

44 
	m£m_›
;

45 
	m£m_Êg
;

49 
__BEGIN_DECLS


52 
	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

55 
	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

58 
	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

60 #ifde‡
__USE_GNU


62 
	$£mtimed›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
,

63 c⁄° 
time•ec
 *
__timeout
Ë
__THROW
;

66 
__END_DECLS


	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<sys/uio.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

29 #ifde‡
__USE_GNU


31 
	~<bôs/sig£t.h
>

38 
	~<bôs/sockë.h
>

40 #ifde‡
__USE_BSD


43 
	sosockaddr


45 
	mß_Ámûy
;

46 
	mß_d©a
[14];

54 
	mSHUT_RD
 = 0,

55 
	#SHUT_RD
 
SHUT_RD


	)

56 
	mSHUT_WR
,

57 
	#SHUT_WR
 
SHUT_WR


	)

58 
	mSHUT_RDWR


59 
	#SHUT_RDWR
 
SHUT_RDWR


	)

68 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


69 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

70 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

74 
	#__SOCKADDR_ALLTYPES
 \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

89 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

90 uni⁄ { 
	m__SOCKADDR_ALLTYPES


91 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

92 #unde‡
__SOCKADDR_ONETYPE


93 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

94 uni⁄ { 
	m__SOCKADDR_ALLTYPES


95 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

96 #unde‡
__SOCKADDR_ONETYPE


99 #ifde‡
__USE_GNU


101 
	smmsghdr


103 
msghdr
 
	mmsg_hdr
;

104 
	mmsg_Àn
;

113 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

119 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

120 
__fds
[2]Ë
__THROW
;

123 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

124 
__THROW
;

127 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

128 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

141 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

142 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

149 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

156 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

163 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 
__addr_Àn
);

174 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

175 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

176 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

184 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

185 
__Êags
);

187 #ifde‡
__USE_GNU


193 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

194 
__vÀn
, 
__Êags
);

202 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

204 #ifde‡
__USE_GNU


210 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

211 
__vÀn
, 
__Êags
,

212 c⁄° 
time•ec
 *
__tmo
);

219 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

220 *
__ª°ri˘
 
__›tvÆ
,

221 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

226 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

227 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

233 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

243 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

244 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

246 #ifde‡
__USE_GNU


251 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

252 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

261 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

264 #ifde‡
__USE_XOPEN2K


266 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

270 #ifde‡
__USE_MISC


274 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

279 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


280 
	~<bôs/sockë2.h
>

283 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

30 || 
deföed
 
	g__USE_ATFILE


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

147 #ñi‡
deföed
 
__USE_XOPEN2K


148 
	#S_ISSOCK
(
mode
Ë0

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (c⁄° *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

365 c⁄° 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 c⁄° *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #ifde‡
__USE_EXTERN_INLINES


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/sysinfo.h

18 #i‚de‡
_SYS_SYSINFO_H


19 
	#_SYS_SYSINFO_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<löux/kî√l.h
>

26 
__BEGIN_DECLS


29 
	$sysöfo
 (
sysöfo
 *
__öfo
Ë
__THROW
;

33 
	$gë_≈rocs_c⁄f
 (Ë
__THROW
;

36 
	$gë_≈rocs
 (Ë
__THROW
;

40 
	$gë_phys_∑ges
 (Ë
__THROW
;

43 
	$gë_avphys_∑ges
 (Ë
__THROW
;

45 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_BSD


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_BSD


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_BSD


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_BSD


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/un.h

18 #i‚def 
_SYS_UN_H


19 
	#_SYS_UN_H
 1

	)

21 
	~<sys/cdefs.h
>

24 
	~<bôs/sockaddr.h
>

26 
__BEGIN_DECLS


29 
	ssockaddr_un


31 
__SOCKADDR_COMMON
 (
sun_
);

32 
	msun_∑th
[108];

36 #ifde‡
__USE_MISC


37 
	~<°rög.h
>

40 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

41 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

44 
	g__END_DECLS


	@/usr/include/sys/wait.h

22 #i‚def 
_SYS_WAIT_H


23 
	#_SYS_WAIT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<sig«l.h
>

32 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

35 
	~<bôs/waôÊags.h
>

37 #ifdef 
__USE_BSD


42 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


43 
	#__WAIT_INT
(
°©us
) \

44 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

45 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

47 
	#__WAIT_INT
(
°©us
Ë(*(c⁄° *Ë&(°©us))

	)

55 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


56 
	#__WAIT_STATUS
 *

	)

57 
	#__WAIT_STATUS_DEFN
 *

	)

62 
waô
 *
	m__u±r
;

63 *
	m__ùå
;

64 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

71 
	#__WAIT_STATUS
 *

	)

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	~<bôs/waô°©us.h
>

79 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

80 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

81 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

82 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

85 #ifde‡
__WIFCONTINUED


86 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifdef 
__USE_BSD


91 
	#WCOREFLAG
 
__WCOREFLAG


	)

92 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

93 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

94 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

102 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

104 #ifdef 
__USE_BSD


106 
	#WAIT_ANY
 (-1Ë

	)

107 
	#WAIT_MYPGRP
 0

	)

125 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

127 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 #i‚de‡
__id_t_deföed


129 
	~<bôs/ty≥s.h
>

130 
__id_t
 
	tid_t
;

131 
	#__id_t_deföed


	)

134 
	#__√ed_sigöfo_t


	)

135 
	~<bôs/sigöfo.h
>

148 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

149 
__›ti⁄s
);

152 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


155 
	grußge
;

162 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

163 
rußge
 * 
__ußge
Ë
__THROWNL
;

166 #ifde‡
__USE_BSD


168 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

169 
rußge
 *
__ußge
Ë
__THROWNL
;

173 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


29 #ifde‡
_UAPI_LINUX_IN6_H


33 
	#__USE_KERNEL_IPV6_DEFS


	)

39 
	#IP_OPTIONS
 4

	)

40 
	#IP_HDRINCL
 3

	)

41 
	#IP_TOS
 1

	)

42 
	#IP_TTL
 2

	)

43 
	#IP_RECVOPTS
 6

	)

45 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

46 
	#IP_RETOPTS
 7

	)

47 
	#IP_MULTICAST_IF
 32

	)

48 
	#IP_MULTICAST_TTL
 33

	)

49 
	#IP_MULTICAST_LOOP
 34

	)

50 
	#IP_ADD_MEMBERSHIP
 35

	)

51 
	#IP_DROP_MEMBERSHIP
 36

	)

52 
	#IP_UNBLOCK_SOURCE
 37

	)

53 
	#IP_BLOCK_SOURCE
 38

	)

54 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

55 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

56 
	#IP_MSFILTER
 41

	)

57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


58 
	#MCAST_JOIN_GROUP
 42

	)

59 
	#MCAST_BLOCK_SOURCE
 43

	)

60 
	#MCAST_UNBLOCK_SOURCE
 44

	)

61 
	#MCAST_LEAVE_GROUP
 45

	)

62 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

63 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

64 
	#MCAST_MSFILTER
 48

	)

65 
	#IP_MULTICAST_ALL
 49

	)

66 
	#IP_UNICAST_IF
 50

	)

68 
	#MCAST_EXCLUDE
 0

	)

69 
	#MCAST_INCLUDE
 1

	)

72 
	#IP_ROUTER_ALERT
 5

	)

73 
	#IP_PKTINFO
 8

	)

74 
	#IP_PKTOPTIONS
 9

	)

75 
	#IP_PMTUDISC
 10

	)

76 
	#IP_MTU_DISCOVER
 10

	)

77 
	#IP_RECVERR
 11

	)

78 
	#IP_RECVTTL
 12

	)

79 
	#IP_RECVTOS
 13

	)

80 
	#IP_MTU
 14

	)

81 
	#IP_FREEBIND
 15

	)

82 
	#IP_IPSEC_POLICY
 16

	)

83 
	#IP_XFRM_POLICY
 17

	)

84 
	#IP_PASSSEC
 18

	)

85 
	#IP_TRANSPARENT
 19

	)

86 
	#IP_MULTICAST_ALL
 49

	)

89 
	#IP_ORIGDSTADDR
 20

	)

90 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

92 
	#IP_MINTTL
 21

	)

96 
	#IP_PMTUDISC_DONT
 0

	)

97 
	#IP_PMTUDISC_WANT
 1

	)

98 
	#IP_PMTUDISC_DO
 2

	)

99 
	#IP_PMTUDISC_PROBE
 3

	)

102 
	#SOL_IP
 0

	)

104 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

105 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

106 
	#IP_MAX_MEMBERSHIPS
 20

	)

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


112 
	sù_›ts


114 
ö_addr
 
	mù_d°
;

115 
	mù_›ts
[40];

119 
	sù_mªqn


121 
ö_addr
 
	mimr_mu…üddr
;

122 
ö_addr
 
	mimr_addªss
;

123 
	mimr_ifödex
;

127 
	sö_pktöfo


129 
	mùi_ifödex
;

130 
ö_addr
 
	mùi_•ec_d°
;

131 
ö_addr
 
	mùi_addr
;

138 
	#IPV6_ADDRFORM
 1

	)

139 
	#IPV6_2292PKTINFO
 2

	)

140 
	#IPV6_2292HOPOPTS
 3

	)

141 
	#IPV6_2292DSTOPTS
 4

	)

142 
	#IPV6_2292RTHDR
 5

	)

143 
	#IPV6_2292PKTOPTIONS
 6

	)

144 
	#IPV6_CHECKSUM
 7

	)

145 
	#IPV6_2292HOPLIMIT
 8

	)

147 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

149 
	#IPV6_NEXTHOP
 9

	)

150 
	#IPV6_AUTHHDR
 10

	)

151 
	#IPV6_UNICAST_HOPS
 16

	)

152 
	#IPV6_MULTICAST_IF
 17

	)

153 
	#IPV6_MULTICAST_HOPS
 18

	)

154 
	#IPV6_MULTICAST_LOOP
 19

	)

155 
	#IPV6_JOIN_GROUP
 20

	)

156 
	#IPV6_LEAVE_GROUP
 21

	)

157 
	#IPV6_ROUTER_ALERT
 22

	)

158 
	#IPV6_MTU_DISCOVER
 23

	)

159 
	#IPV6_MTU
 24

	)

160 
	#IPV6_RECVERR
 25

	)

161 
	#IPV6_V6ONLY
 26

	)

162 
	#IPV6_JOIN_ANYCAST
 27

	)

163 
	#IPV6_LEAVE_ANYCAST
 28

	)

164 
	#IPV6_IPSEC_POLICY
 34

	)

165 
	#IPV6_XFRM_POLICY
 35

	)

167 
	#IPV6_RECVPKTINFO
 49

	)

168 
	#IPV6_PKTINFO
 50

	)

169 
	#IPV6_RECVHOPLIMIT
 51

	)

170 
	#IPV6_HOPLIMIT
 52

	)

171 
	#IPV6_RECVHOPOPTS
 53

	)

172 
	#IPV6_HOPOPTS
 54

	)

173 
	#IPV6_RTHDRDSTOPTS
 55

	)

174 
	#IPV6_RECVRTHDR
 56

	)

175 
	#IPV6_RTHDR
 57

	)

176 
	#IPV6_RECVDSTOPTS
 58

	)

177 
	#IPV6_DSTOPTS
 59

	)

179 
	#IPV6_RECVTCLASS
 66

	)

180 
	#IPV6_TCLASS
 67

	)

183 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

184 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

185 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

186 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

189 
	#IPV6_PMTUDISC_DONT
 0

	)

190 
	#IPV6_PMTUDISC_WANT
 1

	)

191 
	#IPV6_PMTUDISC_DO
 2

	)

192 
	#IPV6_PMTUDISC_PROBE
 3

	)

195 
	#SOL_IPV6
 41

	)

196 
	#SOL_ICMPV6
 58

	)

199 
	#IPV6_RTHDR_LOOSE
 0

	)

200 
	#IPV6_RTHDR_STRICT
 1

	)

202 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


256 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

258 #ifde‡
__USE_ISOC99


259 
__loˇl_signgam
 = 0;

260  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

262  
	`lgamma_r
 (
__d
, &
signgam
);

264 
	}
}

265 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

267 #ifde‡
__USE_ISOC99


268 
__loˇl_signgam
 = 0;

269  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

271  
	`lgammaf_r
 (
__d
, &
signgam
);

273 
	}
}

274 #ifde‡
__MATH_DECLARE_LDOUBLE


275 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

277 #ifde‡
__USE_ISOC99


278 
__loˇl_signgam
 = 0;

279  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

281  
	`lgammÆ_r
 (
__d
, &
signgam
);

283 
	}
}

287 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


289 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

291 #ifde‡
__USE_ISOC99


292 
__loˇl_signgam
 = 0;

293  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

295  
	`lgamma_r
 (
__d
, &
signgam
);

297 
	}
}

298 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

300 #ifde‡
__USE_ISOC99


301 
__loˇl_signgam
 = 0;

302  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

304  
	`lgammaf_r
 (
__d
, &
signgam
);

306 
	}
}

307 #ifde‡
__MATH_DECLARE_LDOUBLE


308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

310 #ifde‡
__USE_ISOC99


311 
__loˇl_signgam
 = 0;

312  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

314  
	`lgammÆ_r
 (
__d
, &
signgam
);

316 
	}
}

321 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

322 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

323 #ifde‡
__MATH_DECLARE_LDOUBLE


324 #ifde‡
__NO_LONG_DOUBLE_MATH


325 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

327 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

332 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

333 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

334 #ifde‡
__MATH_DECLARE_LDOUBLE


335 #ifde‡
__NO_LONG_DOUBLE_MATH


336 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

342 #ifde‡
__USE_ISOC99


344 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

345 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

346 #ifde‡
__MATH_DECLARE_LDOUBLE


347 #ifde‡
__NO_LONG_DOUBLE_MATH


348 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

356 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

357 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

358 #ifde‡
__MATH_DECLARE_LDOUBLE


359 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

363 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

364 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

365 #ifde‡
__MATH_DECLARE_LDOUBLE


366 #ifde‡
__NO_LONG_DOUBLE_MATH


367 
__REDIRECT_NTH
 (
powl
, (, ),

368 
__pow_föôe
);

370 
__REDIRECT_NTH
 (
powl
, (, ),

371 
__powl_föôe
);

376 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

377 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

378 #ifde‡
__MATH_DECLARE_LDOUBLE


379 #ifde‡
__NO_LONG_DOUBLE_MATH


380 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

381 
__ªmaödî_föôe
);

383 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

384 
__ªmaödîl_föôe
);

388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


390 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

391 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

395 
__sˇlb_föôe
);

397 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

398 
__sˇlbl_föôe
);

404 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

405 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

406 #ifde‡
__MATH_DECLARE_LDOUBLE


407 #ifde‡
__NO_LONG_DOUBLE_MATH


408 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

410 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

415 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

416 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

417 #ifde‡
__MATH_DECLARE_LDOUBLE


418 #ifde‡
__NO_LONG_DOUBLE_MATH


419 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

425 #ifde‡
__USE_ISOC99


427 
__gamma_r_föôe
 (, *);

428 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

430 
__loˇl_signgam
 = 0;

431 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

432  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

433 
	}
}

434 
__gammaf_r_föôe
 (, *);

435 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

437 
__loˇl_signgam
 = 0;

438 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

439  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

440 
	}
}

441 #ifde‡
__MATH_DECLARE_LDOUBLE


442 
__gammÆ_r_föôe
 (, *);

443 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

445 
__loˇl_signgam
 = 0;

446 #ifde‡
__NO_LONG_DOUBLE_MATH


447 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

449 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

451  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

452 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


201 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

204 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

207 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

211 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
__BEGIN_NAMESPACE_C99


217 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

218 
	g__END_NAMESPACE_C99


221 #ifde‡
__USE_ISOC99


222 
__BEGIN_NAMESPACE_C99


224 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

225 
	g__END_NAMESPACE_C99


230 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

237 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

238 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

240 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

246 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


247 
__BEGIN_NAMESPACE_C99


249 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

250 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

252 
	g__END_NAMESPACE_C99


255 #ifde‡
__USE_ISOC99


256 
__BEGIN_NAMESPACE_C99


258 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

259 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


264 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

267 #ifde‡
__USE_MISC


271 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


276 
__BEGIN_NAMESPACE_C99


279 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

282 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

283 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


284 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

288 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


292 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

296 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

299 #ifde‡
__USE_ISOC99


301 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

305 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

309 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

313 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

318 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

325 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

326 
__exãnsi⁄__


327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__exãnsi⁄__


333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

343 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #ifde‡
__USE_GNU


365 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

366 
__©åibuã__
 ((
__c⁄°__
));

369 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


371 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


387 #i‚de‡
__SSE2_MATH__


388 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

389 && 
deföed
 
	g__OPTIMIZE__
)

393 #unde‡
m©h_îrh™dlög


402 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


403 
	#__ölöe_m©h›
(
func
, 
›
) \

404 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

405 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

406 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

407 
	#__ölöe_m©h›NP
(
func
, 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

409 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

410 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

412 
	#__ölöe_m©h›
(
func
, 
›
) \

413 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

414 
	#__ölöe_m©h›NP
(
func
, 
›
) \

415 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

418 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

420 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

421 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

424 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


425 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

426 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

427 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

428 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

429 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

432 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

436 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

437 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

440 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

441 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

442 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

444 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

445 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

447 
Êﬂt_ty≥
 
__ªsu…
; \

448 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

449  
__ªsu…
; \

450 }

	)

453 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


454 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

456 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

457 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

458 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

460 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

461 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

462 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

464 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

466 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

469 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

470 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

472 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

474 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

477 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

479 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

482 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

483 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

486 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

487 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

489 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

490 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

493 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

494 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

495 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

497 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

498 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

500 
code
; \

501 }

	)

504 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

505 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

506 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

508 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

509 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

511 
code
; \

512 }

	)

514 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

515 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

516 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

518 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

519 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

520 
Êﬂt_ty≥
 
¨g3
)) \

522 
code
; \

523 }

	)

527 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


531 #ifde‡
__FAST_MATH__


532 #ifde‡
__USE_GNU


533 
	#__söcos_code
 \

534 
__co§
; \

535 
__sör
; \

536 
__swtmp
; \

537 
__asm
 
__vﬁ©ûe__
 \

552 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

553 *
__söx
 = 
__sör
; \

554 *
__cosx
 = 
__co§


	)

556 
__MATH_INLINE
 

557 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

559 
__söcos_code
;

560 
	}
}

562 
__MATH_INLINE
 

563 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

565 
__söcos_code
;

566 
	}
}

568 
__MATH_INLINE
 

569 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

571 
__söcos_code
;

572 
	}
}

579 #i‡
__GNUC_PREREQ
 (3, 5)

580 
	#__expm1_code
 \

581 
__ãmp
; \

582 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

583  
__ãmp
 ? __ãm∞: 
__x


	)

585 
	#__expm1_code
 \

586 
__vÆue
; \

587 
__exp⁄ít
; \

588 
__ãmp
; \

589 
__asm
 
__vﬁ©ûe__
 \

598 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

599 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

602 
__ãmp
 -= 1.0; \

603 
__ãmp
 +
__vÆue
; \

604  
__ãmp
 ? __ãm∞: 
__x


	)

606 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

608 #i‡
	`__GNUC_PREREQ
 (3, 4)

609 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

611 
	#__exp_code
 \

612 
__vÆue
; \

613 
__exp⁄ít
; \

614 
__asm
 
__vﬁ©ûe__
 \

622 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

623 
__vÆue
 += 1.0; \

624 
__asm
 
__vﬁ©ûe__
 \

626 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

627  
__vÆue


	)

628 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

629 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

633 #i‡!
	`__GNUC_PREREQ
 (3, 5)

634 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

635 
__vÆue
; \

636 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

637 
__asm
 
__vﬁ©ûe__
 \

639 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

640  
__vÆue
)

645 #i‡
	`__GNUC_PREREQ
 (3, 4)

646 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

647  
	$__buûtö_©™2l
 (
__y
, 
__x
))

649 
	#__©™2_code
 \

650 
__vÆue
; \

651 
__asm
 
__vﬁ©ûe__
 \

653 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

654  
__vÆue


	)

655 #ifde‡
__FAST_MATH__


656 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

658 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

662 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

663 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

664 
__vÆue
; \

665 
__asm
 
__vﬁ©ûe__
 \

670 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

671  
__vÆue
)

675 #ifde‡
__FAST_MATH__


676 #i‡!
	`__GNUC_PREREQ
 (3,3)

677 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

678 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

679 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

681 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

685 #i‡
	`__GNUC_PREREQ
 (2, 8)

686 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

687 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


688 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

693 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

694 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

697 #ifde‡
__FAST_MATH__


698 #i‡!
	`__GNUC_PREREQ
 (3, 4)

700 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

702 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

704 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

707 #i‡!
	`__GNUC_PREREQ
 (3, 5)

708 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

711 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

714 #i‡!
	`__GNUC_PREREQ
 (3, 4)

715 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

719 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

720 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

721 { 
__xld
: 
__x
 
	}
}; \

722 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

723 
	g__n
.
	g__xi
[1] = 0x80000000; \

724 
	g__n
.
	g__xi
[0] = 0; \

725  
	g__n
.
	g__xld
)

728 #ifde‡
__FAST_MATH__


730 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

731 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

732  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

734 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

735 
__ex
 = 
	`__ex∂
 (
__x
); \

736  0.5 * (
__ex
 + 1.0 / __ex))

738 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

739 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

740  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

743 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

744 
__vÆue
; \

745 
__ign‹e
; \

746 
__cw
; \

747 
__cwtmp
; \

748 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

756 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

757 "=m" (
__cw
) \

758 : "0" (
__x
)); \

759  
__vÆue
)

761 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

762 
__vÆue
; \

763 
__ign‹e
; \

764 
__cw
; \

765 
__cwtmp
; \

766 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

774 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

775 "=m" (
__cw
) \

776 : "0" (
__x
)); \

777  
__vÆue
)

779 #ifde‡
__FAST_MATH__


780 
	#__ldexp_code
 \

781 
__vÆue
; \

782 
__asm
 
__vﬁ©ûe__
 \

784 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

785  
__vÆue


	)

787 
__MATH_INLINE
 

788 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

790 
__ldexp_code
;

791 
	}
}

796 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


798 #ifde‡
__FAST_MATH__


799 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

803 
	#__M_SQRT2
 1.41421356237309504880L

	)

805 #i‡!
	`__GNUC_PREREQ
 (3, 5)

806 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

807 
__vÆue
; \

808 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

809 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

811 
__asm
 
__vﬁ©ûe__
 \

815 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

816  
__vÆue
)

821 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

822 
__y
 = 
	`__Áb¶
 (
__x
); \

823  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

824 * 
	$__sgn1l
 (
__x
)))

826 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

827  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

829 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

830 
__y
 = 
	`__Áb¶
 (
__x
); \

831  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

834 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

835  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

837 #i‡!
	`__GNUC_PREREQ
 (3, 5)

838 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

839 
__vÆue
; \

840 
__junk
; \

841 
__asm
 
__vﬁ©ûe__
 \

843 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

844  
__vÆue
)

850 #ifde‡
__USE_ISOC99


851 #ifde‡
__FAST_MATH__


853 #i‡!
	`__GNUC_PREREQ
 (3, 5)

854 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

857 
__MATH_INLINE
 

858 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

860 
__ldexp_code
;

861 
	}
}

863 
__MATH_INLINE
 

864 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

866 
__ldexp_code
;

867 
	}
}

869 
__ölöe_m©h›NP
 (
röt
, "frndint")

872 
	#__Ãöt_code
 \

873 
__Ãöåes
; \

874 
__asm__
 
__vﬁ©ûe__
 \

876 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

877  
__Ãöåes


	)

878 
__MATH_INLINE
 

879 
__NTH
 (
	$Ãötf
 (
__x
))

881 
__Ãöt_code
;

882 
	}
}

883 
__MATH_INLINE
 

884 
__NTH
 (
	$Ãöt
 (
__x
))

886 
__Ãöt_code
;

887 
	}
}

888 
__MATH_INLINE
 

889 
__NTH
 (
	$Ãöé
 (
__x
))

891 
__Ãöt_code
;

892 
	}
}

893 #unde‡
__Ãöt_code


895 
	#__Œröt_code
 \

896 
__Œröåes
; \

897 
__asm__
 
__vﬁ©ûe__
 \

899 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

900  
__Œröåes


	)

901 
__exãnsi⁄__


902 
__MATH_INLINE
 

903 
__NTH
 (
	$Œrötf
 (
__x
))

905 
__Œröt_code
;

906 
	}
}

907 
__exãnsi⁄__


908 
__MATH_INLINE
 

909 
__NTH
 (
	$Œröt
 (
__x
))

911 
__Œröt_code
;

912 
	}
}

913 
__exãnsi⁄__


914 
__MATH_INLINE
 

915 
__NTH
 (
	$Œröé
 (
__x
))

917 
__Œröt_code
;

918 
	}
}

919 #unde‡
__Œröt_code


924 #ifde‡
__USE_MISC


926 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

927 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

928 
__vÆue
; \

929 
__˛obbîed
; \

930 
__asm
 
__vﬁ©ûe__
 \

935 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

936  
__vÆue
)

941 
__MATH_INLINE
 

942 
__NTH
 (
	$__föôe
 (
__x
))

944  (
__exãnsi⁄__


945 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

947 
	}
}

952 #unde‡
__©™2_code


953 #ifde‡
__FAST_MATH__


954 #unde‡
__expm1_code


955 #unde‡
__exp_code


956 #unde‡
__söcos_code


963 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


964 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

965 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

966 
__vÆue
;

967 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

968 : "Ò" (
__vÆue
)

969 : "0" (
__x
), "u" (
__y
) : "st(1)");

970  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_32BIT
 0x40

	)

32 #ifde‡
__USE_MISC


33 
	#MAP_GROWSDOWN
 0x00100

	)

34 
	#MAP_DENYWRITE
 0x00800

	)

35 
	#MAP_EXECUTABLE
 0x01000

	)

36 
	#MAP_LOCKED
 0x02000

	)

37 
	#MAP_NORESERVE
 0x04000

	)

38 
	#MAP_POPULATE
 0x08000

	)

39 
	#MAP_NONBLOCK
 0x10000

	)

40 
	#MAP_STACK
 0x20000

	)

41 
	#MAP_HUGETLB
 0x40000

	)

45 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/bits/sem.h

18 #i‚de‡
_SYS_SEM_H


22 
	~<sys/ty≥s.h
>

25 
	#SEM_UNDO
 0x1000

	)

28 
	#GETPID
 11

	)

29 
	#GETVAL
 12

	)

30 
	#GETALL
 13

	)

31 
	#GETNCNT
 14

	)

32 
	#GETZCNT
 15

	)

33 
	#SETVAL
 16

	)

34 
	#SETALL
 17

	)

38 
	s£mid_ds


40 
ùc_≥rm
 
	m£m_≥rm
;

41 
__time_t
 
	m£m_Ÿime
;

42 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved1
;

43 
__time_t
 
	m£m_˘ime
;

44 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved2
;

45 
__sysˇŒ_ul⁄g_t
 
	m£m_n£ms
;

46 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved3
;

47 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved4
;

64 
	#_SEM_SEMUN_UNDEFINED
 1

	)

66 #ifde‡
__USE_MISC


69 
	#SEM_STAT
 18

	)

70 
	#SEM_INFO
 19

	)

72 
	s£möfo


74 
	m£mm≠
;

75 
	m£mmni
;

76 
	m£mmns
;

77 
	m£mmnu
;

78 
	m£mm¶
;

79 
	m£m›m
;

80 
	m£mume
;

81 
	m£musz
;

82 
	m£mvmx
;

83 
	m£m´m
;

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

111 } 
_sigÁu…
;

116 
si_b™d
;

117 
si_fd
;

118 } 
_sigpﬁl
;

123 *
_ˇŒ_addr
;

124 
_sysˇŒ
;

125 
_¨ch
;

126 } 
_sigsys
;

127 } 
_sifõlds
;

128 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

132 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

133 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

134 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

135 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

136 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

137 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

138 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

139 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

140 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

141 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

142 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

143 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

144 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

145 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

155 
SI_ASYNCNL
 = -60,

156 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

157 
SI_TKILL
 = -6,

158 
	#SI_TKILL
 
SI_TKILL


	)

159 
SI_SIGIO
,

160 
	#SI_SIGIO
 
SI_SIGIO


	)

161 
SI_ASYNCIO
,

162 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

163 
SI_MESGQ
,

164 
	#SI_MESGQ
 
SI_MESGQ


	)

165 
SI_TIMER
,

166 
	#SI_TIMER
 
SI_TIMER


	)

167 
SI_QUEUE
,

168 
	#SI_QUEUE
 
SI_QUEUE


	)

169 
SI_USER
,

170 
	#SI_USER
 
SI_USER


	)

171 
SI_KERNEL
 = 0x80

172 
	#SI_KERNEL
 
SI_KERNEL


	)

179 
ILL_ILLOPC
 = 1,

180 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

181 
ILL_ILLOPN
,

182 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

183 
ILL_ILLADR
,

184 
	#ILL_ILLADR
 
ILL_ILLADR


	)

185 
ILL_ILLTRP
,

186 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

187 
ILL_PRVOPC
,

188 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

189 
ILL_PRVREG
,

190 
	#ILL_PRVREG
 
ILL_PRVREG


	)

191 
ILL_COPROC
,

192 
	#ILL_COPROC
 
ILL_COPROC


	)

193 
ILL_BADSTK


194 
	#ILL_BADSTK
 
ILL_BADSTK


	)

200 
FPE_INTDIV
 = 1,

201 
	#FPE_INTDIV
 
FPE_INTDIV


	)

202 
FPE_INTOVF
,

203 
	#FPE_INTOVF
 
FPE_INTOVF


	)

204 
FPE_FLTDIV
,

205 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

206 
FPE_FLTOVF
,

207 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

208 
FPE_FLTUND
,

209 
	#FPE_FLTUND
 
FPE_FLTUND


	)

210 
FPE_FLTRES
,

211 
	#FPE_FLTRES
 
FPE_FLTRES


	)

212 
FPE_FLTINV
,

213 
	#FPE_FLTINV
 
FPE_FLTINV


	)

214 
FPE_FLTSUB


215 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

221 
SEGV_MAPERR
 = 1,

222 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

223 
SEGV_ACCERR


224 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

230 
BUS_ADRALN
 = 1,

231 
	#BUS_ADRALN
 
BUS_ADRALN


	)

232 
BUS_ADRERR
,

233 
	#BUS_ADRERR
 
BUS_ADRERR


	)

234 
BUS_OBJERR
,

235 
	#BUS_OBJERR
 
BUS_OBJERR


	)

236 
BUS_MCEERR_AR
,

237 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

238 
BUS_MCEERR_AO


239 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

245 
TRAP_BRKPT
 = 1,

246 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

247 
TRAP_TRACE


248 
	#TRAP_TRACE
 
TRAP_TRACE


	)

254 
CLD_EXITED
 = 1,

255 
	#CLD_EXITED
 
CLD_EXITED


	)

256 
CLD_KILLED
,

257 
	#CLD_KILLED
 
CLD_KILLED


	)

258 
CLD_DUMPED
,

259 
	#CLD_DUMPED
 
CLD_DUMPED


	)

260 
CLD_TRAPPED
,

261 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

262 
CLD_STOPPED
,

263 
	#CLD_STOPPED
 
CLD_STOPPED


	)

264 
CLD_CONTINUED


265 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

271 
POLL_IN
 = 1,

272 
	#POLL_IN
 
POLL_IN


	)

273 
POLL_OUT
,

274 
	#POLL_OUT
 
POLL_OUT


	)

275 
POLL_MSG
,

276 
	#POLL_MSG
 
POLL_MSG


	)

277 
POLL_ERR
,

278 
	#POLL_ERR
 
POLL_ERR


	)

279 
POLL_PRI
,

280 
	#POLL_PRI
 
POLL_PRI


	)

281 
POLL_HUP


282 
	#POLL_HUP
 
POLL_HUP


	)

285 #unde‡
__√ed_sigöfo_t


289 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

290 && !
deföed
 
__have_sigevít_t


291 
	#__have_sigevít_t
 1

	)

294 
	#__SIGEV_MAX_SIZE
 64

	)

295 #i‡
__WORDSIZE
 == 64

296 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

298 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

302 #i‚de‡
__have_±hªad_©å_t


303 
±hªad_©å_t
 
	t±hªad_©å_t
;

304 
	#__have_±hªad_©å_t
 1

	)

307 
	ssigevít


309 
sigvÆ_t
 
sigev_vÆue
;

310 
sigev_signo
;

311 
sigev_nŸify
;

315 
_∑d
[
__SIGEV_PAD_SIZE
];

319 
__pid_t
 
_tid
;

323 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

324 
±hªad_©å_t
 *
_©åibuã
;

325 } 
_sigev_thªad
;

326 } 
_sigev_un
;

327 } 
	tsigevít_t
;

330 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

331 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

336 
SIGEV_SIGNAL
 = 0,

337 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

338 
SIGEV_NONE
,

339 
	#SIGEV_NONE
 
SIGEV_NONE


	)

340 
SIGEV_THREAD
,

341 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

343 
SIGEV_THREAD_ID
 = 4

344 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_CAN
 29

	)

72 
	#PF_TIPC
 30

	)

73 
	#PF_BLUETOOTH
 31

	)

74 
	#PF_IUCV
 32

	)

75 
	#PF_RXRPC
 33

	)

76 
	#PF_ISDN
 34

	)

77 
	#PF_PHONET
 35

	)

78 
	#PF_IEEE802154
 36

	)

79 
	#PF_CAIF
 37

	)

80 
	#PF_ALG
 38

	)

81 
	#PF_NFC
 39

	)

82 
	#PF_VSOCK
 40

	)

83 
	#PF_MAX
 41

	)

86 
	#AF_UNSPEC
 
PF_UNSPEC


	)

87 
	#AF_LOCAL
 
PF_LOCAL


	)

88 
	#AF_UNIX
 
PF_UNIX


	)

89 
	#AF_FILE
 
PF_FILE


	)

90 
	#AF_INET
 
PF_INET


	)

91 
	#AF_AX25
 
PF_AX25


	)

92 
	#AF_IPX
 
PF_IPX


	)

93 
	#AF_APPLETALK
 
PF_APPLETALK


	)

94 
	#AF_NETROM
 
PF_NETROM


	)

95 
	#AF_BRIDGE
 
PF_BRIDGE


	)

96 
	#AF_ATMPVC
 
PF_ATMPVC


	)

97 
	#AF_X25
 
PF_X25


	)

98 
	#AF_INET6
 
PF_INET6


	)

99 
	#AF_ROSE
 
PF_ROSE


	)

100 
	#AF_DEC√t
 
PF_DEC√t


	)

101 
	#AF_NETBEUI
 
PF_NETBEUI


	)

102 
	#AF_SECURITY
 
PF_SECURITY


	)

103 
	#AF_KEY
 
PF_KEY


	)

104 
	#AF_NETLINK
 
PF_NETLINK


	)

105 
	#AF_ROUTE
 
PF_ROUTE


	)

106 
	#AF_PACKET
 
PF_PACKET


	)

107 
	#AF_ASH
 
PF_ASH


	)

108 
	#AF_ECONET
 
PF_ECONET


	)

109 
	#AF_ATMSVC
 
PF_ATMSVC


	)

110 
	#AF_RDS
 
PF_RDS


	)

111 
	#AF_SNA
 
PF_SNA


	)

112 
	#AF_IRDA
 
PF_IRDA


	)

113 
	#AF_PPPOX
 
PF_PPPOX


	)

114 
	#AF_WANPIPE
 
PF_WANPIPE


	)

115 
	#AF_LLC
 
PF_LLC


	)

116 
	#AF_CAN
 
PF_CAN


	)

117 
	#AF_TIPC
 
PF_TIPC


	)

118 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

119 
	#AF_IUCV
 
PF_IUCV


	)

120 
	#AF_RXRPC
 
PF_RXRPC


	)

121 
	#AF_ISDN
 
PF_ISDN


	)

122 
	#AF_PHONET
 
PF_PHONET


	)

123 
	#AF_IEEE802154
 
PF_IEEE802154


	)

124 
	#AF_CAIF
 
PF_CAIF


	)

125 
	#AF_ALG
 
PF_ALG


	)

126 
	#AF_NFC
 
PF_NFC


	)

127 
	#AF_VSOCK
 
PF_VSOCK


	)

128 
	#AF_MAX
 
PF_MAX


	)

134 
	#SOL_RAW
 255

	)

135 
	#SOL_DECNET
 261

	)

136 
	#SOL_X25
 262

	)

137 
	#SOL_PACKET
 263

	)

138 
	#SOL_ATM
 264

	)

139 
	#SOL_AAL
 265

	)

140 
	#SOL_IRDA
 266

	)

143 
	#SOMAXCONN
 128

	)

146 
	~<bôs/sockaddr.h
>

149 
	ssockaddr


151 
__SOCKADDR_COMMON
 (
ß_
);

152 
	mß_d©a
[14];

158 
	#__ss_Æig¡y≥
 

	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000,

209 
	#MSG_MORE
 
MSG_MORE


	)

210 
	mMSG_WAITFORONE
 = 0x10000,

211 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

212 
	mMSG_FASTOPEN
 = 0x20000000,

213 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

215 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

218 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

224 
	smsghdr


226 *
	mmsg_«me
;

227 
sockÀn_t
 
	mmsg_«mñí
;

229 
iovec
 *
	mmsg_iov
;

230 
size_t
 
	mmsg_iovÀn
;

232 *
	mmsg_c⁄åﬁ
;

233 
size_t
 
	mmsg_c⁄åﬁÀn
;

238 
	mmsg_Êags
;

242 
	scmsghdr


244 
size_t
 
	mcmsg_Àn
;

249 
	mcmsg_Àvñ
;

250 
	mcmsg_ty≥
;

251 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

252 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

257 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

258 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

260 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

262 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

263 
	#CMSG_FIRSTHDR
(
mhdr
) \

264 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

265 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

266 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

267 & (
size_t
Ë~( (size_tË- 1))

	)

268 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

269 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

270 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

272 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

273 
cmsghdr
 *
__cmsg
Ë
__THROW
;

274 #ifde‡
__USE_EXTERN_INLINES


275 #i‚de‡
_EXTERN_INLINE


276 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

278 
_EXTERN_INLINE
 
cmsghdr
 *

279 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

281 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

283  (
cmsghdr
 *) 0;

285 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

286 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

287 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


288 + 
__mhdr
->
msg_c⁄åﬁÀn
)

289 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

290 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

292  (
cmsghdr
 *) 0;

293  
__cmsg
;

294 
	}
}

301 
	mSCM_RIGHTS
 = 0x01

302 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

303 #ifde‡
__USE_GNU


304 , 
	mSCM_CREDENTIALS
 = 0x02

305 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

309 #ifde‡
__USE_GNU


311 
	su¸ed


313 
pid_t
 
	mpid
;

314 
uid_t
 
	muid
;

315 
gid_t
 
	mgid
;

320 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


321 #i‚de‡
FIOGETOWN


322 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

324 #i‚de‡
FIOSETOWN


325 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

327 #i‚de‡
SIOCATMARK


328 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

330 #i‚de‡
SIOCGPGRP


331 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

333 #i‚de‡
SIOCGSTAMP


334 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

336 #i‚de‡
SIOCGSTAMPNS


337 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

339 #i‚de‡
SIOCSPGRP


340 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

345 
	~<asm/sockë.h
>

347 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


348 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


349 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


350 #unde‡
FIOGETOWN


352 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


353 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


354 #unde‡
FIOSETOWN


356 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


357 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


358 #unde‡
SIOCATMARK


360 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


361 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


362 #unde‡
SIOCGPGRP


364 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


365 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


366 #unde‡
SIOCGSTAMP


368 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


369 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


370 #unde‡
SIOCGSTAMPNS


372 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


373 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


374 #unde‡
SIOCSPGRP


379 
	slögî


381 
	ml_⁄off
;

382 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/rpc/auth.h

38 #i‚de‡
_RPC_AUTH_H


40 
	#_RPC_AUTH_H
 1

	)

41 
	~<„©uªs.h
>

42 
	~<Ωc/xdr.h
>

44 
	g__BEGIN_DECLS


46 
	#MAX_AUTH_BYTES
 400

	)

47 
	#MAXNETNAMELEN
 255

	)

52 
	eauth_°©
 {

53 
	mAUTH_OK
=0,

57 
	mAUTH_BADCRED
=1,

58 
	mAUTH_REJECTEDCRED
=2,

59 
	mAUTH_BADVERF
=3,

60 
	mAUTH_REJECTEDVERF
=4,

61 
	mAUTH_TOOWEAK
=5,

65 
	mAUTH_INVALIDRESP
=6,

66 
	mAUTH_FAILED
=7

69 
	udes_block
 {

71 
u_öt32_t
 
	mhigh
;

72 
u_öt32_t
 
	mlow
;

73 } 
	mkey
;

74 
	mc
[8];

76 
des_block
 
	tdes_block
;

77 
boﬁ_t
 
	$xdr_des_block
 (
XDR
 *
__xdrs
, 
des_block
 *
__blkp
Ë
__THROW
;

82 
	s›aque_auth
 {

83 
íum_t
 
ﬂ_Êav‹
;

84 
ˇddr_t
 
ﬂ_ba£
;

85 
u_öt
 
ﬂ_Àngth
;

91 
AUTH
 
	tAUTH
;

92 
	sAUTH
 {

93 
›aque_auth
 
ah_¸ed
;

94 
›aque_auth
 
ah_vîf
;

95 
des_block
 
ah_key
;

96 
	sauth_›s
 {

97 (*
ah_√xtvîf
Ë(
AUTH
 *);

98 (*
ah_m¨shÆ
Ë(
AUTH
 *, 
XDR
 *);

99 (*
ah_vÆid©e
Ë(
AUTH
 *, 
›aque_auth
 *);

101 (*
ah_ª‰esh
Ë(
AUTH
 *);

102 (*
ah_de°roy
Ë(
AUTH
 *);

103 } *
ah_›s
;

104 
ˇddr_t
 
ah_¥iv©e
;

116 
	#AUTH_NEXTVERF
(
auth
) \

117 ((*((
auth
)->
ah_›s
->
ah_√xtvîf
))◊uth))

	)

118 
	#auth_√xtvîf
(
auth
) \

119 ((*((
auth
)->
ah_›s
->
ah_√xtvîf
))◊uth))

	)

121 
	#AUTH_MARSHALL
(
auth
, 
xdrs
) \

122 ((*((
auth
)->
ah_›s
->
ah_m¨shÆ
))◊uth, 
xdrs
))

	)

123 
	#auth_m¨shÆl
(
auth
, 
xdrs
) \

124 ((*((
auth
)->
ah_›s
->
ah_m¨shÆ
))◊uth, 
xdrs
))

	)

126 
	#AUTH_VALIDATE
(
auth
, 
vîÂ
) \

127 ((*((
auth
)->
ah_›s
->
ah_vÆid©e
))(◊uth), 
vîÂ
))

	)

128 
	#auth_vÆid©e
(
auth
, 
vîÂ
) \

129 ((*((
auth
)->
ah_›s
->
ah_vÆid©e
))(◊uth), 
vîÂ
))

	)

131 
	#AUTH_REFRESH
(
auth
) \

132 ((*((
auth
)->
ah_›s
->
ah_ª‰esh
))◊uth))

	)

133 
	#auth_ª‰esh
(
auth
) \

134 ((*((
auth
)->
ah_›s
->
ah_ª‰esh
))◊uth))

	)

136 
	#AUTH_DESTROY
(
auth
) \

137 ((*((
auth
)->
ah_›s
->
ah_de°roy
))◊uth))

	)

138 
	#auth_de°roy
(
auth
) \

139 ((*((
auth
)->
ah_›s
->
ah_de°roy
))◊uth))

	)

142 
›aque_auth
 
_nuŒ_auth
;

158 
AUTH
 *
	`authunix_¸óã
 (*
__mach«me
, 
__uid_t
 
__uid
, 
__gid_t
 
__gid
,

159 
__Àn
, 
__gid_t
 *
__aup_gids
);

160 
AUTH
 *
	`authunix_¸óã_deÁu…
 ();

161 
AUTH
 *
	$authn⁄e_¸óã
 (Ë
__THROW
;

162 
AUTH
 *
	$authdes_¸óã
 (c⁄° *
__£rvî«me
, 
u_öt
 
__wödow
,

163 
sockaddr
 *
__synˇddr
, 
des_block
 *
__ckey
)

164 
__THROW
;

165 
AUTH
 *
	$authdes_pk_¸óã
 (c⁄° *, 
√tobj
 *, 
u_öt
,

166 
sockaddr
 *, 
des_block
 *Ë
__THROW
;

169 
	#AUTH_NONE
 0

	)

170 
	#AUTH_NULL
 0

	)

171 
	#AUTH_SYS
 1

	)

172 
	#AUTH_UNIX
 
AUTH_SYS


	)

173 
	#AUTH_SHORT
 2

	)

174 
	#AUTH_DES
 3

	)

175 
	#AUTH_DH
 
AUTH_DES


	)

176 
	#AUTH_KERB
 4

	)

182 
	$gë√äame
 (*Ë
__THROW
;

183 
	$ho°2√äame
 (*, c⁄° *, c⁄° *Ë
__THROW
;

184 
	$u£r2√äame
 (*, c⁄° 
uid_t
, c⁄° *Ë
__THROW
;

185 
	$√äame2u£r
 (c⁄° *, 
uid_t
 *, 
gid_t
 *, *, gid_t *)

186 
__THROW
;

187 
	$√äame2ho°
 (c⁄° *, *, c⁄° Ë
__THROW
;

194 
	`key_de¸y±£ssi⁄
 (*, 
des_block
 *);

195 
	`key_de¸y±£ssi⁄_pk
 (*, 
√tobj
 *, 
des_block
 *);

196 
	`key_í¸y±£ssi⁄
 (*, 
des_block
 *);

197 
	`key_í¸y±£ssi⁄_pk
 (*, 
√tobj
 *, 
des_block
 *);

198 
	`key_gídes
 (
des_block
 *);

199 
	`key_£t£¸ë
 (*);

200 
	`key_£¸ëkey_is_£t
 ();

201 
	`key_gë_c⁄v
 (*, 
des_block
 *);

206 
boﬁ_t
 
	$xdr_›aque_auth
 (
XDR
 *, 
›aque_auth
 *Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/rpc/auth_des.h

18 #i‚de‡
_RPC_AUTH_DES_H


19 
	#_RPC_AUTH_DES_H
 1

	)

21 
	~<sys/cdefs.h
>

22 
	~<Ωc/auth.h
>

24 
__BEGIN_DECLS


27 
	eauthdes_«meköd


29 
	mADN_FULLNAME
,

30 
	mADN_NICKNAME


35 
	sauthdes_fuŒ«me


37 *
	m«me
;

38 
des_block
 
	mkey
;

39 
uöt32_t
 
	mwödow
;

43 
	sauthdes_¸ed


45 
authdes_«meköd
 
	madc_«meköd
;

46 
authdes_fuŒ«me
 
	madc_fuŒ«me
;

47 
uöt32_t
 
	madc_nick«me
;

51 
	sΩc_timevÆ


53 
uöt32_t
 
	mtv_£c
;

54 
uöt32_t
 
	mtv_u£c
;

58 
	sauthdes_vîf


62 
Ωc_timevÆ
 
	madv_˘ime
;

63 
des_block
 
	madv_xtime
;

65 
	madv_time_u
;

66 
uöt32_t
 
	madv_öt_u
;

74 
	#adv_time°amp
 
adv_time_u
.
adv_˘ime


	)

75 
	#adv_xtime°amp
 
adv_time_u
.
adv_xtime


	)

76 
	#adv_wövîf
 
adv_öt_u


	)

83 
	#adv_timevîf
 
adv_time_u
.
adv_˘ime


	)

84 
	#adv_xtimevîf
 
adv_time_u
.
adv_xtime


	)

85 
	#adv_nick«me
 
adv_öt_u


	)

88 
	$authdes_gëu¸ed
 (c⁄° 
authdes_¸ed
 * 
__adc
,

89 
uid_t
 * 
__uid
, 
gid_t
 * 
__gid
,

90 *
__grou∂í
, 
gid_t
 * 
__groups
Ë
__THROW
;

95 
	$gëpublickey
 (c⁄° *
__«me
, *
__key
Ë
__THROW
;

102 
	$gë£¸ëkey
 (c⁄° *
__«me
, *
__key
,

103 c⁄° *
__∑sswd
Ë
__THROW
;

105 
	$πime
 (
sockaddr_ö
 *
__addΩ
, 
Ωc_timevÆ
 *
__timï
,

106 
Ωc_timevÆ
 *
__timeout
Ë
__THROW
;

108 
__END_DECLS


	@/usr/include/rpc/auth_unix.h

41 #i‚de‡
_RPC_AUTH_UNIX_H


42 
	#_RPC_AUTH_UNIX_H
 1

	)

44 
	~<„©uªs.h
>

45 
	~<sys/ty≥s.h
>

46 
	~<Ωc/ty≥s.h
>

47 
	~<Ωc/auth.h
>

48 
	~<Ωc/xdr.h
>

50 
	g__BEGIN_DECLS


53 
	#MAX_MACHINE_NAME
 255

	)

56 
	#NGRPS
 16

	)

61 
	sauthunix_∑rms


63 
u_l⁄g
 
	maup_time
;

64 *
	maup_mach«me
;

65 
__uid_t
 
	maup_uid
;

66 
__gid_t
 
	maup_gid
;

67 
u_öt
 
	maup_Àn
;

68 
__gid_t
 *
	maup_gids
;

71 
boﬁ_t
 
	$xdr_authunix_∑rms
 (
XDR
 *
__xdrs
, 
authunix_∑rms
 *
__p
)

72 
__THROW
;

79 
	ssh‹t_h™d_vîf


81 
›aque_auth
 
√w_¸ed
;

84 
__END_DECLS


	@/usr/include/rpc/clnt.h

34 #i‚de‡
_RPC_CLNT_H


35 
	#_RPC_CLNT_H
 1

	)

37 
	~<„©uªs.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<Ωc/ty≥s.h
>

40 
	~<Ωc/auth.h
>

41 
	~<sys/un.h
>

43 
__BEGIN_DECLS


50 
	e˛¡_°©
 {

51 
	mRPC_SUCCESS
=0,

55 
	mRPC_CANTENCODEARGS
=1,

56 
	mRPC_CANTDECODERES
=2,

57 
	mRPC_CANTSEND
=3,

58 
	mRPC_CANTRECV
=4,

59 
	mRPC_TIMEDOUT
=5,

63 
	mRPC_VERSMISMATCH
=6,

64 
	mRPC_AUTHERROR
=7,

65 
	mRPC_PROGUNAVAIL
=8,

66 
	mRPC_PROGVERSMISMATCH
=9,

67 
	mRPC_PROCUNAVAIL
=10,

68 
	mRPC_CANTDECODEARGS
=11,

69 
	mRPC_SYSTEMERROR
=12,

70 
	mRPC_NOBROADCAST
 = 21,

74 
	mRPC_UNKNOWNHOST
=13,

75 
	mRPC_UNKNOWNPROTO
=17,

76 
	mRPC_UNKNOWNADDR
 = 19,

81 
	mRPC_RPCBFAILURE
=14,

82 
	#RPC_PMAPFAILURE
 
RPC_RPCBFAILURE


	)

83 
	mRPC_PROGNOTREGISTERED
=15,

84 
	mRPC_N2AXLATEFAILURE
 = 22,

88 
	mRPC_FAILED
=16,

89 
	mRPC_INTR
=18,

90 
	mRPC_TLIERROR
=20,

91 
	mRPC_UDERROR
=23,

95 
	mRPC_INPROGRESS
 = 24,

96 
	mRPC_STALERACHANDLE
 = 25

103 
	sΩc_îr
 {

104 
˛¡_°©
 
	mª_°©us
;

106 
	mRE_î∫o
;

107 
auth_°©
 
	mRE_why
;

109 
u_l⁄g
 
	mlow
;

110 
u_l⁄g
 
	mhigh
;

111 } 
	mRE_vîs
;

113 
	ms1
;

114 
	ms2
;

115 } 
	mRE_lb
;

116 } 
	mru
;

117 
	#ª_î∫o
 
ru
.
RE_î∫o


	)

118 
	#ª_why
 
ru
.
RE_why


	)

119 
	#ª_vîs
 
ru
.
RE_vîs


	)

120 
	#ª_lb
 
ru
.
RE_lb


	)

129 
CLIENT
 
	tCLIENT
;

130 
	sCLIENT
 {

131 
AUTH
 *
	m˛_auth
;

132 
	s˛¡_›s
 {

133 
˛¡_°©
 (*
˛_ˇŒ
Ë(
	mCLIENT
 *, 
	mu_l⁄g
, 
	mxdΩroc_t
, 
	mˇddr_t
, xdrproc_t,

134 
	mˇddr_t
, 
	mtimevÆ
);

136 (*
	m˛_ab‹t
) ();

137 (*
	m˛_gëîr
Ë(
	mCLIENT
 *, 
	mΩc_îr
 *);

139 
boﬁ_t
 (*
˛_‰ìªs
Ë(
	mCLIENT
 *, 
	mxdΩroc_t
, 
	mˇddr_t
);

141 (*
	m˛_de°roy
Ë(
	mCLIENT
 *);

142 
boﬁ_t
 (*
˛_c⁄åﬁ
Ë(
	mCLIENT
 *, , *);

144 } *
	m˛_›s
;

145 
ˇddr_t
 
	m˛_¥iv©e
;

167 
	#CLNT_CALL
(
rh
, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
) \

168 ((*(
rh
)->
˛_›s
->
˛_ˇŒ
)‘h, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
))

	)

169 
	#˛¡_ˇŒ
(
rh
, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
) \

170 ((*(
rh
)->
˛_›s
->
˛_ˇŒ
)‘h, 
¥oc
, 
x¨gs
, 
¨g•
, 
xªs
, 
ª•
, 
£cs
))

	)

177 
	#CLNT_ABORT
(
rh
Ë((*‘h)->
˛_›s
->
˛_ab‹t
)‘h))

	)

178 
	#˛¡_ab‹t
(
rh
Ë((*‘h)->
˛_›s
->
˛_ab‹t
)‘h))

	)

185 
	#CLNT_GETERR
(
rh
,
îΩ
Ë((*‘h)->
˛_›s
->
˛_gëîr
)‘h,Éºp))

	)

186 
	#˛¡_gëîr
(
rh
,
îΩ
Ë((*‘h)->
˛_›s
->
˛_gëîr
)‘h,Éºp))

	)

196 
	#CLNT_FREERES
(
rh
,
xªs
,
ª•
Ë((*‘h)->
˛_›s
->
˛_‰ìªs
)‘h,xªs,ª•))

	)

197 
	#˛¡_‰ìªs
(
rh
,
xªs
,
ª•
Ë((*‘h)->
˛_›s
->
˛_‰ìªs
)‘h,xªs,ª•))

	)

206 
	#CLNT_CONTROL
(
˛
,
rq
,
ö
Ë((*(˛)->
˛_›s
->
˛_c⁄åﬁ
)(˛,rq,ö))

	)

207 
	#˛¡_c⁄åﬁ
(
˛
,
rq
,
ö
Ë((*(˛)->
˛_›s
->
˛_c⁄åﬁ
)(˛,rq,ö))

	)

216 
	#CLSET_TIMEOUT
 1

	)

217 
	#CLGET_TIMEOUT
 2

	)

218 
	#CLGET_SERVER_ADDR
 3

	)

219 
	#CLGET_FD
 6

	)

220 
	#CLGET_SVC_ADDR
 7

	)

221 
	#CLSET_FD_CLOSE
 8

	)

222 
	#CLSET_FD_NCLOSE
 9

	)

223 
	#CLGET_XID
 10

	)

224 
	#CLSET_XID
 11

	)

225 
	#CLGET_VERS
 12

	)

226 
	#CLSET_VERS
 13

	)

227 
	#CLGET_PROG
 14

	)

228 
	#CLSET_PROG
 15

	)

229 
	#CLSET_SVC_ADDR
 16

	)

230 
	#CLSET_PUSH_TIMOD
 17

	)

231 
	#CLSET_POP_TIMOD
 18

	)

235 
	#CLSET_RETRY_TIMEOUT
 4

	)

236 
	#CLGET_RETRY_TIMEOUT
 5

	)

243 
	#CLNT_DESTROY
(
rh
Ë((*‘h)->
˛_›s
->
˛_de°roy
)‘h))

	)

244 
	#˛¡_de°roy
(
rh
Ë((*‘h)->
˛_›s
->
˛_de°roy
)‘h))

	)

253 
	#RPCTEST_PROGRAM
 ((
u_l⁄g
)1)

	)

254 
	#RPCTEST_VERSION
 ((
u_l⁄g
)1)

	)

255 
	#RPCTEST_NULL_PROC
 ((
u_l⁄g
)2)

	)

256 
	#RPCTEST_NULL_BATCH_PROC
 ((
u_l⁄g
)3)

	)

262 
	#NULLPROC
 ((
u_l⁄g
)0)

	)

277 
CLIENT
 *
	$˛¡øw_¸óã
 (c⁄° 
u_l⁄g
 
__¥og
, c⁄° u_l⁄g 
__vîs
)

278 
__THROW
;

291 
CLIENT
 *
	$˛¡_¸óã
 (c⁄° *
__ho°
, c⁄° 
u_l⁄g
 
__¥og
,

292 c⁄° 
u_l⁄g
 
__vîs
, c⁄° *
__¥Ÿ
)

293 
__THROW
;

307 
CLIENT
 *
	$˛¡t˝_¸óã
 (
sockaddr_ö
 *
__øddr
, 
u_l⁄g
 
__¥og
,

308 
u_l⁄g
 
__vîsi⁄
, *
__sockp
, 
u_öt
 
__£ndsz
,

309 
u_öt
 
__ªcvsz
Ë
__THROW
;

332 
CLIENT
 *
	$˛¡udp_¸óã
 (
sockaddr_ö
 *
__øddr
, 
u_l⁄g
 
__¥ogøm
,

333 
u_l⁄g
 
__vîsi⁄
, 
timevÆ
 
__waô_ª£nd
,

334 *
__sockp
Ë
__THROW
;

335 
CLIENT
 *
	$˛¡udp_buf¸óã
 (
sockaddr_ö
 *
__øddr
,

336 
u_l⁄g
 
__¥ogøm
, u_l⁄g 
__vîsi⁄
,

337 
timevÆ
 
__waô_ª£nd
, *
__sockp
,

338 
u_öt
 
__£ndsz
, u_öà
__ªcvsz
Ë
__THROW
;

354 
CLIENT
 *
	$˛¡unix_¸óã
 (
sockaddr_un
 *
__øddr
, 
u_l⁄g
 
__¥ogøm
,

355 
u_l⁄g
 
__vîsi⁄
, *
__sockp
,

356 
u_öt
 
__£ndsz
, u_öà
__ªcvsz
Ë
__THROW
;

359 
	$ˇŒΩc
 (c⁄° *
__ho°
, c⁄° 
u_l⁄g
 
__¥ognum
,

360 c⁄° 
u_l⁄g
 
__vî¢um
, c⁄° u_l⁄g 
__¥o˙um
,

361 c⁄° 
xdΩroc_t
 
__ö¥oc
, c⁄° *
__ö
,

362 c⁄° 
xdΩroc_t
 
__ouçroc
, *
__out
Ë
__THROW
;

363 
	$_Ωc_dèbÀsize
 (Ë
__THROW
;

368 
	`˛¡_p¸óãîr‹
 (c⁄° *
__msg
);

369 *
	$˛¡_•¸óãîr‹
(c⁄° *
__msg
Ë
__THROW
;

374 
	`˛¡_≥ºno
 (
˛¡_°©
 
__num
);

379 
	`˛¡_≥º‹
 (
CLIENT
 *
__˛¡
, c⁄° *
__msg
);

381 *
	$˛¡_•îr‹
 (
CLIENT
 *
__˛¡
, c⁄° *
__msg
Ë
__THROW
;

387 
	sΩc_¸óãîr
 {

388 
˛¡_°©
 
cf_°©
;

389 
Ωc_îr
 
cf_îr‹
;

392 
Ωc_¸óãîr
Ñpc_createerr;

399 *
	$˛¡_•î∫o
 (
˛¡_°©
 
__num
Ë
__THROW
;

404 
	$gëΩ˝‹t
 (c⁄° * 
__ho°
, 
u_l⁄g
 
__¥ognum
,

405 
u_l⁄g
 
__vî¢um
, 
u_öt
 
__¥Ÿo
Ë
__THROW
;

411 
	$gë_myaddªss
 (
sockaddr_ö
 *Ë
__THROW
;

413 
	#UDPMSGSIZE
 8800

	)

414 
	#RPCSMALLMSGSIZE
 400

	)

416 
__END_DECLS


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/rpc/rpc_msg.h

35 #i‚de‡
_RPC_MSG_H


36 
	#_RPC_MSG_H
 1

	)

38 
	~<sys/cdefs.h
>

40 
	~<Ωc/xdr.h
>

41 
	~<Ωc/˛¡.h
>

43 
	#RPC_MSG_VERSION
 ((
u_l⁄g
Ë2)

	)

44 
	#RPC_SERVICE_PORT
 ((
u_sh‹t
Ë2048)

	)

46 
__BEGIN_DECLS


54 
	emsg_ty≥
 {

55 
	mCALL
=0,

56 
	mREPLY
=1

59 
	eª∂y_°©
 {

60 
	mMSG_ACCEPTED
=0,

61 
	mMSG_DENIED
=1

64 
	eac˚±_°©
 {

65 
	mSUCCESS
=0,

66 
	mPROG_UNAVAIL
=1,

67 
	mPROG_MISMATCH
=2,

68 
	mPROC_UNAVAIL
=3,

69 
	mGARBAGE_ARGS
=4,

70 
	mSYSTEM_ERR
=5

73 
	eªje˘_°©
 {

74 
	mRPC_MISMATCH
=0,

75 
	mAUTH_ERROR
=1

87 
	sac˚±ed_ª∂y
 {

88 
›aque_auth
 
	m¨_vîf
;

89 
ac˚±_°©
 
	m¨_°©
;

92 
u_l⁄g
 
	mlow
;

93 
u_l⁄g
 
	mhigh
;

94 } 
	mAR_vîsi⁄s
;

96 
ˇddr_t
 
	mwhîe
;

97 
xdΩroc_t
 
	m¥oc
;

98 } 
	mAR_ªsu…s
;

100 } 
	mru
;

101 
	#¨_ªsu…s
 
ru
.
AR_ªsu…s


	)

102 
	#¨_vîs
 
ru
.
AR_vîsi⁄s


	)

108 
	sªje˘ed_ª∂y
 {

109 
ªje˘_°©
 
	mrj_°©
;

112 
u_l⁄g
 
	mlow
;

113 
u_l⁄g
 
	mhigh
;

114 } 
	mRJ_vîsi⁄s
;

115 
auth_°©
 
	mRJ_why
;

116 } 
	mru
;

117 
	#rj_vîs
 
ru
.
RJ_vîsi⁄s


	)

118 
	#rj_why
 
ru
.
RJ_why


	)

124 
	sª∂y_body
 {

125 
ª∂y_°©
 
	mΩ_°©
;

127 
ac˚±ed_ª∂y
 
	mRP_¨
;

128 
ªje˘ed_ª∂y
 
	mRP_dr
;

129 } 
	mru
;

130 
	#Ω_a˝t
 
ru
.
RP_¨


	)

131 
	#Ω_rj˘
 
ru
.
RP_dr


	)

137 
	sˇŒ_body
 {

138 
u_l⁄g
 
	mcb_Ωcvîs
;

139 
u_l⁄g
 
	mcb_¥og
;

140 
u_l⁄g
 
	mcb_vîs
;

141 
u_l⁄g
 
	mcb_¥oc
;

142 
›aque_auth
 
	mcb_¸ed
;

143 
›aque_auth
 
	mcb_vîf
;

149 
	sΩc_msg
 {

150 
u_l⁄g
 
	mrm_xid
;

151 
msg_ty≥
 
	mrm_dúe˘i⁄
;

153 
ˇŒ_body
 
	mRM_cmb
;

154 
ª∂y_body
 
	mRM_rmb
;

155 } 
	mru
;

156 
	#rm_ˇŒ
 
ru
.
RM_cmb


	)

157 
	#rm_ª∂y
 
ru
.
RM_rmb


	)

159 
	#a˝ãd_Ωly
 
ru
.
RM_rmb
.ru.
RP_¨


	)

160 
	#rj˘ed_Ωly
 
ru
.
RM_rmb
.ru.
RP_dr


	)

169 
boﬁ_t
 
	$xdr_ˇŒmsg
 (
XDR
 *
__xdrs
, 
Ωc_msg
 *
__cmsg
Ë
__THROW
;

177 
boﬁ_t
 
	$xdr_ˇŒhdr
 (
XDR
 *
__xdrs
, 
Ωc_msg
 *
__cmsg
Ë
__THROW
;

185 
boﬁ_t
 
	$xdr_ª∂ymsg
 (
XDR
 *
__xdrs
, 
Ωc_msg
 *
__rmsg
Ë
__THROW
;

193 
	$_£ãº_ª∂y
 (
Ωc_msg
 *
__msg
, 
Ωc_îr
 *
__îr‹
)

194 
__THROW
;

196 
__END_DECLS


	@/usr/include/rpc/svc.h

51 #i‚de‡
_RPC_SVC_H


52 
	#_RPC_SVC_H
 1

	)

54 
	~<„©uªs.h
>

55 
	~<Ωc/Ωc_msg.h
>

57 
__BEGIN_DECLS


81 
	ex¥t_°©
 {

82 
	mXPRT_DIED
,

83 
	mXPRT_MOREREQS
,

84 
	mXPRT_IDLE


90 
SVCXPRT
 
	tSVCXPRT
;

91 
	sSVCXPRT
 {

92 
	mxp_sock
;

93 
u_sh‹t
 
	mxp_p‹t
;

94 c⁄° 
	sxp_›s
 {

95 
boﬁ_t
 (*
xp_ªcv
Ë(
SVCXPRT
 *
	m__x¥t
, 
Ωc_msg
 *
	m__msg
);

97 
x¥t_°©
 (*
xp_°©
Ë(
SVCXPRT
 *
	m__x¥t
);

99 
boﬁ_t
 (*
xp_gë¨gs
Ë(
SVCXPRT
 *
	m__x¥t
, 
xdΩroc_t
 
	m__xdr_¨gs
,

100 
ˇddr_t
 
	m__¨gs_±r
);

101 
boﬁ_t
 (*
xp_ª∂y
Ë(
SVCXPRT
 *
	m__x¥t
, 
Ωc_msg
 *
	m__msg
);

103 
boﬁ_t
 (*
xp_‰ì¨gs
Ë(
SVCXPRT
 *
	m__x¥t
, 
xdΩroc_t
 
	m__xdr_¨gs
,

104 
ˇddr_t
 
	m__¨gs_±r
);

106 (*
	mxp_de°roy
Ë(
SVCXPRT
 *
	m__x¥t
);

108 } *
	mxp_›s
;

109 
	mxp_addæí
;

110 
sockaddr_ö
 
	mxp_øddr
;

111 
›aque_auth
 
	mxp_vîf
;

112 
ˇddr_t
 
	mxp_p1
;

113 
ˇddr_t
 
	mxp_p2
;

114 
	mxp_∑d
 [256];

120 
	#svc_gëˇŒî
(
x
Ë(&(x)->
xp_øddr
)

	)

130 
	#SVC_RECV
(
x¥t
, 
msg
) \

131 (*(
x¥t
)->
xp_›s
->
xp_ªcv
)((x¥t), (
msg
))

	)

132 
	#svc_ªcv
(
x¥t
, 
msg
) \

133 (*(
x¥t
)->
xp_›s
->
xp_ªcv
)((x¥t), (
msg
))

	)

135 
	#SVC_STAT
(
x¥t
) \

136 (*(
x¥t
)->
xp_›s
->
xp_°©
)(x¥t)

	)

137 
	#svc_°©
(
x¥t
) \

138 (*(
x¥t
)->
xp_›s
->
xp_°©
)(x¥t)

	)

140 
	#SVC_GETARGS
(
x¥t
, 
x¨gs
, 
¨g•
) \

141 (*(
x¥t
)->
xp_›s
->
xp_gë¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

142 
	#svc_gë¨gs
(
x¥t
, 
x¨gs
, 
¨g•
) \

143 (*(
x¥t
)->
xp_›s
->
xp_gë¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

145 
	#SVC_REPLY
(
x¥t
, 
msg
) \

146 (*(
x¥t
)->
xp_›s
->
xp_ª∂y
Ë((x¥t), (
msg
))

	)

147 
	#svc_ª∂y
(
x¥t
, 
msg
) \

148 (*(
x¥t
)->
xp_›s
->
xp_ª∂y
Ë((x¥t), (
msg
))

	)

150 
	#SVC_FREEARGS
(
x¥t
, 
x¨gs
, 
¨g•
) \

151 (*(
x¥t
)->
xp_›s
->
xp_‰ì¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

152 
	#svc_‰ì¨gs
(
x¥t
, 
x¨gs
, 
¨g•
) \

153 (*(
x¥t
)->
xp_›s
->
xp_‰ì¨gs
)((x¥t), (
x¨gs
), (
¨g•
))

	)

155 
	#SVC_DESTROY
(
x¥t
) \

156 (*(
x¥t
)->
xp_›s
->
xp_de°roy
)(x¥t)

	)

157 
	#svc_de°roy
(
x¥t
) \

158 (*(
x¥t
)->
xp_›s
->
xp_de°roy
)(x¥t)

	)

164 
	ssvc_ªq
 {

165 
Ω˝rog_t
 
	mrq_¥og
;

166 
Ωcvîs_t
 
	mrq_vîs
;

167 
Ω˝roc_t
 
	mrq_¥oc
;

168 
›aque_auth
 
	mrq_¸ed
;

169 
ˇddr_t
 
	mrq_˛¡¸ed
;

170 
SVCXPRT
 *
	mrq_x¥t
;

173 #i‚de‡
__DISPATCH_FN_T


174 
	#__DISPATCH_FN_T


	)

175 (*
	t__di•©ch_‚_t
Ë(
	tsvc_ªq
*, 
	tSVCXPRT
*);

188 
boﬁ_t
 
	$svc_ªgi°î
 (
SVCXPRT
 *
__x¥t
, 
Ω˝rog_t
 
__¥og
,

189 
Ωcvîs_t
 
__vîs
, 
__di•©ch_‚_t
 
__di•©ch
,

190 
Ω˝rŸ_t
 
__¥Ÿocﬁ
Ë
__THROW
;

199 
	$svc_uƒegi°î
 (
Ω˝rog_t
 
__¥og
, 
Ωcvîs_t
 
__vîs
Ë
__THROW
;

207 
	$x¥t_ªgi°î
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

215 
	$x¥t_uƒegi°î
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

244 
boﬁ_t
 
	$svc_£ndª∂y
 (
SVCXPRT
 *
__x¥t
, 
xdΩroc_t
 
__xdr_ªsu…s
,

245 
ˇddr_t
 
__xdr_loˇti⁄
Ë
__THROW
;

247 
	$sv˚º_decode
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

249 
	$sv˚º_wókauth
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

251 
	$sv˚º_n›roc
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

253 
	$sv˚º_¥ogvîs
 (
SVCXPRT
 *
__x¥t
, 
Ωcvîs_t
 
__low_vîs
,

254 
Ωcvîs_t
 
__high_vîs
Ë
__THROW
;

256 
	$sv˚º_auth
 (
SVCXPRT
 *
__x¥t
, 
auth_°©
 
__why
Ë
__THROW
;

258 
	$sv˚º_n›rog
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

260 
	$sv˚º_sy°emîr
 (
SVCXPRT
 *
__x¥t
Ë
__THROW
;

278 
pﬁlfd
 *
svc_pﬁlfd
;

279 
svc_max_pﬁlfd
;

280 
fd_£t
 
svc_fd£t
;

281 
	#svc_fds
 
svc_fd£t
.
fds_bôs
[0]

	)

287 
	$svc_gëªq
 (
__rdfds
Ë
__THROW
;

288 
	$svc_gëªq_comm⁄
 (c⁄° 
__fd
Ë
__THROW
;

289 
	$svc_gëªq£t
 (
fd_£t
 *
__ªadfds
Ë
__THROW
;

290 
	$svc_gëªq_pﬁl
 (
pﬁlfd
 *, c⁄° Ë
__THROW
;

291 
	$svc_exô
 (Ë
__THROW
;

292 
	$svc_run
 (Ë
__THROW
;

297 
	#RPC_ANYSOCK
 -1

	)

306 
SVCXPRT
 *
	$sv¸aw_¸óã
 (Ë
__THROW
;

311 
SVCXPRT
 *
	$svcudp_¸óã
 (
__sock
Ë
__THROW
;

312 
SVCXPRT
 *
	$svcudp_buf¸óã
 (
__sock
, 
u_öt
 
__£ndsz
, u_öà
__ªcvsz
)

313 
__THROW
;

318 
SVCXPRT
 *
	$sv˘˝_¸óã
 (
__sock
, 
u_öt
 
__£ndsize
, u_öà
__ªcvsize
)

319 
__THROW
;

324 
SVCXPRT
 *
	$svcfd_¸óã
 (
__sock
, 
u_öt
 
__£ndsize
, u_öà
__ªcvsize
)

325 
__THROW
;

330 
SVCXPRT
 *
	$svcunix_¸óã
 (
__sock
, 
u_öt
 
__£ndsize
, u_öà
__ªcvsize
,

331 *
__∑th
Ë
__THROW
;

334 
__END_DECLS


	@/usr/include/rpc/svc_auth.h

34 #i‚de‡
_RPC_SVC_AUTH_H


35 
	#_RPC_SVC_AUTH_H
 1

	)

37 
	~<„©uªs.h
>

38 
	~<Ωc/svc.h
>

40 
__BEGIN_DECLS


45 
auth_°©
 
	$_authítiˇã
 (
svc_ªq
 *
__rq°
,

46 
Ωc_msg
 *
__msg
Ë
__THROW
;

48 
__END_DECLS


	@/usr/include/rpc/xdr.h

34 #i‚de‡
_RPC_XDR_H


35 
	#_RPC_XDR_H
 1

	)

37 
	~<„©uªs.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<Ωc/ty≥s.h
>

42 
	~<°dio.h
>

44 
__BEGIN_DECLS


81 
	exdr_›
 {

82 
	mXDR_ENCODE
 = 0,

83 
	mXDR_DECODE
 = 1,

84 
	mXDR_FREE
 = 2

90 
	#BYTES_PER_XDR_UNIT
 (4)

	)

97 
	#RNDUP
(
x
Ë(((xË+ 
BYTES_PER_XDR_UNIT
 - 1Ë& ~(BYTES_PER_XDR_UNIT - 1))

	)

99 
	#RNDUP
(
x
Ë((((xË+ 
BYTES_PER_XDR_UNIT
 - 1) / BYTES_PER_XDR_UNIT) \

100 * 
BYTES_PER_XDR_UNIT
)

	)

109 
XDR
 
	tXDR
;

110 
	sXDR


112 
xdr_›
 
	mx_›
;

113 
	sxdr_›s


115 
boﬁ_t
 (*
x_gël⁄g
Ë(
XDR
 *
	m__xdrs
, *
	m__Õ
);

117 
boﬁ_t
 (*
x_pué⁄g
Ë(
XDR
 *
	m__xdrs
, c⁄° *
	m__Õ
);

119 
boﬁ_t
 (*
x_gëbyãs
Ë(
XDR
 *
	m__xdrs
, 
ˇddr_t
 
	m__addr
, 
u_öt
 
	m__Àn
);

121 
boﬁ_t
 (*
x_putbyãs
Ë(
XDR
 *
	m__xdrs
, c⁄° *
	m__addr
, 
u_öt
 
	m__Àn
);

123 
u_öt
 (*
x_gëpo°n
Ë(c⁄° 
XDR
 *
	m__xdrs
);

125 
boﬁ_t
 (*
x_£ço°n
Ë(
XDR
 *
	m__xdrs
, 
u_öt
 
	m__pos
);

127 
	möt32_t
 *(*
	mx_ölöe
Ë(
XDR
 *
	m__xdrs
, 
u_öt
 
	m__Àn
);

129 (*
	mx_de°roy
Ë(
XDR
 *
	m__xdrs
);

131 
boﬁ_t
 (*
x_gëöt32
Ë(
XDR
 *
	m__xdrs
, 
öt32_t
 *
	m__ù
);

133 
boﬁ_t
 (*
x_putöt32
Ë(
XDR
 *
	m__xdrs
, c⁄° 
öt32_t
 *
	m__ù
);

136 *
	mx_›s
;

137 
ˇddr_t
 
	mx_public
;

138 
ˇddr_t
 
	mx_¥iv©e
;

139 
ˇddr_t
 
	mx_ba£
;

140 
u_öt
 
	mx_h™dy
;

152 
	$boﬁ_t
 (*
	txdΩroc_t
Ë(
	tXDR
 *, *,...);

165 
	#XDR_GETINT32
(
xdrs
, 
öt32p
) \

166 (*(
xdrs
)->
x_›s
->
x_gëöt32
)(xdrs, 
öt32p
)

	)

167 
	#xdr_gëöt32
(
xdrs
, 
öt32p
) \

168 (*(
xdrs
)->
x_›s
->
x_gëöt32
)(xdrs, 
öt32p
)

	)

170 
	#XDR_PUTINT32
(
xdrs
, 
öt32p
) \

171 (*(
xdrs
)->
x_›s
->
x_putöt32
)(xdrs, 
öt32p
)

	)

172 
	#xdr_putöt32
(
xdrs
, 
öt32p
) \

173 (*(
xdrs
)->
x_›s
->
x_putöt32
)(xdrs, 
öt32p
)

	)

175 
	#XDR_GETLONG
(
xdrs
, 
l⁄gp
) \

176 (*(
xdrs
)->
x_›s
->
x_gël⁄g
)(xdrs, 
l⁄gp
)

	)

177 
	#xdr_gël⁄g
(
xdrs
, 
l⁄gp
) \

178 (*(
xdrs
)->
x_›s
->
x_gël⁄g
)(xdrs, 
l⁄gp
)

	)

180 
	#XDR_PUTLONG
(
xdrs
, 
l⁄gp
) \

181 (*(
xdrs
)->
x_›s
->
x_pué⁄g
)(xdrs, 
l⁄gp
)

	)

182 
	#xdr_pué⁄g
(
xdrs
, 
l⁄gp
) \

183 (*(
xdrs
)->
x_›s
->
x_pué⁄g
)(xdrs, 
l⁄gp
)

	)

185 
	#XDR_GETBYTES
(
xdrs
, 
addr
, 
Àn
) \

186 (*(
xdrs
)->
x_›s
->
x_gëbyãs
)(xdrs, 
addr
, 
Àn
)

	)

187 
	#xdr_gëbyãs
(
xdrs
, 
addr
, 
Àn
) \

188 (*(
xdrs
)->
x_›s
->
x_gëbyãs
)(xdrs, 
addr
, 
Àn
)

	)

190 
	#XDR_PUTBYTES
(
xdrs
, 
addr
, 
Àn
) \

191 (*(
xdrs
)->
x_›s
->
x_putbyãs
)(xdrs, 
addr
, 
Àn
)

	)

192 
	#xdr_putbyãs
(
xdrs
, 
addr
, 
Àn
) \

193 (*(
xdrs
)->
x_›s
->
x_putbyãs
)(xdrs, 
addr
, 
Àn
)

	)

195 
	#XDR_GETPOS
(
xdrs
) \

196 (*(
xdrs
)->
x_›s
->
x_gëpo°n
)(xdrs)

	)

197 
	#xdr_gëpos
(
xdrs
) \

198 (*(
xdrs
)->
x_›s
->
x_gëpo°n
)(xdrs)

	)

200 
	#XDR_SETPOS
(
xdrs
, 
pos
) \

201 (*(
xdrs
)->
x_›s
->
x_£ço°n
)(xdrs, 
pos
)

	)

202 
	#xdr_£ços
(
xdrs
, 
pos
) \

203 (*(
xdrs
)->
x_›s
->
x_£ço°n
)(xdrs, 
pos
)

	)

205 
	#XDR_INLINE
(
xdrs
, 
Àn
) \

206 (*(
xdrs
)->
x_›s
->
x_ölöe
)(xdrs, 
Àn
)

	)

207 
	#xdr_ölöe
(
xdrs
, 
Àn
) \

208 (*(
xdrs
)->
x_›s
->
x_ölöe
)(xdrs, 
Àn
)

	)

210 
	#XDR_DESTROY
(
xdrs
) \

212 i‡((
xdrs
)->
x_›s
->
x_de°roy
) \

213 (*(
xdrs
)->
x_›s
->
x_de°roy
)(xdrs); \

214 
	}
} 0)

	)

215 
	#xdr_de°roy
(
xdrs
) \

217 i‡((
xdrs
)->
x_›s
->
x_de°roy
) \

218 (*(
xdrs
)->
x_›s
->
x_de°roy
)(xdrs); \

219 } 0)

	)

231 
	#NULL_xdΩroc_t
 ((
xdΩroc_t
)0)

	)

232 
	sxdr_dis¸im


234 
	mvÆue
;

235 
xdΩroc_t
 
	m¥oc
;

254 
	#IXDR_GET_INT32
(
buf
Ë((
öt32_t
)
	`¡ohl
((
uöt32_t
)*(buf)++))

	)

255 
	#IXDR_PUT_INT32
(
buf
, 
v
Ë(*(buf)++ = (
öt32_t
)
	`ht⁄l
((
uöt32_t
)(v)))

	)

256 
	#IXDR_GET_U_INT32
(
buf
Ë((
uöt32_t
)
	`IXDR_GET_INT32
(buf))

	)

257 
	#IXDR_PUT_U_INT32
(
buf
, 
v
Ë
	`IXDR_PUT_INT32
(buf, (
öt32_t
)(v))

	)

263 
	#IXDR_GET_LONG
(
buf
Ë(()
	`IXDR_GET_U_INT32
(buf))

	)

264 
	#IXDR_PUT_LONG
(
buf
, 
v
Ë(()
	`IXDR_PUT_INT32
(buf, ()(v)))

	)

265 
	#IXDR_GET_U_LONG
(
buf
Ë((
u_l⁄g
)
	`IXDR_GET_LONG
(buf))

	)

266 
	#IXDR_PUT_U_LONG
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

269 
	#IXDR_GET_BOOL
(
buf
Ë((
boﬁ_t
)
	`IXDR_GET_LONG
(buf))

	)

270 
	#IXDR_GET_ENUM
(
buf
, 
t
Ë(—)
	`IXDR_GET_LONG
(buf))

	)

271 
	#IXDR_GET_SHORT
(
buf
Ë(()
	`IXDR_GET_LONG
(buf))

	)

272 
	#IXDR_GET_U_SHORT
(
buf
Ë((
u_sh‹t
)
	`IXDR_GET_LONG
(buf))

	)

274 
	#IXDR_PUT_BOOL
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

275 
	#IXDR_PUT_ENUM
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

276 
	#IXDR_PUT_SHORT
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

277 
	#IXDR_PUT_U_SHORT
(
buf
, 
v
Ë
	`IXDR_PUT_LONG
(buf, ()(v))

	)

285 
boﬁ_t
 
	$xdr_void
 (Ë
__THROW
;

286 
boﬁ_t
 
	$xdr_sh‹t
 (
XDR
 *
__xdrs
, *
__•
Ë
__THROW
;

287 
boﬁ_t
 
	$xdr_u_sh‹t
 (
XDR
 *
__xdrs
, 
u_sh‹t
 *
__u•
Ë
__THROW
;

288 
boﬁ_t
 
	$xdr_öt
 (
XDR
 *
__xdrs
, *
__ù
Ë
__THROW
;

289 
boﬁ_t
 
	$xdr_u_öt
 (
XDR
 *
__xdrs
, 
u_öt
 *
__up
Ë
__THROW
;

290 
boﬁ_t
 
	$xdr_l⁄g
 (
XDR
 *
__xdrs
, *
__Õ
Ë
__THROW
;

291 
boﬁ_t
 
	$xdr_u_l⁄g
 (
XDR
 *
__xdrs
, 
u_l⁄g
 *
__uÕ
Ë
__THROW
;

292 
boﬁ_t
 
	$xdr_hy≥r
 (
XDR
 *
__xdrs
, 
quad_t
 *
__Œp
Ë
__THROW
;

293 
boﬁ_t
 
	$xdr_u_hy≥r
 (
XDR
 *
__xdrs
, 
u_quad_t
 *
__uŒp
Ë
__THROW
;

294 
boﬁ_t
 
	$xdr_l⁄gl⁄g_t
 (
XDR
 *
__xdrs
, 
quad_t
 *
__Œp
Ë
__THROW
;

295 
boﬁ_t
 
	$xdr_u_l⁄gl⁄g_t
 (
XDR
 *
__xdrs
, 
u_quad_t
 *
__uŒp
Ë
__THROW
;

296 
boﬁ_t
 
	$xdr_öt8_t
 (
XDR
 *
__xdrs
, 
öt8_t
 *
__ù
Ë
__THROW
;

297 
boﬁ_t
 
	$xdr_uöt8_t
 (
XDR
 *
__xdrs
, 
uöt8_t
 *
__up
Ë
__THROW
;

298 
boﬁ_t
 
	$xdr_öt16_t
 (
XDR
 *
__xdrs
, 
öt16_t
 *
__ù
Ë
__THROW
;

299 
boﬁ_t
 
	$xdr_uöt16_t
 (
XDR
 *
__xdrs
, 
uöt16_t
 *
__up
Ë
__THROW
;

300 
boﬁ_t
 
	$xdr_öt32_t
 (
XDR
 *
__xdrs
, 
öt32_t
 *
__ù
Ë
__THROW
;

301 
boﬁ_t
 
	$xdr_uöt32_t
 (
XDR
 *
__xdrs
, 
uöt32_t
 *
__up
Ë
__THROW
;

302 
boﬁ_t
 
	$xdr_öt64_t
 (
XDR
 *
__xdrs
, 
öt64_t
 *
__ù
Ë
__THROW
;

303 
boﬁ_t
 
	$xdr_uöt64_t
 (
XDR
 *
__xdrs
, 
uöt64_t
 *
__up
Ë
__THROW
;

304 
boﬁ_t
 
	$xdr_quad_t
 (
XDR
 *
__xdrs
, 
quad_t
 *
__ù
Ë
__THROW
;

305 
boﬁ_t
 
	$xdr_u_quad_t
 (
XDR
 *
__xdrs
, 
u_quad_t
 *
__up
Ë
__THROW
;

306 
boﬁ_t
 
	$xdr_boﬁ
 (
XDR
 *
__xdrs
, 
boﬁ_t
 *
__bp
Ë
__THROW
;

307 
boﬁ_t
 
	$xdr_íum
 (
XDR
 *
__xdrs
, 
íum_t
 *
__ï
Ë
__THROW
;

308 
boﬁ_t
 
	$xdr_¨øy
 (
XDR
 * 
_xdrs
, 
ˇddr_t
 *
__addΩ
, 
u_öt
 *
__sizï
,

309 
u_öt
 
__maxsize
, u_öà
__ñsize
, 
xdΩroc_t
 
__ñ¥oc
)

310 
__THROW
;

311 
boﬁ_t
 
	$xdr_byãs
 (
XDR
 *
__xdrs
, **
__˝p
, 
u_öt
 *
__sizï
,

312 
u_öt
 
__maxsize
Ë
__THROW
;

313 
boﬁ_t
 
	$xdr_›aque
 (
XDR
 *
__xdrs
, 
ˇddr_t
 
__˝
, 
u_öt
 
__˙t
Ë
__THROW
;

314 
boﬁ_t
 
	$xdr_°rög
 (
XDR
 *
__xdrs
, **
__˝p
, 
u_öt
 
__maxsize
Ë
__THROW
;

315 
boﬁ_t
 
	$xdr_uni⁄
 (
XDR
 *
__xdrs
, 
íum_t
 *
__dscmp
, *
__u≈
,

316 c⁄° 
xdr_dis¸im
 *
__choi˚s
,

317 
xdΩroc_t
 
__dÁu…
Ë
__THROW
;

318 
boﬁ_t
 
	$xdr_ch¨
 (
XDR
 *
__xdrs
, *
__˝
Ë
__THROW
;

319 
boﬁ_t
 
	$xdr_u_ch¨
 (
XDR
 *
__xdrs
, 
u_ch¨
 *
__˝
Ë
__THROW
;

320 
boﬁ_t
 
	$xdr_ve˘‹
 (
XDR
 *
__xdrs
, *
__ba£p
, 
u_öt
 
__√Àm
,

321 
u_öt
 
__ñemsize
, 
xdΩroc_t
 
__xdr_ñem
Ë
__THROW
;

322 
boﬁ_t
 
	$xdr_Êﬂt
 (
XDR
 *
__xdrs
, *
__Â
Ë
__THROW
;

323 
boﬁ_t
 
	$xdr_doubÀ
 (
XDR
 *
__xdrs
, *
__dp
Ë
__THROW
;

324 
boﬁ_t
 
	$xdr_ª„ªn˚
 (
XDR
 *
__xdrs
, 
ˇddr_t
 *
__xµ
, 
u_öt
 
__size
,

325 
xdΩroc_t
 
__¥oc
Ë
__THROW
;

326 
boﬁ_t
 
	$xdr_poöãr
 (
XDR
 *
__xdrs
, **
__objµ
,

327 
u_öt
 
__obj_size
, 
xdΩroc_t
 
__xdr_obj
Ë
__THROW
;

328 
boﬁ_t
 
	$xdr_wøp°rög
 (
XDR
 *
__xdrs
, **
__˝p
Ë
__THROW
;

329 
u_l⁄g
 
	$xdr_sizeof
 (
xdΩroc_t
, *Ë
__THROW
;

335 
	#MAX_NETOBJ_SZ
 1024

	)

336 
	s√tobj


338 
u_öt
 
n_Àn
;

339 *
n_byãs
;

341 
√tobj
 
	t√tobj
;

342 
boﬁ_t
 
	$xdr_√tobj
 (
XDR
 *
__xdrs
, 
√tobj
 *
__≈
Ë
__THROW
;

350 
	$xdrmem_¸óã
 (
XDR
 *
__xdrs
, c⁄° 
ˇddr_t
 
__addr
,

351 
u_öt
 
__size
, 
xdr_›
 
__x›
Ë
__THROW
;

354 
	$xdr°dio_¸óã
 (
XDR
 *
__xdrs
, 
FILE
 *
__fûe
, 
xdr_›
 
__x›
)

355 
__THROW
;

358 
	`xdºec_¸óã
 (
XDR
 *
__xdrs
, 
u_öt
 
__£ndsize
,

359 
u_öt
 
__ªcvsize
, 
ˇddr_t
 
__t˝_h™dÀ
,

360 (*
__ªadô
) (*, *, ),

361 (*
__wrôeô
Ë(*, *, )Ë
__THROW
;

364 
boﬁ_t
 
	$xdºec_ído‰ec‹d
 (
XDR
 *
__xdrs
, 
boﬁ_t
 
__£ndnow
Ë
__THROW
;

367 
boﬁ_t
 
	$xdºec_skùªc‹d
 (
XDR
 *
__xdrs
Ë
__THROW
;

370 
boﬁ_t
 
	$xdºec_eof
 (
XDR
 *
__xdrs
Ë
__THROW
;

373 
	$xdr_‰ì
 (
xdΩroc_t
 
__¥oc
, *
__objp
Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/ipc.h

18 #i‚de‡
_SYS_IPC_H


19 
	#_SYS_IPC_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

28 
	~<bôs/ù˘y≥s.h
>

29 
	~<bôs/ùc.h
>

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 #i‚de‡
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

41 #i‚de‡
__mode_t_deföed


42 
__mode_t
 
	tmode_t
;

43 
	#__mode_t_deföed


	)

46 #i‚de‡
__key_t_deföed


47 
__key_t
 
	tkey_t
;

48 
	#__key_t_deföed


	)

51 
__BEGIN_DECLS


54 
key_t
 
	$·ok
 (c⁄° *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

56 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‚de‡
NCARGS


54 #ifde‡
ARG_MAX


55 
	#NCARGS
 
ARG_MAX


	)

59 
	#NCARGS
 
INT_MAX


	)

65 #i‚de‡
NOGROUP


66 
	#NOGROUP
 65535

	)

68 #i‚de‡
NODEV


69 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

74 #i‚de‡
DEV_BSIZE


75 
	#DEV_BSIZE
 512

	)

80 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

81 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

82 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

83 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

86 #i‚de‡
howm™y


87 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

89 #ifde‡
__GNUC__


90 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

91 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

92 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

94 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

96 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

99 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

100 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	g__BEGIN_DECLS


28 
	~<bôs/uio.h
>

39 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

40 
__wur
;

50 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

51 
__wur
;

54 #ifde‡
__USE_BSD


55 #i‚de‡
__USE_FILE_OFFSET64


65 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

66 
__off_t
 
__off£t
Ë
__wur
;

77 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

78 
__off_t
 
__off£t
Ë
__wur
;

80 #ifde‡
__REDIRECT


81 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

82 
__cou¡
, 
__off64_t
 
__off£t
),

83 
¥ódv64
Ë
__wur
;

84 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
pwrôev64
Ë
__wur
;

88 
	#¥ódv
 
¥ódv64


	)

89 
	#pwrôev
 
pwrôev64


	)

93 #ifde‡
__USE_LARGEFILE64


103 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

104 
__off64_t
 
__off£t
Ë
__wur
;

115 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

116 
__off64_t
 
__off£t
Ë
__wur
;

120 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 020200000

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

126 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

127 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

130 #ifde‡
__USE_GNU


131 
	#O_DIRECT
 
__O_DIRECT


	)

132 
	#O_NOATIME
 
__O_NOATIME


	)

133 
	#O_PATH
 
__O_PATH


	)

134 
	#O_TMPFILE
 
__O_TMPFILE


	)

140 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


141 
	#O_DSYNC
 
__O_DSYNC


	)

142 #i‡
deföed
 
__O_RSYNC


143 
	#O_RSYNC
 
__O_RSYNC


	)

145 
	#O_RSYNC
 
O_SYNC


	)

150 
	#F_DUPFD
 0

	)

151 
	#F_GETFD
 1

	)

152 
	#F_SETFD
 2

	)

153 
	#F_GETFL
 3

	)

154 
	#F_SETFL
 4

	)

156 #i‚de‡
__F_SETOWN


157 
	#__F_SETOWN
 8

	)

158 
	#__F_GETOWN
 9

	)

161 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


162 
	#F_SETOWN
 
__F_SETOWN


	)

163 
	#F_GETOWN
 
__F_GETOWN


	)

166 #i‚de‡
__F_SETSIG


167 
	#__F_SETSIG
 10

	)

168 
	#__F_GETSIG
 11

	)

170 #i‚de‡
__F_SETOWN_EX


171 
	#__F_SETOWN_EX
 15

	)

172 
	#__F_GETOWN_EX
 16

	)

175 #ifde‡
__USE_GNU


176 
	#F_SETSIG
 
__F_SETSIG


	)

177 
	#F_GETSIG
 
__F_GETSIG


	)

178 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

179 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

182 #ifde‡
__USE_GNU


183 
	#F_SETLEASE
 1024

	)

184 
	#F_GETLEASE
 1025

	)

185 
	#F_NOTIFY
 1026

	)

186 
	#F_SETPIPE_SZ
 1031

	)

187 
	#F_GETPIPE_SZ
 1032

	)

189 #ifde‡
__USE_XOPEN2K8


190 
	#F_DUPFD_CLOEXEC
 1030

	)

195 
	#FD_CLOEXEC
 1

	)

197 #i‚de‡
F_RDLCK


199 
	#F_RDLCK
 0

	)

200 
	#F_WRLCK
 1

	)

201 
	#F_UNLCK
 2

	)

206 #i‚de‡
F_EXLCK


207 
	#F_EXLCK
 4

	)

208 
	#F_SHLCK
 8

	)

211 #ifde‡
__USE_BSD


213 
	#LOCK_SH
 1

	)

214 
	#LOCK_EX
 2

	)

215 
	#LOCK_NB
 4

	)

217 
	#LOCK_UN
 8

	)

220 #ifde‡
__USE_GNU


221 
	#LOCK_MAND
 32

	)

222 
	#LOCK_READ
 64

	)

223 
	#LOCK_WRITE
 128

	)

224 
	#LOCK_RW
 192

	)

227 #ifde‡
__USE_GNU


229 
	#DN_ACCESS
 0x00000001

	)

230 
	#DN_MODIFY
 0x00000002

	)

231 
	#DN_CREATE
 0x00000004

	)

232 
	#DN_DELETE
 0x00000008

	)

233 
	#DN_RENAME
 0x00000010

	)

234 
	#DN_ATTRIB
 0x00000020

	)

235 
	#DN_MULTISHOT
 0x80000000

	)

239 #ifde‡
__USE_GNU


241 
	e__pid_ty≥


243 
	mF_OWNER_TID
 = 0,

244 
	mF_OWNER_PID
,

245 
	mF_OWNER_PGRP
,

246 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


250 
	sf_ow√r_ex


252 
__pid_ty≥
 
	mty≥
;

253 
__pid_t
 
	mpid
;

259 #ifdef 
__USE_BSD


260 
	#FAPPEND
 
O_APPEND


	)

261 
	#FFSYNC
 
O_FSYNC


	)

262 
	#FASYNC
 
O_ASYNC


	)

263 
	#FNONBLOCK
 
O_NONBLOCK


	)

264 
	#FNDELAY
 
O_NDELAY


	)

267 #i‚de‡
__POSIX_FADV_DONTNEED


268 
	#__POSIX_FADV_DONTNEED
 4

	)

269 
	#__POSIX_FADV_NOREUSE
 5

	)

272 #ifde‡
__USE_XOPEN2K


273 
	#POSIX_FADV_NORMAL
 0

	)

274 
	#POSIX_FADV_RANDOM
 1

	)

275 
	#POSIX_FADV_SEQUENTIAL
 2

	)

276 
	#POSIX_FADV_WILLNEED
 3

	)

277 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

278 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

282 #ifde‡
__USE_GNU


284 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

287 
	#SYNC_FILE_RANGE_WRITE
 2

	)

290 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

295 
	#SPLICE_F_MOVE
 1

	)

296 
	#SPLICE_F_NONBLOCK
 2

	)

299 
	#SPLICE_F_MORE
 4

	)

300 
	#SPLICE_F_GIFT
 8

	)

304 
	#FALLOC_FL_KEEP_SIZE
 1

	)

307 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

311 
	sfûe_h™dÀ


313 
	mh™dÀ_byãs
;

314 
	mh™dÀ_ty≥
;

316 
	mf_h™dÀ
[0];

320 
	#MAX_HANDLE_SZ
 128

	)

324 #ifde‡
__USE_ATFILE


325 
	#AT_FDCWD
 -100

	)

328 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

329 
	#AT_REMOVEDIR
 0x200

	)

331 
	#AT_SYMLINK_FOLLOW
 0x400

	)

332 #ifde‡
__USE_GNU


333 
	#AT_NO_AUTOMOUNT
 0x800

	)

335 
	#AT_EMPTY_PATH
 0x1000

	)

337 
	#AT_EACCESS
 0x200

	)

341 
	g__BEGIN_DECLS


343 #ifde‡
__USE_GNU


346 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

347 
__THROW
;

354 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

355 
__Êags
);

362 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

363 
size_t
 
__cou¡
, 
__Êags
);

369 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

370 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

371 
__Êags
);

377 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

378 
__Êags
);

384 #i‚de‡
__USE_FILE_OFFSET64


385 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

387 #ifde‡
__REDIRECT


388 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

389 
__off64_t
 
__Àn
),

390 
ÁŒoˇã64
);

392 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

397 
__off64_t
 
__Àn
);

402 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

403 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

404 
__Êags
Ë
__THROW
;

410 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

411 
__Êags
);

415 
__END_DECLS


	@/usr/include/bits/ipc.h

18 #i‚de‡
_SYS_IPC_H


22 
	~<bôs/ty≥s.h
>

25 
	#IPC_CREAT
 01000

	)

26 
	#IPC_EXCL
 02000

	)

27 
	#IPC_NOWAIT
 04000

	)

30 
	#IPC_RMID
 0

	)

31 
	#IPC_SET
 1

	)

32 
	#IPC_STAT
 2

	)

33 #ifde‡
__USE_GNU


34 
	#IPC_INFO
 3

	)

38 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

42 
	sùc_≥rm


44 
__key_t
 
	m__key
;

45 
__uid_t
 
	muid
;

46 
__gid_t
 
	mgid
;

47 
__uid_t
 
	mcuid
;

48 
__gid_t
 
	mcgid
;

49 
	mmode
;

50 
	m__∑d1
;

51 
	m__£q
;

52 
	m__∑d2
;

53 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved1
;

54 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved2
;

	@/usr/include/bits/ipctypes.h

19 #i‚de‡
_SYS_IPC_H


23 #i‚de‡
_BITS_IPCTYPES_H


24 
	#_BITS_IPCTYPES_H
 1

	)

27 #ifde‡
__x86_64__


28 
	t__ùc_pid_t
;

30 
	t__ùc_pid_t
;

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 #ifde‡
__MAP_ANONYMOUS


53 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

55 
	#MAP_ANONYMOUS
 0x20

	)

57 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

59 
	#MAP_HUGE_SHIFT
 26

	)

60 
	#MAP_HUGE_MASK
 0x3f

	)

64 
	#MS_ASYNC
 1

	)

65 
	#MS_SYNC
 4

	)

66 
	#MS_INVALIDATE
 2

	)

69 #ifde‡
__USE_GNU


70 
	#MREMAP_MAYMOVE
 1

	)

71 
	#MREMAP_FIXED
 2

	)

75 #ifde‡
__USE_BSD


76 
	#MADV_NORMAL
 0

	)

77 
	#MADV_RANDOM
 1

	)

78 
	#MADV_SEQUENTIAL
 2

	)

79 
	#MADV_WILLNEED
 3

	)

80 
	#MADV_DONTNEED
 4

	)

81 
	#MADV_REMOVE
 9

	)

82 
	#MADV_DONTFORK
 10

	)

83 
	#MADV_DOFORK
 11

	)

84 
	#MADV_MERGEABLE
 12

	)

85 
	#MADV_UNMERGEABLE
 13

	)

86 
	#MADV_HUGEPAGE
 14

	)

87 
	#MADV_NOHUGEPAGE
 15

	)

88 
	#MADV_DONTDUMP
 16

	)

90 
	#MADV_DODUMP
 17

	)

91 
	#MADV_HWPOISON
 100

	)

95 #ifde‡
__USE_XOPEN2K


96 
	#POSIX_MADV_NORMAL
 0

	)

97 
	#POSIX_MADV_RANDOM
 1

	)

98 
	#POSIX_MADV_SEQUENTIAL
 2

	)

99 
	#POSIX_MADV_WILLNEED
 3

	)

100 
	#POSIX_MADV_DONTNEED
 4

	)

104 #i‚de‡
MCL_CURRENT


105 
	#MCL_CURRENT
 1

	)

106 
	#MCL_FUTURE
 2

	)

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

27 #ifde‡
_LIBC


28 
	~<lowÀvñlock.h
>

29 
	~<és.h
>

30 
	~<±hªad-fun˘i⁄s.h
>

31 
	~<î∫o.h
>

32 
	~<gnu/›ti⁄-groups.h
>

36 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


37 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


38 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

40 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

43 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

53 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

54 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

59 #i‡
LLL_LOCK_INITIALIZER
 == 0

60 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

63 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

64 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

66 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

67 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

69 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

70 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

71 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

72 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

76 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

77 
	#__libc_lock_öô_ªcursive
(
NAME
) \

78 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

80 
	#__libc_lock_öô_ªcursive
(
NAME
) \

82 i‡(
__±hªad_muãx_öô
 !
NULL
) \

84 
±hªad_muãx©å_t
 
__©å
; \

85 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

86 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

87 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

88 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

90 } 0)

	)

94 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

95 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

97 
	#__libc_lock_föi_ªcursive
(
NAME
) \

98 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

102 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

103 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

107 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

108 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

110 #i‡
__OPTION_EGLIBC_BIG_MACROS


111 
	#__libc_lock_lock_ªcursive
(
NAME
) \

113 *
£lf
 = 
THREAD_SELF
; \

114 i‡((
NAME
).
ow√r
 !
£lf
) \

116 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

117 (
NAME
).
ow√r
 = 
£lf
; \

119 ++(
NAME
).
˙t
; \

120 } 0)

	)

122 
	#__libc_lock_lock_ªcursive
(
NAME
) \

123 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

126 
	#__libc_lock_lock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

132 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

136 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

137 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

139 #i‡
__OPTION_EGLIBC_BIG_MACROS


140 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

142 
ªsu…
 = 0; \

143 *
£lf
 = 
THREAD_SELF
; \

144 i‡((
NAME
).
ow√r
 !
£lf
) \

146 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

148 (
NAME
).
ow√r
 = 
£lf
; \

149 (
NAME
).
˙t
 = 1; \

152 
ªsu…
 = 
EBUSY
; \

155 ++(
NAME
).
˙t
; \

156 
ªsu…
; \

157 })

	)

159 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

160 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

163 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

164 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

168 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

169 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

173 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

174 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

176 #i‡
__OPTION_EGLIBC_BIG_MACROS


178 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

180 i‡(--(
NAME
).
˙t
 == 0) \

182 (
NAME
).
ow√r
 = 
NULL
; \

183 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

185 } 0)

	)

187 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

188 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

191 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

192 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

199 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

200 (*
routöe
Ë(*), *
¨g
);

201 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

202 
execuã
);

205 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

206 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

207 
_avaû
; \

208 i‡(
DOIT
) { \

209 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

210 i‡(
_avaû
) { \

211 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

212 
ARG
)); \

214 
_buf„r
.
__routöe
 = (
FCT
); \

215 
_buf„r
.
__¨g
 = (
ARG
); \

218 
_avaû
 = 0; \

219 }

	)

222 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

223 i‡(
_avaû
) { \

224 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

225 } i‡(
DOIT
) \

226 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

227 
	}

	)
}

232 #ifde‡
_LIBC


233 
	~"libc-lockP.h
"

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_¸óã_moduÀ


	)

13 
	#__°ub_Áâach


	)

14 
	#__°ub_fchÊags


	)

15 
	#__°ub_fdëach


	)

16 
	#__°ub_gë_kî√l_syms


	)

17 
	#__°ub_gëmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_nfs£rv˘l


	)

21 
	#__°ub_putmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

28 
	#__°ub_u£lib


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LOCALES
 1

	)

34 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

35 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

36 
	#__OPTION_EGLIBC_NIS
 1

	)

37 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

38 
	#__OPTION_EGLIBC_RCMD
 1

	)

39 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

40 
	#__OPTION_EGLIBC_SPAWN
 1

	)

41 
	#__OPTION_EGLIBC_STREAMS
 1

	)

42 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

43 
	#__OPTION_EGLIBC_UTMP
 1

	)

44 
	#__OPTION_EGLIBC_UTMPX
 1

	)

45 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

46 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

47 
	#__OPTION_POSIX_REGEXP
 1

	)

48 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

49 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/linux/stddef.h

	@
1
.
1
/usr/include
228
4886
bench.h
busy.c
bw_file_rd.c
bw_mem.c
bw_mmap_rd.c
bw_pipe.c
bw_tcp.c
bw_udp.c
bw_unix.c
cache.c
clock.c
disk.c
enough.c
flushdisk.c
getopt.c
hello.c
lat_cmd.c
lat_connect.c
lat_ctx.c
lat_dram_page.c
lat_fcntl.c
lat_fifo.c
lat_fs.c
lat_http.c
lat_mem_rd.c
lat_mmap.c
lat_ops.c
lat_pagefault.c
lat_pipe.c
lat_pmake.c
lat_proc.c
lat_rand.c
lat_rpc.c
lat_select.c
lat_sem.c
lat_sig.c
lat_syscall.c
lat_tcp.c
lat_udp.c
lat_unix.c
lat_unix_connect.c
lat_usleep.c
lib_debug.c
lib_debug.h
lib_mem.c
lib_mem.h
lib_sched.c
lib_stats.c
lib_tcp.c
lib_tcp.h
lib_timing.c
lib_udp.c
lib_udp.h
lib_unix.c
lib_unix.h
line.c
lmdd.c
lmhttp.c
loop_o.c
memsize.c
mhz.c
msleep.c
names.h
par_mem.c
par_ops.c
rhttp.c
seek.c
stats.h
stream.c
timing.h
timing_o.c
tlb.c
version.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/rpc/pmap_clnt.h
/usr/include/rpc/rpc.h
/usr/include/rpc/types.h
/usr/include/sched.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/mount.h
/usr/include/sys/resource.h
/usr/include/sys/sem.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/sysinfo.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/un.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/sem.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/kernel.h
/usr/include/rpc/auth.h
/usr/include/rpc/auth_des.h
/usr/include/rpc/auth_unix.h
/usr/include/rpc/clnt.h
/usr/include/rpc/netdb.h
/usr/include/rpc/rpc_msg.h
/usr/include/rpc/svc.h
/usr/include/rpc/svc_auth.h
/usr/include/rpc/xdr.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/ipc.h
/usr/include/sys/param.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/mman-linux.h
/usr/include/bits/param.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/socket_type.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs.h
/usr/include/limits.h
/usr/include/linux/errno.h
/usr/include/linux/sysinfo.h
/usr/include/stdc-predef.h
/usr/include/bits/libc-lock.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/xopen_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/types.h
/usr/include/wchar.h
/usr/include/bits/local_lim.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/linux/posix_types.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/linux/stddef.h
