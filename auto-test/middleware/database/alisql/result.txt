../../utils/sys_info.sh: line 27: [: too many arguments
+ export 'PS4=+{$LINENO:${FUNCNAME[0]}} '
+ PS4='+{$LINENO:${FUNCNAME[0]}} '
+{21:} alisql_install
+{21:alisql_install} yum install -y AliSQL-server
Loaded plugins: fastestmirror, priorities
Loading mirror speeds from cached hostfile
 * epel: mirrors.ustc.edu.cn
654 packages excluded due to repository priority protections
Package AliSQL-server-5.6.32-5.el7.centos.aarch64 already installed and latest version
Nothing to do
+{22:alisql_install} '[' 0 -eq 0 ']'
+{23:alisql_install} lava-test-case 'AliSQL-server install' --result pass
/usr/bin/lava-test-case AliSQL-server install --result pass
+{32:alisql_install} export LANG=en_US.UTF8
+{32:alisql_install} LANG=en_US.UTF8
+{33:alisql_install} yum info AliSQL-server
++{34:alisql_install} grep Version tmp.info
++{34:alisql_install} cut -d : -f 2
+{34:alisql_install} local 'version= 5.6.32'
++{35:alisql_install} grep 'From repo' tmp.info
++{35:alisql_install} cut -d : -f 2
+{35:alisql_install} local 'repo= Estuary'
+{36:alisql_install} '[' 5.6.32 = 5.6.32 -a Estuary = Estuary ']'
+{37:alisql_install} true
+{41:alisql_install} print_info 0 'alisql version is right'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='alisql version is right'
+{72:print_info} echo 'the result of alisql version is right is pass'
the result of alisql version is right is pass
+{73:print_info} lava-test-case alisql version is right --result pass
/usr/bin/lava-test-case alisql version is right --result pass
+{22:} alisql_start_custom
+{47:alisql_start_custom} '[' -z ']'
+{48:alisql_start_custom} port=3306
+{52:alisql_start_custom} local base=/mysql/3306
+{54:alisql_start_custom} rm -rf /mysql/3306
+{56:alisql_start_custom} mkdir -p /mysql/3306/data /mysql/3306/run /mysql/3306/log
+{57:alisql_start_custom} cp -f ./my.cnf /mysql/3306
+{58:alisql_start_custom} sed -i s/3306/3306/ /mysql/3306/my.cnf
+{59:alisql_start_custom} touch /mysql/3306/run/mysqld.pid
+{60:alisql_start_custom} touch /mysql/3306/log/mysqld.log
+{61:alisql_start_custom} chown -R mysql:mysql /mysql/3306
+{62:alisql_start_custom} ln -s /mysql/3306/my.cnf /root/.my.cnf
ln: failed to create symbolic link ‘/root/.my.cnf’: File exists
+{63:alisql_start_custom} mysql_install_db --defaults-file=/mysql/3306/my.cnf --user=mysql --force
Installing MySQL system tables...2017-12-27 09:27:39 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2017-12-27 09:27:39 0 [Note] /usr/sbin/mysqld (mysqld 5.6.32) starting as process 31966 ...
2017-12-27 09:27:39 31966 [Note] InnoDB: Using atomics to ref count buffer pool pages
2017-12-27 09:27:39 31966 [Note] InnoDB: The InnoDB memory heap is disabled
2017-12-27 09:27:39 31966 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
2017-12-27 09:27:39 31966 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
2017-12-27 09:27:39 31966 [Note] InnoDB: Compressed tables use zlib 1.2.3
2017-12-27 09:27:39 31966 [Note] InnoDB: Using Linux native AIO
2017-12-27 09:27:39 31966 [Note] InnoDB: Not using CPU crc32 instructions
2017-12-27 09:27:39 31966 [Note] InnoDB: Initializing buffer pool, size = 128.0M
2017-12-27 09:27:39 31966 [Note] InnoDB: Completed initialization of buffer pool
2017-12-27 09:27:39 31966 [Note] InnoDB: The first specified data file ./ibdata1 did not exist: a new database to be created!
2017-12-27 09:27:39 31966 [Note] InnoDB: Setting file ./ibdata1 size to 12 MB
2017-12-27 09:27:39 31966 [Note] InnoDB: Database physically writes the file full: wait...
2017-12-27 09:27:39 31966 [Note] InnoDB: Setting log file ./ib_logfile101 size to 48 MB
2017-12-27 09:27:39 31966 [Note] InnoDB: Setting log file ./ib_logfile1 size to 48 MB
2017-12-27 09:27:39 31966 [Note] InnoDB: Renaming log file ./ib_logfile101 to ./ib_logfile0
2017-12-27 09:27:39 31966 [Warning] InnoDB: New log files created, LSN=45781
2017-12-27 09:27:39 31966 [Note] InnoDB: Doublewrite buffer not found: creating new
2017-12-27 09:27:39 31966 [Note] InnoDB: Doublewrite buffer created
2017-12-27 09:27:39 31966 [Note] InnoDB: 128 rollback segment(s) are active.
2017-12-27 09:27:39 31966 [Warning] InnoDB: Creating foreign key constraint system tables.
2017-12-27 09:27:39 31966 [Note] InnoDB: Foreign key constraint system tables created
2017-12-27 09:27:39 31966 [Note] InnoDB: Creating tablespace and datafile system tables.
2017-12-27 09:27:39 31966 [Note] InnoDB: Tablespace and datafile system tables created.
2017-12-27 09:27:39 31966 [Note] InnoDB: Waiting for purge to start
2017-12-27 09:27:39 31966 [Note] InnoDB: 5.6.32 started; log sequence number 0
2017-12-27 09:27:39 31966 [Note] Binlog end
2017-12-27 09:27:39 31966 [Note] InnoDB: FTS optimize thread exiting.
2017-12-27 09:27:39 31966 [Note] InnoDB: Starting shutdown...
2017-12-27 09:27:41 31966 [Note] InnoDB: Shutdown completed; log sequence number 1625977
OK

Filling help tables...2017-12-27 09:27:41 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2017-12-27 09:27:41 0 [Note] /usr/sbin/mysqld (mysqld 5.6.32) starting as process 31988 ...
2017-12-27 09:27:41 31988 [Note] InnoDB: Using atomics to ref count buffer pool pages
2017-12-27 09:27:41 31988 [Note] InnoDB: The InnoDB memory heap is disabled
2017-12-27 09:27:41 31988 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
2017-12-27 09:27:41 31988 [Note] InnoDB: GCC builtin __atomic_thread_fence() is used for memory barrier
2017-12-27 09:27:41 31988 [Note] InnoDB: Compressed tables use zlib 1.2.3
2017-12-27 09:27:41 31988 [Note] InnoDB: Using Linux native AIO
2017-12-27 09:27:41 31988 [Note] InnoDB: Not using CPU crc32 instructions
2017-12-27 09:27:41 31988 [Note] InnoDB: Initializing buffer pool, size = 128.0M
2017-12-27 09:27:41 31988 [Note] InnoDB: Completed initialization of buffer pool
2017-12-27 09:27:41 31988 [Note] InnoDB: Highest supported file format is Barracuda.
2017-12-27 09:27:41 31988 [Note] InnoDB: 128 rollback segment(s) are active.
2017-12-27 09:27:41 31988 [Note] InnoDB: Waiting for purge to start
2017-12-27 09:27:41 31988 [Note] InnoDB: 5.6.32 started; log sequence number 1625977
2017-12-27 09:27:41 31988 [Note] Binlog end
2017-12-27 09:27:41 31988 [Note] InnoDB: FTS optimize thread exiting.
2017-12-27 09:27:41 31988 [Note] InnoDB: Starting shutdown...
2017-12-27 09:27:43 31988 [Note] InnoDB: Shutdown completed; log sequence number 1625987
OK

To start mysqld at boot time you have to copy
support-files/mysql.server to the right place for your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
To do so, start the server, then issue the following commands:

  /usr/bin/mysqladmin -u root password 'new-password'
  /usr/bin/mysqladmin -u root -h localhost.localdomain password 'new-password'

Alternatively you can run:

  /usr/bin/mysql_secure_installation

which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.

See the manual for more instructions.

You can start the MySQL daemon with:

  cd /usr ; /usr/bin/mysqld_safe &

You can test the MySQL daemon with mysql-test-run.pl

  cd mysql-test ; perl mysql-test-run.pl

Please report any problems at http://bugs.mysql.com/

The latest information about MySQL is available on the web at

  http://www.mysql.com

Support MySQL by buying support/licenses at http://shop.mysql.com

WARNING: Found existing config file /usr/my.cnf on the system.
Because this file might be in use, it was not replaced,
but was used in bootstrap (unless you used --defaults-file)
and when you later start the server.
The new default config file was created as /usr/my-new.cnf,
please compare it with your file and take the changes you need.

WARNING: Default config file /etc/my.cnf exists on the system
This file will be read by default by the MySQL server
If you do not want to use this, either remove it, or use the
--defaults-file argument to mysqld_safe when starting the server

+{64:alisql_start_custom} '[' 0 -ne 0 ']'
+{69:alisql_start_custom} local pid=32011
+{70:alisql_start_custom} sleep 3
+{68:alisql_start_custom} mysqld_safe --defaults-file=/mysql/3306/my.cnf --user=mysql
171227 17:27:43 mysqld_safe Logging to '/mysql/3306/log/mysql-error.log'.
171227 17:27:43 mysqld_safe Starting mysqld daemon with databases from /mysql/3306/data
+{71:alisql_start_custom} ps -ef
+{71:alisql_start_custom} grep 32011
root     32011 31923  1 17:27 pts/2    00:00:00 /bin/sh /usr/bin/mysqld_safe --defaults-file=/mysql/3306/my.cnf --user=mysql
mysql    32244 32011  5 17:27 pts/2    00:00:00 /usr/sbin/mysqld --defaults-file=/mysql/3306/my.cnf --basedir=/usr --datadir=/mysql/3306/data --plugin-dir=/usr/lib64/mysql/plugin --user=mysql --log-error=/mysql/3306/log/mysql-error.log --open-files-limit=15000 --pid-file=/mysql/3306/run/mysqld.pid --socket=/mysql/3306/run/mysql.sock --port=3306
root     32282 31923  0 17:27 pts/2    00:00:00 grep 32011
+{72:alisql_start_custom} '[' 0 -ne 0 ']'
+{24:} mysql_client
+{41:mysql_client} mysqladmin -u root password 123
Warning: Using a password on the command line interface can be insecure.
+{42:mysql_client} print_info 0 'mysqladmin set init root password'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysqladmin set init root password'
+{72:print_info} echo 'the result of mysqladmin set init root password is pass'
the result of mysqladmin set init root password is pass
+{73:print_info} lava-test-case mysqladmin set init root password --result pass
/usr/bin/lava-test-case mysqladmin set init root password --result pass
+{44:mysql_client} mysql -uroot -p123 -e 'status;'
Warning: Using a password on the command line interface can be insecure.
--------------
mysql  Ver 14.14 Distrib 5.6.32, for Linux (aarch64) using  EditLine wrapper

Connection id:		2
Current database:	
Current user:		root@localhost
SSL:			Not in use
Current pager:		stdout
Using outfile:		''
Using delimiter:	;
Server version:		5.6.32 MySQL Community Server (GPL)
Protocol version:	10
Connection:		Localhost via UNIX socket
Server characterset:	utf8
Db     characterset:	utf8
Client characterset:	utf8
Conn.  characterset:	utf8
UNIX socket:		/mysql/3306/run/mysql.sock
Uptime:			3 sec

Threads: 1  Questions: 10  Slow queries: 0  Opens: 67  Flush tables: 1  Open tables: 60  Queries per second avg: 3.333
--------------

+{45:mysql_client} print_info 0 'mysql-percona-56 root use password login'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 root use password login'
+{72:print_info} echo 'the result of mysql-percona-56 root use password login is pass'
the result of mysql-percona-56 root use password login is pass
+{73:print_info} lava-test-case mysql-percona-56 root use password login --result pass
/usr/bin/lava-test-case mysql-percona-56 root use password login --result pass
+{47:mysql_client} mysqladmin -u root -p123 password ''
Warning: Using a password on the command line interface can be insecure.
+{48:mysql_client} print_info 0 'mysql-percona-56 cancle password'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 cancle password'
+{72:print_info} echo 'the result of mysql-percona-56 cancle password is pass'
the result of mysql-percona-56 cancle password is pass
+{73:print_info} lava-test-case mysql-percona-56 cancle password --result pass
/usr/bin/lava-test-case mysql-percona-56 cancle password --result pass
+{51:mysql_client} mysql -e 'create user '\''mysql'\''@'\''%'\'' identified by '\''123'\'''
+{52:mysql_client} print_info 0 'mysql-percona-56 create user'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create user'
+{72:print_info} echo 'the result of mysql-percona-56 create user is pass'
the result of mysql-percona-56 create user is pass
+{73:print_info} lava-test-case mysql-percona-56 create user --result pass
/usr/bin/lava-test-case mysql-percona-56 create user --result pass
+{54:mysql_client} mysql -e 'grant all privileges on *.* to '\''mysql'\''@'\''%'\'''
+{55:mysql_client} print_info 0 'grant privileges on all ip address'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='grant privileges on all ip address'
+{72:print_info} echo 'the result of grant privileges on all ip address is pass'
the result of grant privileges on all ip address is pass
+{73:print_info} lava-test-case grant privileges on all ip address --result pass
/usr/bin/lava-test-case grant privileges on all ip address --result pass
+{57:mysql_client} mysql -e 'create user '\''mysql'\''@'\''localhost'\'' identified by '\''123'\'''
+{58:mysql_client} mysql -e 'grant all privileges on *.* to '\''mysql'\''@'\''localhost'\'''
+{59:mysql_client} print_info 0 'grant all privileges on localhost'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='grant all privileges on localhost'
+{72:print_info} echo 'the result of grant all privileges on localhost is pass'
the result of grant all privileges on localhost is pass
+{73:print_info} lava-test-case grant all privileges on localhost --result pass
/usr/bin/lava-test-case grant all privileges on localhost --result pass
+{61:mysql_client} mysql -umysql -p123 -e 'select user()'
Warning: Using a password on the command line interface can be insecure.
user()
mysql@localhost
+{62:mysql_client} print_info 0 'mysql-percona-56 login non root user by socket'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 login non root user by socket'
+{72:print_info} echo 'the result of mysql-percona-56 login non root user by socket is pass'
the result of mysql-percona-56 login non root user by socket is pass
+{73:print_info} lava-test-case mysql-percona-56 login non root user by socket --result pass
/usr/bin/lava-test-case mysql-percona-56 login non root user by socket --result pass
++{64:mysql_client} ip addr
++{64:mysql_client} grep 'state UP' -A2
++{64:mysql_client} tail -n1
++{64:mysql_client} awk '{print $2}'
++{64:mysql_client} cut -f1 -d /
+{64:mysql_client} ip=192.168.1.237
+{65:mysql_client} mysql -h 192.168.1.237 -umysql -p123 -e 'select user()'
Warning: Using a password on the command line interface can be insecure.
user()
mysql@192.168.1.237
+{66:mysql_client} print_info 0 'mysql-percona-56 login non root user by tcp'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 login non root user by tcp'
+{72:print_info} echo 'the result of mysql-percona-56 login non root user by tcp is pass'
the result of mysql-percona-56 login non root user by tcp is pass
+{73:print_info} lava-test-case mysql-percona-56 login non root user by tcp --result pass
/usr/bin/lava-test-case mysql-percona-56 login non root user by tcp --result pass
+{67:mysql_client} mysql -e 'drop user '\''mysql'\''@'\''%'\'''
+{68:mysql_client} print_info 0 'mysql-percona-56 drop user@%'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop user@%'
+{72:print_info} echo 'the result of mysql-percona-56 drop user@% is pass'
the result of mysql-percona-56 drop user@% is pass
+{73:print_info} lava-test-case mysql-percona-56 drop user@% --result pass
/usr/bin/lava-test-case mysql-percona-56 drop user@% --result pass
+{69:mysql_client} mysql -e 'drop user '\''mysql'\''@'\''localhost'\'''
+{70:mysql_client} print_info 0 'mysql-percona-56 drop user@localhost '
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop user@localhost '
+{72:print_info} echo 'the result of mysql-percona-56 drop user@localhost  is pass'
the result of mysql-percona-56 drop user@localhost  is pass
+{73:print_info} lava-test-case mysql-percona-56 drop user@localhost --result pass
/usr/bin/lava-test-case mysql-percona-56 drop user@localhost --result pass
+{25:} mysql_create
+{87:mysql_create} mysql -e 'drop database if exists mytest'
+{88:mysql_create} mysql -e 'create database  mytest'
+{89:mysql_create} print_info 0 'mysql-percona-56 create database'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create database'
+{72:print_info} echo 'the result of mysql-percona-56 create database is pass'
the result of mysql-percona-56 create database is pass
+{73:print_info} lava-test-case mysql-percona-56 create database --result pass
/usr/bin/lava-test-case mysql-percona-56 create database --result pass
+{91:mysql_create} mysql -e 'create database if not exists mytest'
+{92:mysql_create} print_info 0 'mysql-percona-56 repeat create database'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 repeat create database'
+{72:print_info} echo 'the result of mysql-percona-56 repeat create database is pass'
the result of mysql-percona-56 repeat create database is pass
+{73:print_info} lava-test-case mysql-percona-56 repeat create database --result pass
/usr/bin/lava-test-case mysql-percona-56 repeat create database --result pass
++{94:mysql_create} mysql -e 'show databases like '\''mytest'\'''
+{94:mysql_create} res='Database (mytest)
mytest'
+{95:mysql_create} echo Database '(mytest)' mytest
+{95:mysql_create} grep mytest
Database (mytest) mytest
+{96:mysql_create} print_info 0 'mysql-percona-56 lookout database just create'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 lookout database just create'
+{72:print_info} echo 'the result of mysql-percona-56 lookout database just create is pass'
the result of mysql-percona-56 lookout database just create is pass
+{73:print_info} lava-test-case mysql-percona-56 lookout database just create --result pass
/usr/bin/lava-test-case mysql-percona-56 lookout database just create --result pass
+{99:mysql_create} mysql -e 'create event mytest.myevent  on schedule at current_timestamp do select '\''ee'\'''
+{100:mysql_create} print_info 0 'mysql-percona-56 create event'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create event'
+{72:print_info} echo 'the result of mysql-percona-56 create event is pass'
the result of mysql-percona-56 create event is pass
+{73:print_info} lava-test-case mysql-percona-56 create event --result pass
/usr/bin/lava-test-case mysql-percona-56 create event --result pass
+{102:mysql_create} mysql
+{111:mysql_create} print_info 0 'mysql-percona-56 create procedure'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create procedure'
+{72:print_info} echo 'the result of mysql-percona-56 create procedure is pass'
the result of mysql-percona-56 create procedure is pass
+{73:print_info} lava-test-case mysql-percona-56 create procedure --result pass
/usr/bin/lava-test-case mysql-percona-56 create procedure --result pass
++{112:mysql_create} mysql -e 'use mytest ; call simpleproc(@a);select @a'
+{112:mysql_create} res2='@a
4433'
+{113:mysql_create} echo @a 4433
+{113:mysql_create} grep 4433
@a 4433
+{114:mysql_create} '[' 0 -eq 0 ']'
+{115:mysql_create} true
+{119:mysql_create} print_info 0 'mysql-percona-56 call proceduce'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 call proceduce'
+{72:print_info} echo 'the result of mysql-percona-56 call proceduce is pass'
the result of mysql-percona-56 call proceduce is pass
+{73:print_info} lava-test-case mysql-percona-56 call proceduce --result pass
/usr/bin/lava-test-case mysql-percona-56 call proceduce --result pass
+{121:mysql_create} mysql -e 'create server myservername foreign data wrapper mysql options (user '\''remote'\'',host '\''127.0.0.1'\'',database '\''test'\''  )'
+{122:mysql_create} print_info 0 'mysql-percona-56 create server'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create server'
+{72:print_info} echo 'the result of mysql-percona-56 create server is pass'
the result of mysql-percona-56 create server is pass
+{73:print_info} lava-test-case mysql-percona-56 create server --result pass
/usr/bin/lava-test-case mysql-percona-56 create server --result pass
++{123:mysql_create} mysql -e 'select * from mysql.servers where server_name='\''myservername'\'''
+{123:mysql_create} res3='Server_name	Host	Db	Username	Password	Port	Socket	Wrapper	Owner
myservername	127.0.0.1	test	remote		0		mysql	'
+{124:mysql_create} echo Server_name Host Db Username Password Port Socket Wrapper Owner myservername 127.0.0.1 test remote 0 mysql
+{124:mysql_create} grep 1
Server_name Host Db Username Password Port Socket Wrapper Owner myservername 127.0.0.1 test remote 0 mysql
+{125:mysql_create} '[' 0 -eq 0 ']'
+{126:mysql_create} true
+{130:mysql_create} print_info 0 'mysql-percona-56 location of create server in the system table'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 location of create server in the system table'
+{72:print_info} echo 'the result of mysql-percona-56 location of create server in the system table is pass'
the result of mysql-percona-56 location of create server in the system table is pass
+{73:print_info} lava-test-case mysql-percona-56 location of create server in the system table --result pass
/usr/bin/lava-test-case mysql-percona-56 location of create server in the system table --result pass
+{133:mysql_create} mysql -e 'use mytest;create table mytable (id int primary key not null  , name varchar(20) not null ,index iname (name))'
+{134:mysql_create} print_info 0 'mysql-percona-56 create base table'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create base table'
+{72:print_info} echo 'the result of mysql-percona-56 create base table is pass'
the result of mysql-percona-56 create base table is pass
+{73:print_info} lava-test-case mysql-percona-56 create base table --result pass
/usr/bin/lava-test-case mysql-percona-56 create base table --result pass
+{136:mysql_create} mysql -e 'use mytest ; create table t2 as select * from mysql.servers'
+{137:mysql_create} print_info 0 'mysql-percona-56 use '\''create table as query_expr'\'''
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 use '\''create table as query_expr'\'''
+{72:print_info} echo 'the result of mysql-percona-56 use '\''create table as query_expr'\'' is pass'
the result of mysql-percona-56 use 'create table as query_expr' is pass
+{73:print_info} lava-test-case mysql-percona-56 use ''\''create' table as 'query_expr'\''' --result pass
/usr/bin/lava-test-case mysql-percona-56 use 'create table as query_expr' --result pass
+{139:mysql_create} mysql -e 'use mytest ; show create table t2'
Table	Create Table
t2	CREATE TABLE `t2` (\n  `Server_name` char(64) NOT NULL DEFAULT '',\n  `Host` char(64) NOT NULL DEFAULT '',\n  `Db` char(64) NOT NULL DEFAULT '',\n  `Username` char(64) NOT NULL DEFAULT '',\n  `Password` char(64) NOT NULL DEFAULT '',\n  `Port` int(4) NOT NULL DEFAULT '0',\n  `Socket` char(64) NOT NULL DEFAULT '',\n  `Wrapper` char(64) NOT NULL DEFAULT '',\n  `Owner` char(64) NOT NULL DEFAULT ''\n) ENGINE=InnoDB DEFAULT CHARSET=utf8
+{140:mysql_create} print_info 0 'mysql-percona-56 verification '\''create table as query_expr'\'''
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 verification '\''create table as query_expr'\'''
+{72:print_info} echo 'the result of mysql-percona-56 verification '\''create table as query_expr'\'' is pass'
the result of mysql-percona-56 verification 'create table as query_expr' is pass
+{73:print_info} lava-test-case mysql-percona-56 verification ''\''create' table as 'query_expr'\''' --result pass
/usr/bin/lava-test-case mysql-percona-56 verification 'create table as query_expr' --result pass
+{142:mysql_create} mysql -e 'use mytest ; create table t3 like t2'
+{143:mysql_create} print_info 0 'mysql-percona-56 use '\''create table like'\'''
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 use '\''create table like'\'''
+{72:print_info} echo 'the result of mysql-percona-56 use '\''create table like'\'' is pass'
the result of mysql-percona-56 use 'create table like' is pass
+{73:print_info} lava-test-case mysql-percona-56 use ''\''create' table 'like'\''' --result pass
/usr/bin/lava-test-case mysql-percona-56 use 'create table like' --result pass
+{146:mysql_create} mysql
Logging to file 'log'
Outfile disabled.
+{156:mysql_create} cat log

+{157:mysql_create} grep -i error log
+{158:mysql_create} '[' 1 -eq 0 ']'
+{161:mysql_create} true
+{163:mysql_create} print_info 0 'mysql-percona-56 create partirion table use hash'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create partirion table use hash'
+{72:print_info} echo 'the result of mysql-percona-56 create partirion table use hash is pass'
the result of mysql-percona-56 create partirion table use hash is pass
+{73:print_info} lava-test-case mysql-percona-56 create partirion table use hash --result pass
/usr/bin/lava-test-case mysql-percona-56 create partirion table use hash --result pass
+{165:mysql_create} mysql -e '
    use mytest;
    create table t6 (col1 int ,col2 char(5) , col3 date)
        partition by key (col3)
        partitions 4;
    '
+{171:mysql_create} print_info 0 'mysql-percona-56 create partition table use key'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create partition table use key'
+{72:print_info} echo 'the result of mysql-percona-56 create partition table use key is pass'
the result of mysql-percona-56 create partition table use key is pass
+{73:print_info} lava-test-case mysql-percona-56 create partition table use key --result pass
/usr/bin/lava-test-case mysql-percona-56 create partition table use key --result pass
+{173:mysql_create} mysql -e 'use mytest ; create table t9 (col int , col2 char(5) , col3 date)
        partition by linear key(col3)
        partitions 5;'
+{176:mysql_create} print_info 0 'mysql-percona-56 create partition table use linear key'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create partition table use linear key'
+{72:print_info} echo 'the result of mysql-percona-56 create partition table use linear key is pass'
the result of mysql-percona-56 create partition table use linear key is pass
+{73:print_info} lava-test-case mysql-percona-56 create partition table use linear key --result pass
/usr/bin/lava-test-case mysql-percona-56 create partition table use linear key --result pass
+{178:mysql_create} mysql -e 'use mytest ; create table t7(year_col int , some_data int)
        partition by range(year_col) (
            partition p0 values less than (1990),
            partition p1 values less than (1995),
            partition p2 values less than (1999),
            partition p3 values less than (2003),
            partition p4 values less than (2006),
            partition p5 values less than maxvalue
    );'
+{187:mysql_create} print_info 0 'use mytest ;mysql-percona-56 create partition table use range'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='use mytest ;mysql-percona-56 create partition table use range'
+{72:print_info} echo 'the result of use mytest ;mysql-percona-56 create partition table use range is pass'
the result of use mytest ;mysql-percona-56 create partition table use range is pass
+{73:print_info} lava-test-case use mytest ';mysql-percona-56' create partition table use range --result pass
/usr/bin/lava-test-case use mytest ;mysql-percona-56 create partition table use range --result pass
+{189:mysql_create} mysql -e 'use mytest ; create table t8 (id int , name varchar(35))
    partition by list(id)(
        partition r0 values in (1,5,9,13,17,21),
        partition r1 values in (2,6,10,14,18,22),
        partition r2 values in (3,7,11,15,19,23),
        partition r3 values in (4,8,12,16,20,24)
    );'
+{196:mysql_create} print_info 0 'mysql-percona-56 create table use list'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create table use list'
+{72:print_info} echo 'the result of mysql-percona-56 create table use list is pass'
the result of mysql-percona-56 create table use list is pass
+{73:print_info} lava-test-case mysql-percona-56 create table use list --result pass
/usr/bin/lava-test-case mysql-percona-56 create table use list --result pass
+{199:mysql_create} mysql -e 'use mytest ; create trigger insertTrigger before insert on t8 for each row set @a = @a + new.id'
+{200:mysql_create} print_info 0 'mysql-percona-56 create trigger'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create trigger'
+{72:print_info} echo 'the result of mysql-percona-56 create trigger is pass'
the result of mysql-percona-56 create trigger is pass
+{73:print_info} lava-test-case mysql-percona-56 create trigger --result pass
/usr/bin/lava-test-case mysql-percona-56 create trigger --result pass
+{202:mysql_create} mysql -e 'use mytest ; create or replace view myview (today) as select current_date '
+{203:mysql_create} print_info 0 'mysql-percona-56 create view'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 create view'
+{72:print_info} echo 'the result of mysql-percona-56 create view is pass'
the result of mysql-percona-56 create view is pass
+{73:print_info} lava-test-case mysql-percona-56 create view --result pass
/usr/bin/lava-test-case mysql-percona-56 create view --result pass
+{26:} mysql_alter
+{210:mysql_alter} mysql -e 'alter database mytest character set = utf8 collate = utf8_general_ci '
+{211:mysql_alter} '[' 0 -eq 0 ']'
++{212:mysql_alter} mysql -e 'show create database mytest'
+{212:mysql_alter} res='Database	Create Database
mytest	CREATE DATABASE `mytest` /*!40100 DEFAULT CHARACTER SET utf8 */'
+{213:mysql_alter} echo Database Create Database mytest CREATE DATABASE '`mytest`' '/*!40100' DEFAULT CHARACTER SET utf8 test_db/
+{213:mysql_alter} grep -i UTF8
Database Create Database mytest CREATE DATABASE `mytest` /*!40100 DEFAULT CHARACTER SET utf8 test_db/
+{214:mysql_alter} '[' 0 -eq 0 ']'
+{215:mysql_alter} true
+{219:mysql_alter} print_info 0 'mysql-percona-56 alter database character set '
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter database character set '
+{72:print_info} echo 'the result of mysql-percona-56 alter database character set  is pass'
the result of mysql-percona-56 alter database character set  is pass
+{73:print_info} lava-test-case mysql-percona-56 alter database character set --result pass
/usr/bin/lava-test-case mysql-percona-56 alter database character set --result pass
+{224:mysql_alter} mysql -e 'alter event mytest.myevent disable'
+{225:mysql_alter} print_info 0 'mysql-percona-56 alter event diable'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter event diable'
+{72:print_info} echo 'the result of mysql-percona-56 alter event diable is pass'
the result of mysql-percona-56 alter event diable is pass
+{73:print_info} lava-test-case mysql-percona-56 alter event diable --result pass
/usr/bin/lava-test-case mysql-percona-56 alter event diable --result pass
++{227:mysql_alter} mysql -e 'use mytest ;show events'
+{227:mysql_alter} res2='Db	Name	Definer	Time zone	Type	Execute at	Interval value	Interval field	Starts	Ends	Status	Originator	character_set_client	collation_connection	Database Collation
mytest	myevent	root@localhost	SYSTEM	ONE TIME	2017-12-27 09:27:46	NULL	NULL	NULL	NULL	DISABLED	0	utf8	utf8_general_ci	utf8_general_ci'
+{228:mysql_alter} echo Db Name Definer Time zone Type Execute at Interval value Interval field Starts Ends Status Originator character_set_client collation_connection Database Collation mytest myevent root@localhost SYSTEM ONE TIME 2017-12-27 09:27:46 NULL NULL NULL NULL DISABLED 0 utf8 utf8_general_ci utf8_general_ci
+{228:mysql_alter} grep -i disable
Db Name Definer Time zone Type Execute at Interval value Interval field Starts Ends Status Originator character_set_client collation_connection Database Collation mytest myevent root@localhost SYSTEM ONE TIME 2017-12-27 09:27:46 NULL NULL NULL NULL DISABLED 0 utf8 utf8_general_ci utf8_general_ci
+{229:mysql_alter} '[' 0 -eq 0 ']'
+{230:mysql_alter} true
+{234:mysql_alter} print_info 0 'mysql-percona-56 look event status'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 look event status'
+{72:print_info} echo 'the result of mysql-percona-56 look event status is pass'
the result of mysql-percona-56 look event status is pass
+{73:print_info} lava-test-case mysql-percona-56 look event status --result pass
/usr/bin/lava-test-case mysql-percona-56 look event status --result pass
+{237:mysql_alter} mysql -e 'alter instance rotate innodb master key'
ERROR 1064 (42000) at line 1: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'instance rotate innodb master key' at line 1
+{238:mysql_alter} print_info 1 'mysql-percona-56 alter instance only in 5.7.11 effictive'
+{65:print_info} '[' 1 -ne 0 ']'
+{66:print_info} result=fail
+{71:print_info} test_name='mysql-percona-56 alter instance only in 5.7.11 effictive'
+{72:print_info} echo 'the result of mysql-percona-56 alter instance only in 5.7.11 effictive is fail'
the result of mysql-percona-56 alter instance only in 5.7.11 effictive is fail
+{73:print_info} lava-test-case mysql-percona-56 alter instance only in 5.7.11 effictive --result fail
/usr/bin/lava-test-case mysql-percona-56 alter instance only in 5.7.11 effictive --result fail
+{241:mysql_alter} mysql -e 'alter server myservername options (user '\''newremote'\'')'
+{242:mysql_alter} '[' 0 -eq 0 ']'
++{243:mysql_alter} mysql -e 'select * from mysql.servers'
+{243:mysql_alter} res3='Server_name	Host	Db	Username	Password	Port	Socket	Wrapper	Owner
myservername	127.0.0.1	test	newremote		0		mysql	'
+{244:mysql_alter} echo Server_name Host Db Username Password Port Socket Wrapper Owner myservername 127.0.0.1 test newremote 0 mysql
+{244:mysql_alter} grep newremote
Server_name Host Db Username Password Port Socket Wrapper Owner myservername 127.0.0.1 test newremote 0 mysql
+{245:mysql_alter} '[' 0 -eq 0 ']'
+{246:mysql_alter} true
+{250:mysql_alter} print_info 0 'mysql-percona-56 alter server'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter server'
+{72:print_info} echo 'the result of mysql-percona-56 alter server is pass'
the result of mysql-percona-56 alter server is pass
+{73:print_info} lava-test-case mysql-percona-56 alter server --result pass
/usr/bin/lava-test-case mysql-percona-56 alter server --result pass
+{257:mysql_alter} mysql
Logging to file 'log'
Outfile disabled.
+{267:mysql_alter} mysql -e 'use alterdb ; alter table a1 add col5 int '
+{268:mysql_alter} print_info 0 'mysql-percona-56 exec alter table add column'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 exec alter table add column'
+{72:print_info} echo 'the result of mysql-percona-56 exec alter table add column is pass'
the result of mysql-percona-56 exec alter table add column is pass
+{73:print_info} lava-test-case mysql-percona-56 exec alter table add column --result pass
/usr/bin/lava-test-case mysql-percona-56 exec alter table add column --result pass
++{270:mysql_alter} mysql -e 'desc alterdb.a1'
+{270:mysql_alter} res4='Field	Type	Null	Key	Default	Extra
col1	int(11)	YES		NULL	
col2	int(11)	YES		NULL	
col3	int(11)	YES		NULL	
col4	int(11)	YES		NULL	
col5	int(11)	YES		NULL	'
+{271:mysql_alter} echo Field Type Null Key Default Extra col1 'int(11)' YES NULL col2 'int(11)' YES NULL col3 'int(11)' YES NULL col4 'int(11)' YES NULL col5 'int(11)' YES NULL
+{271:mysql_alter} grep col5
Field Type Null Key Default Extra col1 int(11) YES NULL col2 int(11) YES NULL col3 int(11) YES NULL col4 int(11) YES NULL col5 int(11) YES NULL
+{272:mysql_alter} '[' 0 -eq 0 ']'
+{273:mysql_alter} true
+{277:mysql_alter} print_info 0 'mysql-percona-56 alter table add column effictive'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table add column effictive'
+{72:print_info} echo 'the result of mysql-percona-56 alter table add column effictive is pass'
the result of mysql-percona-56 alter table add column effictive is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table add column effictive --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table add column effictive --result pass
+{279:mysql_alter} mysql -e 'use alterdb ;alter table a1 add primary key (col1)'
+{280:mysql_alter} print_info 0 'mysql-percona-56 exec alter table add primary key'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 exec alter table add primary key'
+{72:print_info} echo 'the result of mysql-percona-56 exec alter table add primary key is pass'
the result of mysql-percona-56 exec alter table add primary key is pass
+{73:print_info} lava-test-case mysql-percona-56 exec alter table add primary key --result pass
/usr/bin/lava-test-case mysql-percona-56 exec alter table add primary key --result pass
+{281:mysql_alter} mysql -e 'show create table alterdb.a1'
+{282:mysql_alter} cat log
+{282:mysql_alter} grep col1
+{282:mysql_alter} grep -i 'primary key'
a1	CREATE TABLE `a1` (\n  `col1` int(11) NOT NULL DEFAULT '0',\n  `col2` int(11) DEFAULT NULL,\n  `col3` int(11) DEFAULT NULL,\n  `col4` int(11) DEFAULT NULL,\n  `col5` int(11) DEFAULT NULL,\n  PRIMARY KEY (`col1`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8
+{283:mysql_alter} '[' 0 -eq 0 ']'
+{284:mysql_alter} true
+{288:mysql_alter} print_info 0 'mysql-percona-56 alter table add primary key effiection'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table add primary key effiection'
+{72:print_info} echo 'the result of mysql-percona-56 alter table add primary key effiection is pass'
the result of mysql-percona-56 alter table add primary key effiection is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table add primary key effiection --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table add primary key effiection --result pass
+{290:mysql_alter} mysql -e 'use alterdb ; alter table a1 character set = utf8 collate utf8_general_ci'
+{291:mysql_alter} print_info 0 'mysql-percona-56 alter table character'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table character'
+{72:print_info} echo 'the result of mysql-percona-56 alter table character is pass'
the result of mysql-percona-56 alter table character is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table character --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table character --result pass
++{292:mysql_alter} mysql -e 'show create table alterdb.a1'
+{292:mysql_alter} res6='Table	Create Table
a1	CREATE TABLE `a1` (\n  `col1` int(11) NOT NULL DEFAULT '\''0'\'',\n  `col2` int(11) DEFAULT NULL,\n  `col3` int(11) DEFAULT NULL,\n  `col4` int(11) DEFAULT NULL,\n  `col5` int(11) DEFAULT NULL,\n  PRIMARY KEY (`col1`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8'
+{293:mysql_alter} echo Table Create Table a1 CREATE TABLE '`a1`' '(\n' '`col1`' 'int(11)' NOT NULL DEFAULT ''\''0'\'',\n' '`col2`' 'int(11)' DEFAULT 'NULL,\n' '`col3`' 'int(11)' DEFAULT 'NULL,\n' '`col4`' 'int(11)' DEFAULT 'NULL,\n' '`col5`' 'int(11)' DEFAULT 'NULL,\n' PRIMARY KEY '(`col1`)\n)' ENGINE=InnoDB DEFAULT CHARSET=utf8
+{293:mysql_alter} grep -i 'default charset=utf8'
Table Create Table a1 CREATE TABLE `a1` (\n `col1` int(11) NOT NULL DEFAULT '0',\n `col2` int(11) DEFAULT NULL,\n `col3` int(11) DEFAULT NULL,\n `col4` int(11) DEFAULT NULL,\n `col5` int(11) DEFAULT NULL,\n PRIMARY KEY (`col1`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8
+{294:mysql_alter} print_info 0 'mysql-percona-56 alter table character effiection'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table character effiection'
+{72:print_info} echo 'the result of mysql-percona-56 alter table character effiection is pass'
the result of mysql-percona-56 alter table character effiection is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table character effiection --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table character effiection --result pass
+{296:mysql_alter} mysql -e 'alter table alterdb.a1 change col1 col1_new int'
+{297:mysql_alter} print_info 0 'mysql-percona-56 exec alter table change column name'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 exec alter table change column name'
+{72:print_info} echo 'the result of mysql-percona-56 exec alter table change column name is pass'
the result of mysql-percona-56 exec alter table change column name is pass
+{73:print_info} lava-test-case mysql-percona-56 exec alter table change column name --result pass
/usr/bin/lava-test-case mysql-percona-56 exec alter table change column name --result pass
+{298:mysql_alter} mysql -e 'desc alterdb.a1'
+{298:mysql_alter} grep col1_new
col1_new	int(11)	NO	PRI	0	
+{299:mysql_alter} '[' 0 -eq 0 ']'
+{300:mysql_alter} true
+{304:mysql_alter} print_info 0 'mysql-percona-56 alter table column name effiection'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table column name effiection'
+{72:print_info} echo 'the result of mysql-percona-56 alter table column name effiection is pass'
the result of mysql-percona-56 alter table column name effiection is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table column name effiection --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table column name effiection --result pass
+{306:mysql_alter} mysql -e 'alter table alterdb.a1 drop col5'
+{307:mysql_alter} print_info 0 'mysql-percona-56 exec alter table drop column'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 exec alter table drop column'
+{72:print_info} echo 'the result of mysql-percona-56 exec alter table drop column is pass'
the result of mysql-percona-56 exec alter table drop column is pass
+{73:print_info} lava-test-case mysql-percona-56 exec alter table drop column --result pass
/usr/bin/lava-test-case mysql-percona-56 exec alter table drop column --result pass
+{308:mysql_alter} mysql -e 'desc alterdb.a1'
+{308:mysql_alter} grep col5
+{309:mysql_alter} '[' 1 -eq 0 ']'
+{312:mysql_alter} true
+{314:mysql_alter} print_info 0 'mysql-percona-56 alter table drop column effiection'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table drop column effiection'
+{72:print_info} echo 'the result of mysql-percona-56 alter table drop column effiection is pass'
the result of mysql-percona-56 alter table drop column effiection is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table drop column effiection --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table drop column effiection --result pass
+{316:mysql_alter} mysql -e 'alter table alterdb.a1 drop primary key'
+{317:mysql_alter} print_info 0 'mysql-percona-56 exec alter table drop primary key'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 exec alter table drop primary key'
+{72:print_info} echo 'the result of mysql-percona-56 exec alter table drop primary key is pass'
the result of mysql-percona-56 exec alter table drop primary key is pass
+{73:print_info} lava-test-case mysql-percona-56 exec alter table drop primary key --result pass
/usr/bin/lava-test-case mysql-percona-56 exec alter table drop primary key --result pass
+{318:mysql_alter} mysql -e 'show create table alterdb.a1'
+{318:mysql_alter} grep -i 'primary key'
+{319:mysql_alter} '[' 1 -eq 0 ']'
+{322:mysql_alter} true
+{324:mysql_alter} print_info 0 'mysql-percona-56 alter table drop primary key effiection'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table drop primary key effiection'
+{72:print_info} echo 'the result of mysql-percona-56 alter table drop primary key effiection is pass'
the result of mysql-percona-56 alter table drop primary key effiection is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table drop primary key effiection --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table drop primary key effiection --result pass
+{326:mysql_alter} mysql -e 'alter table alterdb.a1 modify col2 date'
+{327:mysql_alter} mysql -e 'desc alterdb.a1 '
+{327:mysql_alter} grep -i date
col2	date	YES		NULL	
+{328:mysql_alter} '[' 0 -eq 0 ']'
+{329:mysql_alter} true
+{333:mysql_alter} print_info 0 'mysql-percona-56 alter table modify column definition'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table modify column definition'
+{72:print_info} echo 'the result of mysql-percona-56 alter table modify column definition is pass'
the result of mysql-percona-56 alter table modify column definition is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table modify column definition --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table modify column definition --result pass
+{335:mysql_alter} mysql -e 'alter table alterdb.a1 rename to alterdb.a1_new'
+{336:mysql_alter} mysql -e 'use alterdb; show tables'
+{336:mysql_alter} grep a1_new
a1_new
+{337:mysql_alter} '[' 0 -eq 0 ']'
+{338:mysql_alter} true
+{342:mysql_alter} print_info 0 'mysql-percona-56 alter table name'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table name'
+{72:print_info} echo 'the result of mysql-percona-56 alter table name is pass'
the result of mysql-percona-56 alter table name is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table name --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table name --result pass
+{344:mysql_alter} mysql -e 'alter table alterdb.a1_new  partition by key (col2) partitions 4'
+{345:mysql_alter} mysql -e 'show create table alterdb.a1_new'
+{345:mysql_alter} grep -i partitions
a1_new	CREATE TABLE `a1_new` (\n  `col1_new` int(11) NOT NULL DEFAULT '0',\n  `col2` date DEFAULT NULL,\n  `col3` int(11) DEFAULT NULL,\n  `col4` int(11) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\n/*!50100 PARTITION BY KEY (col2)\nPARTITIONS 4 */
+{346:mysql_alter} print_info 0 'mysql-percona-56 alter table edit partition'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table edit partition'
+{72:print_info} echo 'the result of mysql-percona-56 alter table edit partition is pass'
the result of mysql-percona-56 alter table edit partition is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table edit partition --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table edit partition --result pass
+{348:mysql_alter} mysql
+{362:mysql_alter} mysql -e 'alter table alterdb.t3 add partition 
        (partition p4_new values less than (2003))'
+{364:mysql_alter} mysql -e 'use alterdb ; show create table t3'
+{364:mysql_alter} grep p4_new
t3	CREATE TABLE `t3` (\n  `id` int(11) DEFAULT NULL,\n  `year_col` int(11) DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\n/*!50100 PARTITION BY RANGE (year_col)\n(PARTITION p0 VALUES LESS THAN (1991) ENGINE = InnoDB,\n PARTITION p1 VALUES LESS THAN (1995) ENGINE = InnoDB,\n PARTITION p2 VALUES LESS THAN (1999) ENGINE = InnoDB,\n PARTITION p4_new VALUES LESS THAN (2003) ENGINE = InnoDB) */
+{365:mysql_alter} '[' 0 -eq 0 ']'
+{366:mysql_alter} true
+{370:mysql_alter} print_info 0 'mysql-percona-56 alter add parition count'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter add parition count'
+{72:print_info} echo 'the result of mysql-percona-56 alter add parition count is pass'
the result of mysql-percona-56 alter add parition count is pass
+{73:print_info} lava-test-case mysql-percona-56 alter add parition count --result pass
/usr/bin/lava-test-case mysql-percona-56 alter add parition count --result pass
+{372:mysql_alter} mysql -e 'alter table alterdb.t3 drop partition p4_new '
+{373:mysql_alter} mysql -e 'show create table alterdb.t3'
+{373:mysql_alter} grep p4_new
+{374:mysql_alter} '[' 1 -eq 0 ']'
+{377:mysql_alter} true
+{379:mysql_alter} print_info 0 'mysql-percona-56 alter table drop partition'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter table drop partition'
+{72:print_info} echo 'the result of mysql-percona-56 alter table drop partition is pass'
the result of mysql-percona-56 alter table drop partition is pass
+{73:print_info} lava-test-case mysql-percona-56 alter table drop partition --result pass
/usr/bin/lava-test-case mysql-percona-56 alter table drop partition --result pass
+{382:mysql_alter} mysql -e 'alter view  mytest.myview as select upper('\''mysqlview'\'')'
++{383:mysql_alter} mysql -e 'select * from mytest.myview'
+{383:mysql_alter} res7='upper('\''mysqlview'\'')
MYSQLVIEW'
+{384:mysql_alter} grep MYSQLVIEW
+{384:mysql_alter} echo 'upper('\''mysqlview'\'')' MYSQLVIEW
upper('mysqlview') MYSQLVIEW
+{385:mysql_alter} '[' 0 -eq 0 ']'
+{386:mysql_alter} true
+{390:mysql_alter} print_info 0 'mysql-percona-56 alter view'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 alter view'
+{72:print_info} echo 'the result of mysql-percona-56 alter view is pass'
the result of mysql-percona-56 alter view is pass
+{73:print_info} lava-test-case mysql-percona-56 alter view --result pass
/usr/bin/lava-test-case mysql-percona-56 alter view --result pass
+{27:} mysql_drop
+{397:mysql_drop} mysql -e 'drop view mytest.myview'
+{398:mysql_drop} mysql -e 'select * from information_schema.views'
+{398:mysql_drop} grep myview
+{399:mysql_drop} '[' 1 -eq 0 ']'
+{402:mysql_drop} true
+{404:mysql_drop} print_info 0 'mysql-percona-56 drop view'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop view'
+{72:print_info} echo 'the result of mysql-percona-56 drop view is pass'
the result of mysql-percona-56 drop view is pass
+{73:print_info} lava-test-case mysql-percona-56 drop view --result pass
/usr/bin/lava-test-case mysql-percona-56 drop view --result pass
+{407:mysql_drop} mysql -e 'drop trigger mytest.insertTrigger'
+{408:mysql_drop} mysql -e 'select * from information_schema.triggers'
+{408:mysql_drop} grep insertTrigger
+{409:mysql_drop} '[' 1 -eq 0 ']'
+{412:mysql_drop} true
+{414:mysql_drop} print_info 0 'mysql-percona-56 drop trigger'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop trigger'
+{72:print_info} echo 'the result of mysql-percona-56 drop trigger is pass'
the result of mysql-percona-56 drop trigger is pass
+{73:print_info} lava-test-case mysql-percona-56 drop trigger --result pass
/usr/bin/lava-test-case mysql-percona-56 drop trigger --result pass
+{417:mysql_drop} mysql -e 'drop server myservername'
+{418:mysql_drop} mysql -e 'select * from mysql.servers'
+{418:mysql_drop} grep myservername
+{419:mysql_drop} '[' 1 -eq 0 ']'
+{422:mysql_drop} true
+{424:mysql_drop} print_info 0 'mysql-percona-56 drop server'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop server'
+{72:print_info} echo 'the result of mysql-percona-56 drop server is pass'
the result of mysql-percona-56 drop server is pass
+{73:print_info} lava-test-case mysql-percona-56 drop server --result pass
/usr/bin/lava-test-case mysql-percona-56 drop server --result pass
+{427:mysql_drop} mysql -e 'drop procedure mytest.simpleproc'
+{428:mysql_drop} mysql -e 'select * from mysql.proc'
+{428:mysql_drop} grep simpleproc
+{429:mysql_drop} '[' 1 -eq 0 ']'
+{432:mysql_drop} true
+{434:mysql_drop} print_info 0 'mysql-percona-56 drop procedure'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop procedure'
+{72:print_info} echo 'the result of mysql-percona-56 drop procedure is pass'
the result of mysql-percona-56 drop procedure is pass
+{73:print_info} lava-test-case mysql-percona-56 drop procedure --result pass
/usr/bin/lava-test-case mysql-percona-56 drop procedure --result pass
+{437:mysql_drop} mysql -e 'drop index iname on mytest.mytable'
++{439:mysql_drop} mysql -e 'show create table mytest.mytable'
++{439:mysql_drop} grep -c -i key
+{439:mysql_drop} res=1
+{440:mysql_drop} '[' 1 == 1 ']'
+{441:mysql_drop} true
+{445:mysql_drop} print_info 0 'mysql-percona-56 drop index'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop index'
+{72:print_info} echo 'the result of mysql-percona-56 drop index is pass'
the result of mysql-percona-56 drop index is pass
+{73:print_info} lava-test-case mysql-percona-56 drop index --result pass
/usr/bin/lava-test-case mysql-percona-56 drop index --result pass
+{447:mysql_drop} mysql -e 'use mytest ;drop index `PRIMARY` on mytable'
+{448:mysql_drop} mysql -e 'show create table mytest.mytable'
+{448:mysql_drop} grep -i PRIMARY
+{449:mysql_drop} '[' 1 -eq 0 ']'
+{452:mysql_drop} true
+{454:mysql_drop} print_info 0 'mysql-percona-56 drop primary key'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop primary key'
+{72:print_info} echo 'the result of mysql-percona-56 drop primary key is pass'
the result of mysql-percona-56 drop primary key is pass
+{73:print_info} lava-test-case mysql-percona-56 drop primary key --result pass
/usr/bin/lava-test-case mysql-percona-56 drop primary key --result pass
+{457:mysql_drop} mysql -e 'drop event mytest.myevent'
+{458:mysql_drop} mysql -e 'select name from mysql.event'
+{458:mysql_drop} grep myevent
+{459:mysql_drop} '[' 1 -eq 0 ']'
+{462:mysql_drop} true
+{464:mysql_drop} print_info 0 'mysql-percona-56 drop event'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop event'
+{72:print_info} echo 'the result of mysql-percona-56 drop event is pass'
the result of mysql-percona-56 drop event is pass
+{73:print_info} lava-test-case mysql-percona-56 drop event --result pass
/usr/bin/lava-test-case mysql-percona-56 drop event --result pass
+{467:mysql_drop} mysql -e 'drop table mytest.mytable'
+{468:mysql_drop} grep mytable
+{468:mysql_drop} mysql -e 'use mytest ; show tables'
+{469:mysql_drop} '[' 1 -eq 0 ']'
+{472:mysql_drop} true
+{474:mysql_drop} print_info 0 'mysql-percona-56 drop table'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop table'
+{72:print_info} echo 'the result of mysql-percona-56 drop table is pass'
the result of mysql-percona-56 drop table is pass
+{73:print_info} lava-test-case mysql-percona-56 drop table --result pass
/usr/bin/lava-test-case mysql-percona-56 drop table --result pass
+{477:mysql_drop} mysql -e 'drop database mytest'
+{478:mysql_drop} mysql -e 'show databaases'
+{478:mysql_drop} grep mytest
ERROR 1064 (42000) at line 1: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'databaases' at line 1
+{479:mysql_drop} '[' 1 -eq 0 ']'
+{482:mysql_drop} true
+{484:mysql_drop} print_info 0 'mysql-percona-56 drop database'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 drop database'
+{72:print_info} echo 'the result of mysql-percona-56 drop database is pass'
the result of mysql-percona-56 drop database is pass
+{73:print_info} lava-test-case mysql-percona-56 drop database --result pass
/usr/bin/lava-test-case mysql-percona-56 drop database --result pass
+{28:} mysql_load_data
+{76:mysql_load_data} '[' '!' -d test_db ']'
+{79:mysql_load_data} mysql -e 'drop database if exists employees'
+{81:mysql_load_data} mysql
ERROR at line 113: Failed to open file 'load_departments.dump', error: 2
INFO
CREATING DATABASE STRUCTURE
INFO
storage engine: InnoDB
INFO
LOADING departments
+{82:mysql_load_data} print_info 1 'mysql-percona-56 import database'
+{65:print_info} '[' 1 -ne 0 ']'
+{66:print_info} result=fail
+{71:print_info} test_name='mysql-percona-56 import database'
+{72:print_info} echo 'the result of mysql-percona-56 import database is fail'
the result of mysql-percona-56 import database is fail
+{73:print_info} lava-test-case mysql-percona-56 import database --result fail
/usr/bin/lava-test-case mysql-percona-56 import database --result fail
+{29:} mysql_select
++{492:mysql_select} mysql -e 'select 1+1 from dual'
+{492:mysql_select} res1='1+1
2'
+{493:mysql_select} echo 1+1 2
+{493:mysql_select} grep 2
1+1 2
+{494:mysql_select} '[' 0 -eq 0 ']'
+{494:mysql_select} true
+{495:mysql_select} print_info 0 'mysql-percona-56 select rows computer without table'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 select rows computer without table'
+{72:print_info} echo 'the result of mysql-percona-56 select rows computer without table is pass'
the result of mysql-percona-56 select rows computer without table is pass
+{73:print_info} lava-test-case mysql-percona-56 select rows computer without table --result pass
/usr/bin/lava-test-case mysql-percona-56 select rows computer without table --result pass
+{497:mysql_select} mysql -e 'select current_date()'
current_date()
2017-12-27
+{498:mysql_select} print_info 0 'mysql-percona-56 select function'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 select function'
+{72:print_info} echo 'the result of mysql-percona-56 select function is pass'
the result of mysql-percona-56 select function is pass
+{73:print_info} lava-test-case mysql-percona-56 select function --result pass
/usr/bin/lava-test-case mysql-percona-56 select function --result pass
+{500:mysql_select} mysql -e 'select count(*) from employees.employees'
count(*)
0
+{501:mysql_select} print_info 0 'mysql-percona-56 select from clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 select from clause'
+{72:print_info} echo 'the result of mysql-percona-56 select from clause is pass'
the result of mysql-percona-56 select from clause is pass
+{73:print_info} lava-test-case mysql-percona-56 select from clause --result pass
/usr/bin/lava-test-case mysql-percona-56 select from clause --result pass
+{504:mysql_select} mysql -e 'select count(*) from employees.employees where year(hire_date)-year(birth_date)=20'
count(*)
0
+{505:mysql_select} print_info 0 'mysql-percona-56 select where clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 select where clause'
+{72:print_info} echo 'the result of mysql-percona-56 select where clause is pass'
the result of mysql-percona-56 select where clause is pass
+{73:print_info} lava-test-case mysql-percona-56 select where clause --result pass
/usr/bin/lava-test-case mysql-percona-56 select where clause --result pass
+{507:mysql_select} mysql -e 'select gender ,count(*) from employees.employees group by gender'
+{508:mysql_select} print_info 0 'mysql-percona-56 select group by clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 select group by clause'
+{72:print_info} echo 'the result of mysql-percona-56 select group by clause is pass'
the result of mysql-percona-56 select group by clause is pass
+{73:print_info} lava-test-case mysql-percona-56 select group by clause --result pass
/usr/bin/lava-test-case mysql-percona-56 select group by clause --result pass
+{511:mysql_select} mysql -e 'select * from employees.employees where year(hire_date)-year(birth_date) having year(hire_date)=2000'
+{512:mysql_select} print_info 0 'mysql-percona-56 select having clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 select having clause'
+{72:print_info} echo 'the result of mysql-percona-56 select having clause is pass'
the result of mysql-percona-56 select having clause is pass
+{73:print_info} lava-test-case mysql-percona-56 select having clause --result pass
/usr/bin/lava-test-case mysql-percona-56 select having clause --result pass
+{515:mysql_select} mysql -e 'select * from employees.employees  order by 3 limit 1'
+{516:mysql_select} print_info 0 'mysql-percona-56 order by clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 order by clause'
+{72:print_info} echo 'the result of mysql-percona-56 order by clause is pass'
the result of mysql-percona-56 order by clause is pass
+{73:print_info} lava-test-case mysql-percona-56 order by clause --result pass
/usr/bin/lava-test-case mysql-percona-56 order by clause --result pass
+{518:mysql_select} mysql -e 'select * from employees.employees limit 3'
+{519:mysql_select} print_info 0 'mysql-percona-56 limit clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 limit clause'
+{72:print_info} echo 'the result of mysql-percona-56 limit clause is pass'
the result of mysql-percona-56 limit clause is pass
+{73:print_info} lava-test-case mysql-percona-56 limit clause --result pass
/usr/bin/lava-test-case mysql-percona-56 limit clause --result pass
++{522:mysql_select} mysql -e 'show variables like '\''%secure_file_priv%'\''\G'
++{522:mysql_select} grep -i value
++{522:mysql_select} cut -d : -f 2
+{522:mysql_select} intopath=' '
+{523:mysql_select} echo
+{523:mysql_select} grep -i null
+{524:mysql_select} '[' 1 -ne 0 ']'
+{525:mysql_select} pushd .
~/test-definitions/auto-test/alisql ~/test-definitions/auto-test/alisql
+{526:mysql_select} cd
+{527:mysql_select} rm -f tmp.dump
+{528:mysql_select} mysql -e 'select * from employees.employees limit 10 into outfile '\''tmp.dump'\'''
+{529:mysql_select} print_info 0 'mysql-percona-56 into outfile clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 into outfile clause'
+{72:print_info} echo 'the result of mysql-percona-56 into outfile clause is pass'
the result of mysql-percona-56 into outfile clause is pass
+{73:print_info} lava-test-case mysql-percona-56 into outfile clause --result pass
/usr/bin/lava-test-case mysql-percona-56 into outfile clause --result pass
+{530:mysql_select} popd
~/test-definitions/auto-test/alisql
+{535:mysql_select} mysql -e 'use employees ;select * from employees as e inner join dept_emp as d on e.emp_no=d.emp_no limit 3'
+{536:mysql_select} print_info 0 'mysql-percona-56 inner join test'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 inner join test'
+{72:print_info} echo 'the result of mysql-percona-56 inner join test is pass'
the result of mysql-percona-56 inner join test is pass
+{73:print_info} lava-test-case mysql-percona-56 inner join test --result pass
/usr/bin/lava-test-case mysql-percona-56 inner join test --result pass
+{538:mysql_select} mysql -e 'use employees ; select * from employees e left join dept_emp d on e.emp_no=d.emp_no limit 3'
+{539:mysql_select} print_info 0 'mysql-percona-56 left join'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 left join'
+{72:print_info} echo 'the result of mysql-percona-56 left join is pass'
the result of mysql-percona-56 left join is pass
+{73:print_info} lava-test-case mysql-percona-56 left join --result pass
/usr/bin/lava-test-case mysql-percona-56 left join --result pass
+{541:mysql_select} mysql -e 'use employees ; select * from employees e right join dept_emp d on e.emp_no=d.emp_no limit 3 '
+{542:mysql_select} print_info 0 'mysql-percona-56 right join'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 right join'
+{72:print_info} echo 'the result of mysql-percona-56 right join is pass'
the result of mysql-percona-56 right join is pass
+{73:print_info} lava-test-case mysql-percona-56 right join --result pass
/usr/bin/lava-test-case mysql-percona-56 right join --result pass
+{545:mysql_select} echo 'mysql subquery as scalar operand'
mysql subquery as scalar operand
+{546:mysql_select} mysql -e 'use employees ; select upper((select dept_name from departments where dept_no='\''d001'\'')) as dept from dual'
dept
NULL
+{547:mysql_select} print_info 0 'mysql-percona-56 subquery as saclar operand'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 subquery as saclar operand'
+{72:print_info} echo 'the result of mysql-percona-56 subquery as saclar operand is pass'
the result of mysql-percona-56 subquery as saclar operand is pass
+{73:print_info} lava-test-case mysql-percona-56 subquery as saclar operand --result pass
/usr/bin/lava-test-case mysql-percona-56 subquery as saclar operand --result pass
+{549:mysql_select} echo 'mysql subquery use comparisions'
mysql subquery use comparisions
+{550:mysql_select} mysql -e 'use employees ; select * from salaries as s where emp_no = (select emp_no from employees where last_name ='\''peac'\'' and first_name ='\''yifei'\'');'
+{551:mysql_select} print_info 0 'mysql-percona-56 subquery comparisons'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 subquery comparisons'
+{72:print_info} echo 'the result of mysql-percona-56 subquery comparisons is pass'
the result of mysql-percona-56 subquery comparisons is pass
+{73:print_info} lava-test-case mysql-percona-56 subquery comparisons --result pass
/usr/bin/lava-test-case mysql-percona-56 subquery comparisons --result pass
+{553:mysql_select} echo 'mysql subquery with in'
mysql subquery with in
+{554:mysql_select} mysql -e 'use employees ; select * from employees where emp_no in (select emp_no from dept_manager)'
+{555:mysql_select} print_info 0 'mysql-percona-56 subquery in'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 subquery in'
+{72:print_info} echo 'the result of mysql-percona-56 subquery in is pass'
the result of mysql-percona-56 subquery in is pass
+{73:print_info} lava-test-case mysql-percona-56 subquery in --result pass
/usr/bin/lava-test-case mysql-percona-56 subquery in --result pass
+{557:mysql_select} echo 'mysql subquery with not in'
mysql subquery with not in
+{558:mysql_select} mysql -e 'use employees ; select count(*) from employees where emp_no not in (select emp_no from dept_manager)'
count(*)
0
+{559:mysql_select} print_info 0 'mysql-percona-56 with not in'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 with not in'
+{72:print_info} echo 'the result of mysql-percona-56 with not in is pass'
the result of mysql-percona-56 with not in is pass
+{73:print_info} lava-test-case mysql-percona-56 with not in --result pass
/usr/bin/lava-test-case mysql-percona-56 with not in --result pass
+{561:mysql_select} echo 'mysql subquery with any'
mysql subquery with any
+{562:mysql_select} mysql -e 'use employees ; select count(*) from employees where emp_no = any (select emp_no from dept_manager)'
count(*)
0
+{563:mysql_select} print_info 0 'mysql-percona-56 with =any'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 with =any'
+{72:print_info} echo 'the result of mysql-percona-56 with =any is pass'
the result of mysql-percona-56 with =any is pass
+{73:print_info} lava-test-case mysql-percona-56 with =any --result pass
/usr/bin/lava-test-case mysql-percona-56 with =any --result pass
+{566:mysql_select} echo 'mysql subquery with  all'
mysql subquery with  all
+{567:mysql_select} mysql -e 'use employees ;  select count(*) from salaries s where s.salary > all (select s.salary from dept_manager d join salaries s on d.emp_no = s.emp_no where year(s.to_date)>year(current_date));'
count(*)
0
+{568:mysql_select} print_info 0 'mysql-percona-56 with all'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 with all'
+{72:print_info} echo 'the result of mysql-percona-56 with all is pass'
the result of mysql-percona-56 with all is pass
+{73:print_info} lava-test-case mysql-percona-56 with all --result pass
/usr/bin/lava-test-case mysql-percona-56 with all --result pass
+{571:mysql_select} echo 'mysql subquery in the from clause'
mysql subquery in the from clause
+{572:mysql_select} mysql -e 'use employees ; select * from (select * from dept_manager) as new_table'
+{573:mysql_select} print_info 0 'mysql-percona-56 subquery in from clause'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 subquery in from clause'
+{72:print_info} echo 'the result of mysql-percona-56 subquery in from clause is pass'
the result of mysql-percona-56 subquery in from clause is pass
+{73:print_info} lava-test-case mysql-percona-56 subquery in from clause --result pass
/usr/bin/lava-test-case mysql-percona-56 subquery in from clause --result pass
+{576:mysql_select} echo 'mysql update'
mysql update
+{577:mysql_select} mysql -e 'use employees ; update dept_manager set dept_no = '\''d007'\'' where emp_no = '\''111939'\'''
+{578:mysql_select} print_info 0 'mysql-percona-56 update row information'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 update row information'
+{72:print_info} echo 'the result of mysql-percona-56 update row information is pass'
the result of mysql-percona-56 update row information is pass
+{73:print_info} lava-test-case mysql-percona-56 update row information --result pass
/usr/bin/lava-test-case mysql-percona-56 update row information --result pass
+{30:} mysql_insert
+{584:mysql_insert} mysql -e 'drop database if exists test;
            create database test ;
            use test;
            create table t1 (id int , name varchar(20) , age int);
            create table t2 (id int , name varchar(20))'
+{589:mysql_insert} mysql -e 'use test ; insert into t1 values(1 , "tan" , 20)'
+{590:mysql_insert} print_info 0 'mysql-percona-56 insert into all colume values'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 insert into all colume values'
+{72:print_info} echo 'the result of mysql-percona-56 insert into all colume values is pass'
the result of mysql-percona-56 insert into all colume values is pass
+{73:print_info} lava-test-case mysql-percona-56 insert into all colume values --result pass
/usr/bin/lava-test-case mysql-percona-56 insert into all colume values --result pass
+{592:mysql_insert} mysql -e 'use test ; insert into t1 (id,name) values(2,"lee")'
+{593:mysql_insert} print_info 0 'mysql-percona-56 insert into special column value'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 insert into special column value'
+{72:print_info} echo 'the result of mysql-percona-56 insert into special column value is pass'
the result of mysql-percona-56 insert into special column value is pass
+{73:print_info} lava-test-case mysql-percona-56 insert into special column value --result pass
/usr/bin/lava-test-case mysql-percona-56 insert into special column value --result pass
+{595:mysql_insert} mysql -e 'use test; insert into t1 set id=2 , name="tom" , age=20'
+{596:mysql_insert} print_info 0 'mysql-percona-56 insert into set '
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 insert into set '
+{72:print_info} echo 'the result of mysql-percona-56 insert into set  is pass'
the result of mysql-percona-56 insert into set  is pass
+{73:print_info} lava-test-case mysql-percona-56 insert into set --result pass
/usr/bin/lava-test-case mysql-percona-56 insert into set --result pass
+{598:mysql_insert} mysql -e 'use test ; insert into t2 select t1.id , t1.name from t1 where t1.age =20'
+{599:mysql_insert} print_info 0 'mysql-percona-56 insert select'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 insert select'
+{72:print_info} echo 'the result of mysql-percona-56 insert select is pass'
the result of mysql-percona-56 insert select is pass
+{73:print_info} lava-test-case mysql-percona-56 insert select --result pass
/usr/bin/lava-test-case mysql-percona-56 insert select --result pass
+{32:} mysql_transaction
++{612:mysql_transaction} mysql -e 'show variables like '\''%autocommit%'\'''
+{612:mysql_transaction} res='Variable_name	Value
autocommit	ON'
+{613:mysql_transaction} echo Variable_name Value autocommit ON
+{613:mysql_transaction} grep ON
Variable_name Value autocommit ON
+{614:mysql_transaction} '[' 0 -eq 0 ']'
+{615:mysql_transaction} true
+{619:mysql_transaction} print_info 0 'mysql-percona-56 get default commit mode'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 get default commit mode'
+{72:print_info} echo 'the result of mysql-percona-56 get default commit mode is pass'
the result of mysql-percona-56 get default commit mode is pass
+{73:print_info} lava-test-case mysql-percona-56 get default commit mode --result pass
/usr/bin/lava-test-case mysql-percona-56 get default commit mode --result pass
+{621:mysql_transaction} mysql -e 'set autocommit=off'
+{622:mysql_transaction} print_info 0 'mysql-percona-56 close autocommit'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 close autocommit'
+{72:print_info} echo 'the result of mysql-percona-56 close autocommit is pass'
the result of mysql-percona-56 close autocommit is pass
+{73:print_info} lava-test-case mysql-percona-56 close autocommit --result pass
/usr/bin/lava-test-case mysql-percona-56 close autocommit --result pass
+{623:mysql_transaction} mysql -e 'set autocommit=on'
++{625:mysql_transaction} mysql -e 'select @@tx_isolation'
+{625:mysql_transaction} res1='@@tx_isolation
REPEATABLE-READ'
+{626:mysql_transaction} echo @@tx_isolation REPEATABLE-READ
+{626:mysql_transaction} grep -i repeatable-read
@@tx_isolation REPEATABLE-READ
+{627:mysql_transaction} '[' 0 -eq 0 ']'
+{628:mysql_transaction} true
+{632:mysql_transaction} print_info 0 'mysql-percona-56 default isolation level is repreatble_read'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 default isolation level is repreatble_read'
+{72:print_info} echo 'the result of mysql-percona-56 default isolation level is repreatble_read is pass'
the result of mysql-percona-56 default isolation level is repreatble_read is pass
+{73:print_info} lava-test-case mysql-percona-56 default isolation level is repreatble_read --result pass
/usr/bin/lava-test-case mysql-percona-56 default isolation level is repreatble_read --result pass
+{634:mysql_transaction} mysql -e 'set session transaction isolation level read uncommitted'
+{635:mysql_transaction} print_info 0 'mysql-percona-56 set isolation level'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 set isolation level'
+{72:print_info} echo 'the result of mysql-percona-56 set isolation level is pass'
the result of mysql-percona-56 set isolation level is pass
+{73:print_info} lava-test-case mysql-percona-56 set isolation level --result pass
/usr/bin/lava-test-case mysql-percona-56 set isolation level --result pass
+{638:mysql_transaction} mysql -e '
    drop database if exists test;
    create database test;
    use test;
    create table t1 (id int , name varchar(20));
    insert into t1 values (1,"lee") ,(2,"tom");
    exit
'
+{649:mysql_transaction} echo ''
+{650:mysql_transaction} mysql -e '
        set session transaction isolation level read uncommitted;
        use test;
        tee a.log ;
        select name from t1 where id=1;
        select sleep(1);
        select name from t1 where id=1;
        notee;
        exit
    '
+{660:mysql_transaction} mysql -e '
        set session transaction isolation level read uncommitted;
        start transaction;
        use test;
        update t1 set name="newlee" where id=1;
        select sleep(2);
        rollback;
        exit
'
+{669:mysql_transaction} sleep 3
Logging to file 'a.log'
name
newlee
sleep(1)
0
name
newlee
Outfile disabled.
sleep(2)
0
+{670:mysql_transaction} grep newlee a.log
newlee
newlee
+{671:mysql_transaction} '[' 0 -eq 0 ']'
+{672:mysql_transaction} true
+{676:mysql_transaction} print_info 0 'mysql-percona-56 transaction read uncommitted '
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 transaction read uncommitted '
+{72:print_info} echo 'the result of mysql-percona-56 transaction read uncommitted  is pass'
the result of mysql-percona-56 transaction read uncommitted  is pass
+{73:print_info} lava-test-case mysql-percona-56 transaction read uncommitted --result pass
/usr/bin/lava-test-case mysql-percona-56 transaction read uncommitted --result pass
+{680:mysql_transaction} echo ''
+{681:mysql_transaction} mysql -e '
        set session transaction isolation level read committed;
        use test; 
        tee a.log;
        start transaction;
        select name from t1 where id=1;
        select sleep(1);
        select name from t1 where id=1;
        notee;
        exit
    '
+{692:mysql_transaction} mysql -e '
        use test;
        set session transaction isolation level read committed;
        start transaction;
        update t1 set name="newlee" where id=1;
        commit;
        exit
    '
+{700:mysql_transaction} sleep 1
Logging to file 'a.log'
name
lee
sleep(1)
0
name
newlee
Outfile disabled.
+{701:mysql_transaction} grep newlee a.log
newlee
+{702:mysql_transaction} '[' 0 -eq 0 ']'
+{703:mysql_transaction} true
+{707:mysql_transaction} print_info 0 'mysql-percona-56 transaction read committed'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 transaction read committed'
+{72:print_info} echo 'the result of mysql-percona-56 transaction read committed is pass'
the result of mysql-percona-56 transaction read committed is pass
+{73:print_info} lava-test-case mysql-percona-56 transaction read committed --result pass
/usr/bin/lava-test-case mysql-percona-56 transaction read committed --result pass
+{710:mysql_transaction} echo ''
+{711:mysql_transaction} mysql -e '
        set session transaction isolation level repeatable read;
        use test;
        tee a.log ;
        start transaction;
        select name from t1 where id=1;
        select sleep(1);
        select name from t1 where id=1;
        notee;
        exit
    '
Logging to file 'a.log'
name
newlee
sleep(1)
0
name
newlee
Outfile disabled.
+{722:mysql_transaction} mysql -e '
        use test;
        set session transaction isolation level repeatable read;
        start transaction;
        update t1 set name="lizi" where id=1;
        commit;
        exit
    '
+{730:mysql_transaction} sleep 1
+{731:mysql_transaction} grep lizi a.log
+{732:mysql_transaction} '[' 1 -ne 0 ']'
+{733:mysql_transaction} true
+{737:mysql_transaction} print_info 0 'mysql-percona-56 transaction repreatable read'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 transaction repreatable read'
+{72:print_info} echo 'the result of mysql-percona-56 transaction repreatable read is pass'
the result of mysql-percona-56 transaction repreatable read is pass
+{73:print_info} lava-test-case mysql-percona-56 transaction repreatable read --result pass
/usr/bin/lava-test-case mysql-percona-56 transaction repreatable read --result pass
+{740:mysql_transaction} echo ''
+{751:mysql_transaction} pid1=32582
+{741:mysql_transaction} mysql -e '
        use test;
        set session transaction isolation level serializable;
        start transaction;
        insert into t1 values (1, "serializable");
        select * from t1;
        select sleep(10);
        commit;
        exit
    '
+{763:mysql_transaction} pid=32583
+{752:mysql_transaction} mysql -e '
        use test;
        tee a.log;
        set session transaction isolation level serializable;
        start transaction;
        insert into t1 values (5,"ddd");
        select * from t1;
        commit;
        notee;
        exit
    '
+{764:mysql_transaction} true
+{767:mysql_transaction} ps -ef
+{767:mysql_transaction} grep 32583
+{767:mysql_transaction} grep -v grep
ERROR 1213 (40001) at line 6: Deadlock found when trying to get lock; try restarting transaction
Logging to file 'a.log'
id	name
1	lizi
2	tom
5	ddd
Outfile disabled.
+{768:mysql_transaction} '[' 1 -eq 0 ']'
+{771:mysql_transaction} break
+{774:mysql_transaction} cat a.log

id	name
1	lizi
2	tom
5	ddd
+{775:mysql_transaction} kill -9 32582
./../percona/mysql.sh: line 775: kill: (32582) - No such process
+{777:mysql_transaction} grep -i error a.log
+{778:mysql_transaction} '[' 1 -eq 0 ']'
+{781:mysql_transaction} false
+{783:mysql_transaction} print_info 1 'mysql-percona-56 transaction serializable'
+{65:print_info} '[' 1 -ne 0 ']'
+{66:print_info} result=fail
+{71:print_info} test_name='mysql-percona-56 transaction serializable'
+{72:print_info} echo 'the result of mysql-percona-56 transaction serializable is fail'
the result of mysql-percona-56 transaction serializable is fail
+{73:print_info} lava-test-case mysql-percona-56 transaction serializable --result fail
/usr/bin/lava-test-case mysql-percona-56 transaction serializable --result fail
+{35:} mysql_innodb
+{871:mysql_innodb} mysql -e 'show variables like '\''default_storage_engine'\'''
+{871:mysql_innodb} grep -i innodb
default_storage_engine	InnoDB
+{872:mysql_innodb} '[' 0 -eq 0 ']'
+{873:mysql_innodb} true
+{877:mysql_innodb} print_info 0 'mysql-percona-56 default storage engine is innodb'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 default storage engine is innodb'
+{72:print_info} echo 'the result of mysql-percona-56 default storage engine is innodb is pass'
the result of mysql-percona-56 default storage engine is innodb is pass
+{73:print_info} lava-test-case mysql-percona-56 default storage engine is innodb --result pass
/usr/bin/lava-test-case mysql-percona-56 default storage engine is innodb --result pass
+{879:mysql_innodb} mysql -e 'show variables like '\''innodb_file_per_table'\'''
+{879:mysql_innodb} grep ON
innodb_file_per_table	ON
+{880:mysql_innodb} print_info 0 'mysql-percona-56 innodb default enable independend tablespace'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='mysql-percona-56 innodb default enable independend tablespace'
+{72:print_info} echo 'the result of mysql-percona-56 innodb default enable independend tablespace is pass'
the result of mysql-percona-56 innodb default enable independend tablespace is pass
+{73:print_info} lava-test-case mysql-percona-56 innodb default enable independend tablespace --result pass
/usr/bin/lava-test-case mysql-percona-56 innodb default enable independend tablespace --result pass
+{37:} alisql_stop_custom
+{80:alisql_stop_custom} mysqladmin shutdown
171227 17:27:55 mysqld_safe mysqld from pid file /mysql/3306/run/mysqld.pid ended
+{81:alisql_stop_custom} ps -ef
+{81:alisql_stop_custom} grep mysqld
+{81:alisql_stop_custom} grep -v grep
+{82:alisql_stop_custom} '[' 1 -eq 0 ']'
+{85:alisql_stop_custom} true
+{87:alisql_stop_custom} print_info 0 'alisql stop server by command'
+{65:print_info} '[' 0 -ne 0 ']'
+{68:print_info} result=pass
+{71:print_info} test_name='alisql stop server by command'
+{72:print_info} echo 'the result of alisql stop server by command is pass'
the result of alisql stop server by command is pass
+{73:print_info} lava-test-case alisql stop server by command --result pass
/usr/bin/lava-test-case alisql stop server by command --result pass
+{89:alisql_stop_custom} rm -f '~./.my.cnf'
